Функция ВызватьИсключениеВС(ТекстИсключения)
	ВызватьИсключение("<WSERRSTART>"+ТекстИсключения+"<WSERREND>");
КонецФункции
Функция ЧистаяСтрока(Знач ГрязнаяСтрока)
	ГрязнаяСтрока=СтрЗаменить(ГрязнаяСтрока,"'","-");
	ГрязнаяСтрока=СтрЗаменить(ГрязнаяСтрока,Символы.ВК," ");
	ГрязнаяСтрока=СтрЗаменить(ГрязнаяСтрока,Символы.ПС,"-");
	ГрязнаяСтрока=СтрЗаменить(ГрязнаяСтрока,Символы.НПП," ");
	ГрязнаяСтрока=СтрЗаменить(ГрязнаяСтрока,";","");
	ГрязнаяСтрока=СтрЗаменить(ГрязнаяСтрока,"""","''");
	ГрязнаяСтрока=СтрЗаменить(ГрязнаяСтрока,"%","");
	ГрязнаяСтрока=СтрЗаменить(ГрязнаяСтрока,"&","");
	ГрязнаяСтрока=СтрЗаменить(ГрязнаяСтрока,"<","[");
	ГрязнаяСтрока=СтрЗаменить(ГрязнаяСтрока,">","]"); 
	ГрязнаяСтрока=СокрЛП(ГрязнаяСтрока);
	возврат Грязнаястрока;
КонецФункции	
Функция СобратьТовары(ПоСписку,УзелПО,ТЗХарактеристик = Неопределено)
	
	
	ОбъектСписка=ФабрикаXDTO.Создать(ФабрикаXDTO.Тип("http://www.data-mobile.ru","DMArtList"));

	ТипЦен=УзелПО.ТипЦен;
	ВключатьАртикул=УзелПО.ДобавлятьАртикулВНаименование;
	

	ЗапросТоваров=Новый Запрос();
	
	ЗапросТоваров.УстановитьПараметр("Товар",ПоСписку);
	ЗапросТоваров.УстановитьПараметр("ВсеТовары",Ложь);	
	Если ПоСписку.Количество()=0 тогда
		ЗапросТоваров.УстановитьПараметр("ВсеТовары",Истина);
	КонецЕсли;
	
	ЗапросТоваров.УстановитьПараметр("КаталогиТовара",УзелПО.ДоступныеГруппыТоваров.ВыгрузитьКолонку("Номенклатура"));
	ЗапросТоваров.УстановитьПараметр("ВсеКаталоги",Ложь);	
	Если УзелПО.ДоступныеГруппыТоваров.Количество()=0 тогда
		ЗапросТоваров.УстановитьПараметр("ВсеКаталоги",Истина);
	КонецЕсли;


	ТекстЗапроса="ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
				 //ВЫБОРКА ССЫЛОК ТОВАРОВ И ХАРАКТЕРИСТИК ПО РАЗНЫМ УСЛОВИЯМ ВЕДЕНИЯ ХАРАКТЕРИСТИК 
				 |	Номенклатура.Ссылка КАК Номенклатура,
				 |	ЕСТЬNULL(ХарактеристикиНоменклатуры.Ссылка, ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.Пустаяссылка)) КАК Характеристика
				 |ПОМЕСТИТЬ СписокТоваровОбщий
				 |ИЗ
				 | 	Справочник.Номенклатура КАК Номенклатура
				 |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ХарактеристикиНоменклатуры КАК ХарактеристикиНоменклатуры
				 |			ПО ХарактеристикиНоменклатуры.Владелец = Номенклатура.Ссылка
				 |			И Номенклатура.ИспользованиеХарактеристик = ЗНАЧЕНИЕ(Перечисление.ВариантыИспользованияХарактеристикНоменклатуры.ИндивидуальныеДляНоменклатуры)	 				 
				 |ГДЕ
				 |	НЕ Номенклатура.ЭтоГруппа
				 |	И (Номенклатура.Ссылка В (&Товар) ИЛИ &ВсеТовары)
				 |	И (Номенклатура.Ссылка В ИЕРАРХИИ (&КаталогиТовара) ИЛИ &ВсеКаталоги)
				 |
				 |ОБЪЕДИНИТЬ
				 |	
				 |ВЫБРАТЬ РАЗЛИЧНЫЕ
				 |	Номенклатура.Ссылка КАК Номенклатура,
				 |	ЕСТЬNULL(ХарактеристикиНоменклатуры.Ссылка, ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.Пустаяссылка)) КАК Характеристика
				 |ИЗ
				 |	Справочник.Номенклатура КАК Номенклатура
				 |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ХарактеристикиНоменклатуры КАК ХарактеристикиНоменклатуры
				 |			ПО ХарактеристикиНоменклатуры.Владелец = Номенклатура.ВидНоменклатуры
				 |			И Номенклатура.ИспользованиеХарактеристик = ЗНАЧЕНИЕ(Перечисление.ВариантыИспользованияХарактеристикНоменклатуры.ОбщиеДляВидаНоменклатуры)
				 |ГДЕ
				 |	НЕ Номенклатура.ЭтоГруппа
				 |	И (Номенклатура.Ссылка В (&Товар)ИЛИ &ВсеТовары)
				 |	И (Номенклатура.Ссылка В ИЕРАРХИИ (&КаталогиТовара)ИЛИ &ВсеКаталоги)
				 |	И НЕ ХарактеристикиНоменклатуры.Ссылка ЕСТЬ NULL   
				 |
				 |ОБЪЕДИНИТЬ
				 |
				 |ВЫБРАТЬ РАЗЛИЧНЫЕ
				 |	Номенклатура.Ссылка КАК Номенклатура,
				 |	ЕСТЬNULL(ХарактеристикиНоменклатуры.Ссылка, ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.Пустаяссылка)) КАК Характеристика
				 |ИЗ
				 |	Справочник.Номенклатура КАК Номенклатура
				 |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ХарактеристикиНоменклатуры КАК ХарактеристикиНоменклатуры
				 |			ПО ХарактеристикиНоменклатуры.Владелец = Номенклатура.ВладелецХарактеристик
				 |			И Номенклатура.ИспользованиеХарактеристик = ЗНАЧЕНИЕ(Перечисление.ВариантыИспользованияХарактеристикНоменклатуры.ОбщиеСДругимВидомНоменклатуры)		
				 |ГДЕ
				 |	НЕ Номенклатура.ЭтоГруппа
				 |	И (Номенклатура.Ссылка В (&Товар) ИЛИ &ВсеТовары)
				 |	И (Номенклатура.Ссылка В ИЕРАРХИИ (&КаталогиТовара) ИЛИ &ВсеКаталоги)
				 |	И НЕ ХарактеристикиНоменклатуры.Ссылка ЕСТЬ NULL	
				 |	
				 |;
				 |////////////////////////////////////////////////////////////////////////////////
	             |ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
				 //ВЫБОРКА ЦЕН И ДОПОЛНИТЕЛЬНЫХ ДАННЫХ ПО ТОВАРАМ
	             |	СписокТоваровОбщий.Номенклатура,
	             |	СписокТоваровОбщий.Характеристика,
				 |	ЛОЖЬ КАК ЭтоНовыйТовар,
				 |	ВЫБОР
	             |		КОГДА СписокТоваровОбщий.Номенклатура.ПометкаУдаления ИЛИ СписокТоваровОбщий.Характеристика.ПометкаУдаления	             
				 |			ТОГДА ИСТИНА
	             |		ИНАЧЕ ЛОЖЬ
	             |	КОНЕЦ КАК Удалить,
				 |	ВЫБОР
	             |		КОГДА &ВключатьАртикул
	             |			ТОГДА ВЫБОР КОГДА СписокТоваровОбщий.Номенклатура.Артикул = """" ТОГДА """" ИНАЧЕ СписокТоваровОбщий.Номенклатура.Артикул + ""-"" КОНЕЦ
	             |		ИНАЧЕ """"
	             |	КОНЕЦ + СписокТоваровОбщий.Номенклатура.Наименование + "" "" + ЕстьNULL(СписокТоваровОбщий.Характеристика.Наименование, """") КАК Наименование,
	             |	ЕСТЬNULL(ВЫРАЗИТЬ(ЦеныНоменклатурыСрезПоследних.Цена / 
			 	 |			(ВЫБОР КОГДА ЕстьNULL(ЦеныНоменклатурыСрезПоследних.Упаковка.Числитель,1) = 0 ТОГДА 1 ИНАЧЕ ЕстьNULL(ЦеныНоменклатурыСрезПоследних.Упаковка.Числитель,1) КОНЕЦ / 
			 	 |		 	ВЫБОР КОГДА ЕстьNULL(ЦеныНоменклатурыСрезПоследних.Упаковка.Знаменатель,1) = 0 ТОГДА 1 ИНАЧЕ ЕстьNULL(ЦеныНоменклатурыСрезПоследних.Упаковка.Знаменатель,1) КОНЕЦ )
	             |		КАК ЧИСЛО(19, 2)), 0) КАК Цена,
	             |	ЕСТЬNULL(СписокТоваровОбщий.Номенклатура.ВидНоменклатуры.ИспользоватьСерии, Ложь) КАК ИспользоватьСерии
				 |ПОМЕСТИТЬ СписокТоваров
	             |ИЗ
	             |	СписокТоваровОбщий КАК СписокТоваровОбщий
	             |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныНоменклатуры.СрезПоследних КАК ЦеныНоменклатурыСрезПоследних
	             |			ПО ЦеныНоменклатурыСрезПоследних.Номенклатура = СписокТоваровОбщий.Номенклатура 
				 |				И ЦеныНоменклатурыСрезПоследних.Характеристика = СписокТоваровОбщий.Характеристика 
	             |				И ЦеныНоменклатурыСрезПоследних.ВидЦены = &ТипЦен
				 |
				 |;
				 |
				 |////////////////////////////////////////////////////////////////////////////////
				 |  ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
				 //ВЫБОРКА ШТРИХКОДОВ
				 |	ВЫРАЗИТЬ(ШтрихкодыНоменклатуры.Штрихкод КАК СТРОКА(60)) КАК Штрихкод,
	             |	ШтрихкодыНоменклатуры.Номенклатура,
	             |	ШтрихкодыНоменклатуры.Характеристика,
	             |	ЕСТЬNULL(ВЫБОР КОГДА ЕСТЬNULL(ШтрихкодыНоменклатуры.Упаковка.Числитель,1) =0 ТОГДА 1 ИНАЧЕ ЕСТЬNULL(ШтрихкодыНоменклатуры.Упаковка.Числитель,1) КОНЕЦ/ 
				 |	         ВЫБОР КОГДА ЕСТЬNULL(ШтрихкодыНоменклатуры.Упаковка.Знаменатель,1) = 0 ТОГДА 1 ИНАЧЕ ЕСТЬNULL(ШтрихкодыНоменклатуры.Упаковка.Знаменатель,1) КОНЕЦ, 1) КАК КФ,
	             |	ЕСТЬNULL(ШтрихкодыНоменклатуры.Упаковка.ЕдиницаИзмерения.Наименование, ШтрихкодыНоменклатуры.Номенклатура.ЕдиницаИзмерения.Наименование) КАК ЕИ
				 |ПОМЕСТИТЬ СписокШтрихкодов
				 |ИЗ
	             |	РегистрСведений.ШтрихкодыНоменклатуры КАК ШтрихкодыНоменклатуры
	             |ГДЕ
	             |	(ШтрихкодыНоменклатуры.Номенклатура В ИЕРАРХИИ  (&Товар) ИЛИ &ВсеТовары)
				 |	И (ШтрихкодыНоменклатуры.Номенклатура В ИЕРАРХИИ (&КаталогиТовара) ИЛИ &ВсеКаталоги)
	             |
	             |ОБЪЕДИНИТЬ
	             |
	             |ВЫБРАТЬ РАЗЛИЧНЫЕ
	             |	ВЫРАЗИТЬ(ДатаМобайл_НовыеШтрихкоды.ШтрихКод КАК Строка(60)),
	             |	ДатаМобайл_НовыеШтрихкоды.Номенклатура,
	             |	ДатаМобайл_НовыеШтрихкоды.Характеристика,
	             |	ДатаМобайл_НовыеШтрихкоды.Коэффициент,
	             |	ДатаМобайл_НовыеШтрихкоды.Наименование
	             |ИЗ
	             |	РегистрСведений.ДатаМобайл_НовыеШтрихкоды КАК ДатаМобайл_НовыеШтрихкоды
	             |ГДЕ
	             |	(ДатаМобайл_НовыеШтрихкоды.Номенклатура В ИЕРАРХИИ (&Товар) ИЛИ &ВсеТовары)
				 |	И (ДатаМобайл_НовыеШтрихкоды.Номенклатура В ИЕРАРХИИ (&КаталогиТовара) ИЛИ &ВсеКаталоги)
				 |	И ДатаМобайл_НовыеШтрихкоды.Номенклатура ССЫЛКА Справочник.Номенклатура
				 |
				 |;
	             |
	             |////////////////////////////////////////////////////////////////////////////////
	          	 |ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
				 //СОЕДИНЕНИЕ ТАБЛИЦ ТОВАРОВ И ШТРИХКОДОВ
	             |	СписокТоваров.Номенклатура,
				 |	СписокТоваров.Характеристика,
				 |	СписокТоваров.ЭтоНовыйТовар,
				 |	СписокТоваров.Удалить,
				 |	СписокТоваров.Наименование,
	             |	СписокТоваров.Цена,
				 |	СписокТоваров.ИспользоватьСерии,
				 |	ЕСТЬNULL(СписокШтрихкодов.Штрихкод,"""") КАК Штрихкод,
				 |	ЕСТЬNULL(СписокШтрихкодов.КФ, 1) КАК КФ,
				 |  ЕСТЬNULL(СписокШтрихкодов.ЕИ,""шт."") КАК  ЕИ
				 |ИЗ
	             |	СписокТоваров КАК СписокТоваров
				 |		ЛЕВОЕ СОЕДИНЕНИЕ СписокШтрихкодов КАК СписокШтрихкодов
	             |			ПО СписокШтрихкодов.Номенклатура = СписокТоваров.Номенклатура 
				 |				И СписокШтрихкодов.Характеристика = СписокТоваров.Характеристика 
				 |ИТОГИ ПО 
				 |   СписокТоваров.Номенклатура, СписокТоваров.Характеристика
				 |   
				 |;
                 | УНИЧТОЖИТЬ  СписокТоваровОбщий
				 |;
                 | УНИЧТОЖИТЬ  СписокТоваров
				 |;
                 | УНИЧТОЖИТЬ  СписокШтрихкодов
				 |";

				 
			
 
	ЗапросТоваров.Текст=ТекстЗапроса;
	лТипНеопределеннойДлины=Тип("Строка");
	
	
	
	ЗапросТоваров.УстановитьПараметр("Узел",УзелПО);
	ЗапросТоваров.УстановитьПараметр("ТипЦен",ТипЦен);
	ЗапросТоваров.УстановитьПараметр("ВключатьАртикул",ВключатьАртикул);					 
	
	Товары=ЗапросТоваров.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);	
	
	т=0;
	х=0;
	ш=0;
	Пока Товары.Следующий() цикл
		т=т+1;
		
		СтрХарактеристика=Товары.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		
		Пока СтрХарактеристика.Следующий() цикл
		х=х+1;
		
		СтрТовара=СтрХарактеристика.Выбрать();
		n=0;
		
		Пока СтрТовара.Следующий() цикл
			ш=ш+1;

			Если n=0 тогда
				
				ОбъектТовара=ФабрикаXDTO.Создать(ФабрикаXDTO.Тип("http://www.data-mobile.ru","DMArt"));

				Попытка 
					Если СтрТовара.Номенклатура.АлкогольнаяПродукция тогда // Проверим наличие сопоставленной номенклатуры и организации
						КодЕГАИС = "";
						Товар=СтрТовара.НаименованиеТовара;
						Запрос = Новый Запрос;
						Запрос.Текст = 
						"ВЫБРАТЬ
						|	СоответствиеНоменклатурыЕГАИС.АлкогольнаяПродукция КАК АлкогольнаяПродукция,
						|	СоответствиеНоменклатурыЕГАИС.Номенклатура КАК Номенклатура
						|ИЗ
						|	РегистрСведений.СоответствиеНоменклатурыЕГАИС КАК СоответствиеНоменклатурыЕГАИС
						|ГДЕ
						|	СоответствиеНоменклатурыЕГАИС.Номенклатура = &Номенклатура";
						Запрос.УстановитьПараметр("Номенклатура", СтрТовара.Номенклатура);
						ТаблицаСоответствий =Запрос.Выполнить().Выбрать();
						Если ТаблицаСоответствий.Количество() = 1 тогда
							Пока ТаблицаСоответствий.Следующий() цикл
								Товар = ТаблицаСоответствий.АлкогольнаяПродукция.Наименование;
								КодЕГАИС = ТаблицаСоответствий.АлкогольнаяПродукция.Код; 
								Прервать;
							КонецЦикла;		
						КонецЕсли;
						ОбъектТовара.DMArtName=ЛЕВ(ЧистаяСтрока(Товар), 150);					
					Иначе
						ОбъектТовара.DMArtName=ЛЕВ(ЧистаяСтрока(СтрТовара.Наименование), 150);
					КонецЕсли;	
				Исключение
					ОбъектТовара.DMArtName=ЛЕВ(ЧистаяСтрока(СтрТовара.Наименование), 150);
				КонецПопытки;

				
				Если ОбъектТовара.DMArtName="" тогда
					Продолжить;
				КонецЕсли;
				
				ОбъектТовара.DMArtID=?(СтрТовара.ЭтоНовыйТовар,"8n-"+СокрЛП(СтрТовара.Номенклатура.УникальныйИдентификатор()),"8U-"+СокрЛП(СтрТовара.Номенклатура.УникальныйИдентификатор())+СокрЛП(СтрТовара.Характеристика.УникальныйИдентификатор()));
				
				ОбъектТовара.DMArtPrice=СтрТовара.Цена;
				ОбъектТовара.DMisMark=СтрТовара.Удалить;
				ОбъектТовара.DMUseSN = СтрТовара.ИспользоватьСерии;
				
				Атрибуты = ПолучитьАтрибуты(УзелПО); 			
				Для сч=1 По 10 Цикл				
					ИмяАтрибута =  Атрибуты["ИмяАтрибута"+сч];
					
					Если СтрТовара.ЭтоНовыйТовар тогда
						ОбъектТовара["DMArtAttr"+сч] = "";
					ИначеЕсли СтрТовара.Номенклатура.АлкогольнаяПродукция и сч=6 тогда  
						ОбъектТовара["DMArtAttr"+сч] = Строка(КодЕГАИС);
					ИначеЕсли СтрТовара.Номенклатура.АлкогольнаяПродукция и сч=9 и ИмяАтрибута <> "" тогда
						Попытка
							ОбъектТовара["DMArtAttr"+сч] = ЧистаяСтрока(СтрТовара.Номенклатура[ИмяАтрибута].Код + " " + СтрТовара.Номенклатура[ИмяАтрибута].Наименование);
						Исключение
							ОбъектТовара["DMArtAttr"+сч] = "";
						КонецПопытки;
					ИначеЕсли ИмяАтрибута <> "" Тогда
						ОбъектТовара["DMArtAttr"+сч] = ЧистаяСтрока(СтрТовара.Номенклатура[ИмяАтрибута]);
					Иначе 
						ОбъектТовара["DMArtAttr"+сч] = "";
					КонецЕсли;	
				КонецЦикла;
				
			КонецЕсли;

			n=n+1;
			
			Если СтрТовара.ШтрихКод<>"" тогда
				ОбъектШК=ФабрикаXDTO.Создать(ФабрикаXDTO.Тип("http://www.data-mobile.ru","DMBarcode"));				
				
				Если СтрДлина(СтрТовара.ШтрихКод) = 13 // EAN13
				И Лев(СтрТовара.ШтрихКод, 1) = "2" // Внутренний штрихкод
				И Сред(СтрТовара.ШтрихКод, 2, 1) = "_" Тогда // Найден префикс весового товара
					Штрихкод =  Сред(СтрТовара.ШтрихКод, 3, 5);
					ОбъектШК.DMBarcode=ЧистаяСтрока(Штрихкод);
				Иначе	
					ОбъектШК.DMBarcode=ЧистаяСтрока(СтрТовара.ШтрихКод);
				КонецЕсли;	
				ОбъектШК.DMMeasureName=ЧистаяСтрока(СтрТовара.ЕИ);
				ОбъектШК.DMMeasureK=СтрТовара.КФ;
				ОбъектШК.DMisMark=СтрТовара.Удалить;
				ОбъектШК.DMUseSN=2;
				ОбъектТовара.DMBarcodeList.Добавить(ОбъектШК);
			КонецЕсли;			
		КонецЦикла;
	
		ОбъектСписка.DMArt.Добавить(ОбъектТовара);
	КонецЦикла;
	КонецЦикла;

	Возврат ОбъектСписка;

КонецФункции
Функция УстановитьЕдиницу(СтрокаТЧ)
	
	Если СтрокаТЧ.Штрихкод <> "" тогда
		
	зпр=Новый Запрос("ВЫБРАТЬ ПЕРВЫЕ 1
	                 |	ВЫБОР
	                 |		КОГДА Штрихкоды.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяССылка)
	                 |			ТОГДА Штрихкоды.Номенклатура.ЕдиницаИзмерения
	                 |		ИНАЧЕ Штрихкоды.Упаковка
	                 |	КОНЕЦ КАК ЕИ,
	                 |	Штрихкоды.Номенклатура,
	                 |	Штрихкоды.Характеристика
	                 |ПОМЕСТИТЬ тШтрихкоды
	                 |ИЗ
	                 |	РегистрСведений.ШтрихкодыНоменклатуры КАК Штрихкоды
	                 |ГДЕ
	                 |	Штрихкоды.Штрихкод = &код
	                 |	И (&ВсяНоменклатура
	                 |			ИЛИ Штрихкоды.Номенклатура = &Номенклатура)
	                 |	И (&ВсеХарактеристики
	                 |			ИЛИ Штрихкоды.Характеристика = &Характеристика)
	                 |;
	                 |
	                 |////////////////////////////////////////////////////////////////////////////////
	                 |ВЫБРАТЬ
	                 |	тШтрихкоды.ЕИ,
	                 |	тШтрихкоды.Номенклатура,
	                 |	тШтрихкоды.Характеристика
	                 |ИЗ
	                 |	тШтрихкоды КАК тШтрихкоды");
	
	зпр.УстановитьПараметр("Код",СтрокаТЧ.Штрихкод);
	зпр.УстановитьПараметр("Номенклатура",СтрокаТЧ.Номенклатура);
	зпр.УстановитьПараметр("Характеристика",СтрокаТЧ.ХарактеристикаНоменклатуры);
	зпр.УстановитьПараметр("ВсяНоменклатура",СтрокаТЧ.Номенклатура.Пустая());
	зпр.УстановитьПараметр("ВсеХарактеристики",СтрокаТЧ.ХарактеристикаНоменклатуры.Пустая());
	рез=зпр.Выполнить().Выгрузить();
	Если Рез.Количество()>0 тогда
		СтрокаТЧ.ЕдиницаИзмерения=Рез[0].ЕИ;
		Если СтрокаТЧ.Номенклатура.Пустая() тогда
			СтрокаТЧ.Номенклатура=Рез[0].Номенклатура;
		КонецЕсли;	
		Если СтрокаТЧ.ХарактеристикаНоменклатуры.Пустая() тогда
			СтрокаТЧ.ХарактеристикаНоменклатуры=Рез[0].Характеристика;
		КонецЕсли;	
	КонецЕсли;	
	
	Коэффициент = ?(СтрокаТЧ.ЕдиницаИзмерения.Числитель=0,1,СтрокаТЧ.ЕдиницаИзмерения.Числитель)/?(СтрокаТЧ.ЕдиницаИзмерения.Знаменатель=0,1,СтрокаТЧ.ЕдиницаИзмерения.Знаменатель);
	
	
	//Пересчет единиц мерных товаров, учет которых ведется в штуках
	Попытка
	Если НЕ Справочники.УпаковкиЕдиницыИзмерения.ЭтоМернаяЕдиница(СтрокаТЧ.Номенклатура.ЕдиницаИзмерения)
		И СтрокаТЧ.Номенклатура.ВесИспользовать 
		И НЕ СтрокаТЧ.Номенклатура.ВесЕдиницаИзмерения.Пустая()
		И СтрокаТЧ.Номенклатура.ВесЧислитель<>0 
		И СтрокаТЧ.ТСД.ПересчитыватьКоличество Тогда
		
		Коэффициент = СтрокаТЧ.Номенклатура.ВесЧислитель;
	КонецЕсли;
	Исключение
	КонецПопытки;
	//

	Попытка
		СтрокаТЧ.Количество = СтрокаТЧ.Количество/Коэффициент;
	Исключение
		СтрокаТЧ.Количество = СтрокаТЧ.Количество;
	КонецПопытки;

	КонецЕсли;

КонецФункции	
Функция ПолучитьАтрибуты(УзелПО)
	
	СтруктураАтрибутов = Новый Структура;
	СтруктураАтрибутов.Вставить("ИмяАтрибута1",УзелПО.ИмяАтрибута1);
	СтруктураАтрибутов.Вставить("ИмяАтрибута2",УзелПО.ИмяАтрибута2);
	СтруктураАтрибутов.Вставить("ИмяАтрибута3",УзелПО.ИмяАтрибута3);
	СтруктураАтрибутов.Вставить("ИмяАтрибута4",УзелПО.ИмяАтрибута4);
	СтруктураАтрибутов.Вставить("ИмяАтрибута5",УзелПО.ИмяАтрибута5);
	СтруктураАтрибутов.Вставить("ИмяАтрибута6",УзелПО.ИмяАтрибута6);
	СтруктураАтрибутов.Вставить("ИмяАтрибута7",УзелПО.ИмяАтрибута7);
	СтруктураАтрибутов.Вставить("ИмяАтрибута8",УзелПО.ИмяАтрибута8);
	СтруктураАтрибутов.Вставить("ИмяАтрибута9",УзелПО.ИмяАтрибута9);
	СтруктураАтрибутов.Вставить("ИмяАтрибута10",УзелПО.ИмяАтрибута10);
	
	
	Возврат СтруктураАтрибутов;	
	
КонецФункции

//////////////////////////////////////////////////////////////////////////////
Функция НайтиУзел(SN)
	Запрос=Новый Запрос("ВЫБРАТЬ первые 1
	|	ДатаМобайл_СписокТСД.Ссылка
	|ИЗ
	|	ПланОбмена.ДатаМобайл_СписокТСД КАК ДатаМобайл_СписокТСД
	|ГДЕ
	|	ДатаМобайл_СписокТСД.Код = &Код");
	Запрос.УстановитьПараметр("Код",SN);
	Рез=Запрос.Выполнить().Выбрать();
	Если Рез.Следующий() тогда
		Возврат Рез.Ссылка;
	КонецЕсли;	
	Возврат Неопределено;
КонецФункции	
Функция Logout(SN, UserName)
	УзелПО=НайтиУзел(SN);
	Если УзелПО=Неопределено тогда
		УзелПО = NewTSD(SN, UserName);
	КонецЕсли;	
	Узел=УзелПО.ПолучитьОбъект();
	Узел.ТекущийПользователь="";
	Узел.Записать();
	Возврат Истина;
КонецФункции
Функция Login(SN, UserName)
	УзелПО=НайтиУзел(SN);
	Если УзелПО=Неопределено тогда
		УзелПО = NewTSD(SN, UserName);
	КонецЕсли;	
	Узел=УзелПО.ПолучитьОбъект();
	Узел.ТекущийПользователь=UserName;
	Узел.Записать();
	Возврат Истина;
КонецФункции
Функция NewTSD(SN, UserName)
	НовыйТСД = ПланыОбмена.ДатаМобайл_СписокТСД.СоздатьУзел();
	НовыйТСД.Код = SN;
	НовыйТСД.Наименование = SN;
	НовыйТСД.ТекущийПользователь = UserName;
	НовыйТСД.Записать();	
	Возврат НовыйТСД.Ссылка;
КонецФункции
//////////////////////////////////////////////////////////////////////////////
Функция DMServerInfo()
	Возврат "Соединение с сервером установлено!";
КонецФункции
//////////////////////////////////////////////////////////////////////////////
Функция CreateEgaisArt(SN, UserName, DMArt, DMEgaisArt)
	
	УзелПО=НайтиУзел(SN);
	Если УзелПО=Неопределено тогда
		УзелПО = NewTSD(SN, UserName);
	КонецЕсли;
	
	ArtID=DMArt.DMArtID;
	AlcoArtID = DMEgaisArt.ArtID;
	
	Если Лев(ArtID,3)="8U-" тогда
		Возврат Истина;
	ИначеЕсли Лев(ArtID,3)="8n-" тогда
		лТовар=Справочники.ДатаМобайл_НовыеТовары.ПолучитьСсылку(Новый УникальныйИдентификатор(Сред(ArtID,4))).ПолучитьОбъект();
	Иначе	
		лТовар=Справочники.ДатаМобайл_НовыеТовары.СоздатьЭлемент();
	КонецЕсли;	
	лТовар.Пользователь=UserName;
	лТовар.Наименование=ЛЕВ(DMEgaisArt.ArtName, Метаданные.Справочники.Номенклатура.ДлинаНаименования);
	лТовар.ИдентификаторАлкоголя = AlcoArtID;
	попытка
		лТовар.ОбменДанными.Получатели.АвтоЗаполнение=Ложь;
		лТовар.ОбменДанными.Получатели.Заполнить();
		лТовар.ОбменДанными.Получатели.Удалить(УзелПО);
		лТовар.Записать();
	Исключение
		ВызватьИсключениеВС("CreateEgaisArt. Не удалось создать товар. "+ОписаниеОшибки());
		Возврат Ложь;
	Конецпопытки;	
	DMArt.DMArtID="8n-"+Строка(лТовар.Ссылка.УникальныйИдентификатор());
	
	
	Если DMArt.DMBarcodeList.Количество() = 0 Тогда
		Возврат Истина;	
	КонецЕсли;
	
	BarcodeStr = DMArt.DMBarcodeList.Получить(0);
	ШК=BarcodeStr.DMBarcode;
	
	Запрос=Новый Запрос(
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	ШтрихкодыНоменклатуры.Штрихкод
	|ПОМЕСТИТЬ ДоступныеТовары
	|ИЗ
	|	РегистрСведений.ШтрихкодыНоменклатуры КАК ШтрихкодыНоменклатуры
	|ГДЕ
	|	ШтрихкодыНоменклатуры.Штрихкод = &Штрихкод
	|	И ШтрихкодыНоменклатуры.Номенклатура ССЫЛКА Справочник.Номенклатура
	|");
	//|ОБЪЕДИНИТЬ
	//|
	//|ВЫБРАТЬ ПЕРВЫЕ 1
	//|	КодыВесовогоТовара.Номенклатура
	//|ИЗ
	//|	РегистрСведений.КодыТоваровПодключаемогоОборудованияOffline КАК КодыВесовогоТовара
	//|ГДЕ
	//|	КодыВесовогоТовара.Номенклатура = &ВесовойКод
	//|;
	//|
	//|////////////////////////////////////////////////////////////////////////////////
	//|ВЫБРАТЬ ПЕРВЫЕ 1
	//|	ДоступныеТовары.Штрихкод
	//|ИЗ
	//|	ДоступныеТовары КАК ДоступныеТовары");
	попытка 
		ШКЧ=Число(ШК);
	исключение
		ШКЧ=-1;
	конецпопытки;	
	Запрос.УстановитьПараметр("ВесовойКод",ШКЧ);
	Запрос.УстановитьПараметр("ШтрихКод",ШК);
	Рез=Запрос.Выполнить().Выбрать();
	ЕстьВСписке = ЛОЖЬ;
	Если Рез.Следующий() тогда//уже есть в списке шк
		//Возврат Ложь;
		ЕстьВСписке = Истина;
	КонецЕсли;	
	Если Не ЕстьВСписке Тогда
		лНЗ=РегистрыСведений.ДатаМобайл_НовыеШтрихкоды.СоздатьНаборЗаписей();
		//лНЗ.Отбор.Номенклатура.Установить(лТовар.Ссылка);
		лНЗ.Отбор.ШтрихКод.Установить(ШК);
		лШК=лНЗ.Добавить();
		лШК.Номенклатура=лТовар.Ссылка;
		лШК.ШтрихКод=ШК;
		лШК.Пользователь=UserName;
		лШК.Наименование=BarcodeStr.DMMeasureName;
		лШК.Коэффициент=BarcodeStr.DMMeasureK;
		попытка
			лНЗ.ОбменДанными.Получатели.АвтоЗаполнение=Ложь;
			лНЗ.ОбменДанными.Получатели.Заполнить();
			лНЗ.ОбменДанными.Получатели.Удалить(УзелПО);
			лНЗ.ОбменДанными.Загрузка=Истина;
			лНЗ.Записать(Истина);
		Исключение
			ВызватьИсключениеВС("CreateEgaisArt. Не удалось добавить штрихкод. "+ОписаниеОшибки());
			Возврат Ложь;
		Конецпопытки;
	КонецЕсли;
	
	Возврат Истина;

	
КонецФункции
Функция DeleteArt(SN, UserName, ArtID)
	УзелПО=НайтиУзел(SN);
	Если УзелПО=Неопределено тогда
		УзелПО = NewTSD(SN, UserName);
	КонецЕсли;

	Если Лев(ArtID,3)="8U-" тогда
		Возврат Ложь;
	ИначеЕсли Лев(ArtID,3)="8n-" тогда
		лТовар=Справочники.ДатаМобайл_НовыеТовары.ПолучитьСсылку(Новый УникальныйИдентификатор(Сред(ArtID,4))).ПолучитьОбъект();
	Иначе	
		Возврат Истина;
	КонецЕсли;	
	попытка
		лТовар.ОбменДанными.Получатели.АвтоЗаполнение=Ложь;
		лТовар.ОбменДанными.Получатели.Заполнить();
		лТовар.ОбменДанными.Получатели.Удалить(УзелПО);
		лТовар.Удалить();
	Исключение
		ВызватьИсключениеВС("DeleteArt. Не удалось удалить товар. "+ОписаниеОшибки());
		Возврат Ложь;
	Конецпопытки;	
	Возврат Истина;
КонецФункции
Функция DeleteBarcode(SN, UserName, ArtID, Barcode)
	УзелПО=НайтиУзел(SN);
	Если УзелПО=Неопределено тогда
		УзелПО = NewTSD(SN, UserName);
	КонецЕсли;

	ШК=Barcode;
	лНЗ=РегистрыСведений.ДатаМобайл_НовыеШтрихкоды.СоздатьНаборЗаписей();
	лНЗ.Отбор.ШтрихКод.Установить(ШК);
	лНЗ.Прочитать();
	лНЗ.Очистить();
	попытка
		лНЗ.ОбменДанными.Получатели.АвтоЗаполнение=Ложь;
		лНЗ.ОбменДанными.Получатели.Заполнить();
		лНЗ.ОбменДанными.Получатели.Удалить(УзелПО);
		лНЗ.Записать(Истина);
	Исключение
		ВызватьИсключениеВС("DeleteBarcode. Не удалось удалить штрихкод. "+ОписаниеОшибки());
		Возврат Ложь;
	Конецпопытки;	
	Возврат Истина;
КонецФункции
Функция UpdateArt(SN, UserName, Art)
	УзелПО=НайтиУзел(SN);
	Если УзелПО=Неопределено тогда
		УзелПО = NewTSD(SN, UserName);
	КонецЕсли;

	ArtID=Art.DMArtID;
	Если Лев(ArtID,3)="8U-" тогда
		Возврат Истина;
	ИначеЕсли Лев(ArtID,3)="8n-" тогда
		лТовар=Справочники.ДатаМобайл_НовыеТовары.ПолучитьСсылку(Новый УникальныйИдентификатор(Сред(ArtID,4))).ПолучитьОбъект();
	Иначе	
		лТовар=Справочники.ДатаМобайл_НовыеТовары.СоздатьЭлемент();
	КонецЕсли;	
	лТовар.Пользователь=UserName;
	лТовар.Наименование=Лев(Art.DMArtName,Метаданные.Справочники.ДатаМобайл_НовыеТовары.ДлинаНаименования);
	попытка
		лТовар.ОбменДанными.Получатели.АвтоЗаполнение=Ложь;
		лТовар.ОбменДанными.Получатели.Заполнить();
		лТовар.ОбменДанными.Получатели.Удалить(УзелПО);
		лТовар.Записать();
	Исключение
		ВызватьИсключениеВС("UpdateArt. Не удалось обновить товар. "+ОписаниеОшибки());
		Возврат Ложь;
	Конецпопытки;	
	Art.DMArtID="8n-"+Строка(лТовар.Ссылка.УникальныйИдентификатор());
	Возврат Истина;
КонецФункции
Функция UpdateBarcode(SN, UserName, ArtID, Barcode)
	УзелПО=НайтиУзел(SN);
	Если УзелПО=Неопределено тогда
		NewTSD(SN, UserName);
		//ВызватьИсключениеВС("Не найден ТСД "+SN);
		Возврат Ложь;
	КонецЕсли;
	
	СХарактеристикой = ЛОЖЬ;
	ЭтоНовыйТовар = ЛОЖЬ;
	Если Лев(ArtID,3)="8U-" тогда
		лТовар=Справочники.Номенклатура.ПолучитьСсылку(Новый УникальныйИдентификатор(Сред(ArtID,4,36)));
		ИДХК=Сред(ArtID,40,36);
		Если ИДХК<>"00000000-0000-0000-0000-000000000000" тогда
			лХарактеристикаНоменклатуры=Справочники.ХарактеристикиНоменклатуры.ПолучитьСсылку(Новый УникальныйИдентификатор(ИДХК));
			СХарактеристикой = Истина;
		КонецЕсли;	
	ИначеЕсли Лев(ArtID,3)="8n-" тогда
		лТовар=Справочники.ДатаМобайл_НовыеТовары.ПолучитьСсылку(Новый УникальныйИдентификатор(Сред(ArtID,4)));
		ЭтоНовыйТовар = Истина;
	Иначе
		Возврат Ложь;
	КонецЕсли;	
	
	ШК=Barcode.DMBarcode;
	Запрос=Новый Запрос("ВЫБРАТЬ ПЕРВЫЕ 1
	                    |	ШтрихкодыНоменклатуры.Штрихкод
	                    |ИЗ
	                    |	РегистрСведений.ШтрихкодыНоменклатуры КАК ШтрихкодыНоменклатуры
	                    |ГДЕ
	                    |	ШтрихкодыНоменклатуры.Штрихкод = &Штрихкод");
	Запрос.УстановитьПараметр("ШтрихКод",ШК);
	Рез=Запрос.Выполнить().Выбрать();
	Если Рез.Следующий() тогда//уже есть в списке шк
		Возврат Истина;
	КонецЕсли;	
	
	
	Если УзелПО.ЗаписьВРегистр И НЕ ЭтоНовыйТовар тогда
		Если лТовар.ИспользоватьУпаковки тогда
			
			ЗапросУпаковок = Новый Запрос;
			ЗапросУпаковок.УстановитьПараметр("Номенклатура", лТовар);
			ЗапросУпаковок.УстановитьПараметр("НаборыУпаковокНоменклатура", лТовар.НаборУпаковок);
			ЗапросУпаковок.УстановитьПараметр("НаборыУпаковокВидНоменклатуры", лТовар.ВидНоменклатуры.НаборУпаковок);
			ЗапросУпаковок.УстановитьПараметр("Коэффициент", Barcode.DMMeasureK);	
			ЗапросУпаковок.Текст = "ВЫБРАТЬ ПЕРВЫЕ 1
			|	УпаковкиНоменклатуры.Ссылка
			|ИЗ
			|	Справочник.УпаковкиЕдиницыИзмерения КАК УпаковкиНоменклатуры
			|ГДЕ
			|	УпаковкиНоменклатуры.Владелец = &Номенклатура
			|	И УпаковкиНоменклатуры.Числитель = &Коэффициент
			|ОБЪЕДИНИТЬ
			|ВЫБРАТЬ
			|	УпаковкиНоменклатуры.Ссылка
			|ИЗ
			|	Справочник.УпаковкиЕдиницыИзмерения КАК УпаковкиНоменклатуры
			|ГДЕ
			|	УпаковкиНоменклатуры.Владелец = &НаборыУпаковокНоменклатура
			|	И УпаковкиНоменклатуры.Числитель = &Коэффициент
			|ОБЪЕДИНИТЬ
			|ВЫБРАТЬ
			|	УпаковкиНоменклатуры.Ссылка
			|ИЗ
			|	Справочник.УпаковкиЕдиницыИзмерения КАК УпаковкиНоменклатуры
			|ГДЕ
			|	УпаковкиНоменклатуры.Владелец = &НаборыУпаковокВидНоменклатуры
			|	И УпаковкиНоменклатуры.Числитель = &Коэффициент";
			ВыборкаУпаковок = ЗапросУпаковок.Выполнить().Выбрать();                            
			лУпак = Справочники.УпаковкиЕдиницыИзмерения.ПустаяСсылка();
			
			Пока ВыборкаУпаковок.Следующий() Цикл
				лУпак = ВыборкаУпаковок.ССылка;
				Прервать;
			КонецЦикла;
			
			Если  лУпак.Пустая() Тогда
				ВызватьИсключениеВС("UpdateBarcode. Не найдена упаковка. ");
				Возврат Ложь;
			КонецЕсли;
			
		Иначе
			лУпак = лТовар.ЕдиницаИзмерения;
		КонецЕсли;						   
		
		ЗаписьШК = РегистрыСведений.ШтрихкодыНоменклатуры.СоздатьМенеджерЗаписи();
		ЗаписьШК.Номенклатура = лТовар;
		ЗаписьШК.Упаковка = лУпак;
		ЗаписьШК.Штрихкод = ШК;	
		Если СХарактеристикой Тогда
			ЗаписьШК.Характеристика = лХарактеристикаНоменклатуры; 
		КонецЕсли;
		
		Попытка	
			ЗаписьШК.Записать(Истина);	
		Исключение
			ВызватьИсключениеВС("UpdateBarcode. Не удалось добавить штрихкод. "+ОписаниеОшибки());
			Возврат Ложь;
		КонецПопытки;
	
	Иначе
		лНЗ=РегистрыСведений.ДатаМобайл_НовыеШтрихкоды.СоздатьНаборЗаписей();
		лНЗ.Отбор.ШтрихКод.Установить(ШК);
		лШК=лНЗ.Добавить();
		лШК.Номенклатура=лТовар;
		лШК.Характеристика=лХарактеристикаНоменклатуры;
		лШК.ШтрихКод=ШК;
		лШК.Пользователь=UserName;
		лШК.Наименование=Barcode.DMMeasureName;
		лШК.Коэффициент=Barcode.DMMeasureK;
		попытка
			лНЗ.ОбменДанными.Получатели.АвтоЗаполнение=Ложь;
			лНЗ.ОбменДанными.Получатели.Заполнить();
			лНЗ.ОбменДанными.Получатели.Удалить(УзелПО);
			лНЗ.Записать(Истина);
		Исключение
			ВызватьИсключениеВС("UpdateBarcode. Не удалось добавить штрихкод. "+ОписаниеОшибки());
			Возврат Ложь;
		Конецпопытки;	
	КонецЕсли;
	
	Возврат Истина;
	
	
КонецФункции
Функция GenerateNewBC(SN, UserName, ArtID, UnitID, P1, P2, BarcodeQuant)
	
	ОбъектШК=ФабрикаXDTO.Создать(ФабрикаXDTO.Тип("http://www.data-mobile.ru","DMBarcode"));

	 УзелПО=НайтиУзел(SN);
	Если УзелПО=Неопределено тогда
		NewTSD(SN, UserName);
		//ВызватьИсключениеВС("Не найден ТСД "+SN);
		Возврат Ложь;
	КонецЕсли;
	
	СХарактеристикой = ЛОЖЬ;	
	Если Лев(ArtID,3)="8U-" И УзелПО.ЗаписьВРегистр тогда
		лТовар=Справочники.Номенклатура.ПолучитьСсылку(Новый УникальныйИдентификатор(Сред(ArtID,4,36)));
		ИДХК=Сред(ArtID,40,36);
		Если ИДХК<>"00000000-0000-0000-0000-000000000000" тогда
			лХарактеристикаНоменклатуры=Справочники.ХарактеристикиНоменклатуры.ПолучитьСсылку(Новый УникальныйИдентификатор(ИДХК));
			СХарактеристикой = Истина;
		КонецЕсли;	
	Иначе 
		Возврат ОбъектШК;
		//лТовар=Справочники.ДатаМобайл_НовыеТовары.ПолучитьСсылку(Новый УникальныйИдентификатор(Сред(ArtID,4)));
	КонецЕсли;	
	
	Если UnitID = "шт" Тогда
		ЕдиницаИзмерения = лТовар.ЕдиницаИзмерения;
	Иначе
		Попытка
			ЕдиницаИзмерения=Справочники.УпаковкиЕдиницыИзмерения.ПолучитьСсылку(Новый УникальныйИдентификатор(UnitID));
		Исключение
			ЕдиницаИзмерения = лТовар.ЕдиницаИзмерения;
		КонецПопытки;	
	КонецЕсли;
	
	Если лТовар.ИспользоватьУпаковки тогда
		
		ЗапросУпаковок = Новый Запрос;
		ЗапросУпаковок.УстановитьПараметр("Номенклатура", лТовар);
		ЗапросУпаковок.УстановитьПараметр("НаборыУпаковокНоменклатура", лТовар.НаборУпаковок);
		ЗапросУпаковок.УстановитьПараметр("НаборыУпаковокВидНоменклатуры", лТовар.ВидНоменклатуры.НаборУпаковок);
		//ЗапросУпаковок.УстановитьПараметр("ЕдиницаИзмерения", ЕдиницаИзмерения);
		ЗапросУпаковок.УстановитьПараметр("Коэффициент", BarcodeQuant);	
		ЗапросУпаковок.Текст = "ВЫБРАТЬ ПЕРВЫЕ 1
		|	УпаковкиНоменклатуры.Ссылка
		|ИЗ
		|	Справочник.УпаковкиЕдиницыИзмерения КАК УпаковкиНоменклатуры
		|ГДЕ
		|	УпаковкиНоменклатуры.Владелец = &Номенклатура
		|	И УпаковкиНоменклатуры.Числитель = &Коэффициент
		|ОБЪЕДИНИТЬ
		|ВЫБРАТЬ
		|	УпаковкиНоменклатуры.Ссылка
		|ИЗ
		|	Справочник.УпаковкиЕдиницыИзмерения КАК УпаковкиНоменклатуры
		|ГДЕ
		|	УпаковкиНоменклатуры.Владелец = &НаборыУпаковокНоменклатура
		|	И УпаковкиНоменклатуры.Числитель = &Коэффициент
		|ОБЪЕДИНИТЬ
		|ВЫБРАТЬ
		|	УпаковкиНоменклатуры.Ссылка
		|ИЗ
		|	Справочник.УпаковкиЕдиницыИзмерения КАК УпаковкиНоменклатуры
		|ГДЕ
		|	УпаковкиНоменклатуры.Владелец = &НаборыУпаковокВидНоменклатуры
		|	И УпаковкиНоменклатуры.Числитель = &Коэффициент";
		ВыборкаУпаковок = ЗапросУпаковок.Выполнить().Выбрать();                            
		лУпак = Справочники.УпаковкиЕдиницыИзмерения.ПустаяСсылка();
		
		Пока ВыборкаУпаковок.Следующий() Цикл
			лУпак = ВыборкаУпаковок.ССылка;
			Прервать;
		КонецЦикла;
		
		Если  лУпак.Пустая() Тогда
			ВызватьИсключениеВС("GenerateNewBC. Не найдена упаковка. ");
			Возврат ОбъектШК;
		КонецЕсли;
		
	Иначе
		лУпак = лТовар.ЕдиницаИзмерения;
	КонецЕсли;						   
						   
	ЗаписьШК = РегистрыСведений.ШтрихкодыНоменклатуры.СоздатьМенеджерЗаписи();
	ЗаписьШК.Номенклатура = лТовар;
	ЗаписьШК.Упаковка = лУпак;
	ЗаписьШК.Штрихкод = РегистрыСведений.ШтрихкодыНоменклатуры.СформироватьШтрихкодEAN13();	
	Если СХарактеристикой Тогда
		ЗаписьШК.Характеристика = лХарактеристикаНоменклатуры; 
	КонецЕсли;
	
	Попытка	
		ЗаписьШК.Записать(Истина);
		ОбъектШК.DMBarcode=ЧистаяСтрока(ЗаписьШК.Штрихкод);
		ОбъектШК.DMMeasureName=ЧистаяСтрока(лУпак.Наименование);
		Попытка
			КФ = Строка(Формат(лУпак.Числитель, "ЧН=0; ЧГ=0"));
		Исключение
			КФ = 1;
		КонецпопыткИ;
		КФ = СтрЗаменить(КФ, ",",".");
		ОбъектШК.DMMeasureK=ЧистаяСтрока(КФ);
		ОбъектШК.DMIsMark=ЛОЖЬ;		
	Исключение
	КонецПопытки;
	
	Возврат ОбъектШК;

КонецФункции
Функция ТоварСопоставленОдинКОдному(НоменклатураЕГАИС)
	
	СопоставленОдинКОдному = Ложь;
	
	 Запрос = Новый Запрос;
	 Запрос.Текст = "ВЫБРАТЬ РАЗЛИЧНЫЕ
	                |	ЕГАИС_СоответствиеНоменклатуры.Номенклатура как ссылка
	                |ИЗ
	                |	РегистрСведений.СоответствиеНоменклатурыЕГАИС КАК ЕГАИС_СоответствиеНоменклатуры
	                |ГДЕ
	                |	ЕГАИС_СоответствиеНоменклатуры.АлкогольнаяПродукция = &ЕГАИСНоменклатура";
	Запрос.УстановитьПараметр("ЕГАИСНоменклатура", НоменклатураЕГАИС);
	Рез = Запрос.Выполнить().Выбрать();
	Если Рез.Количество() = 1 тогда
		СопоставленОдинКОдному = Истина;	
	КонецЕсли;

	Возврат СопоставленОдинКОдному;
	
КонецФункции
Функция МаркаСерияУжеЕсть(PDFDataMatrix, Задание, ЭтоСерия)
	
	Запрос = Новый Запрос();
	Запрос.УстановитьПараметр("PDFDataMatrix", PDFDataMatrix);
	Запрос.УстановитьПараметр("Задание", Задание);
	Запрос.УстановитьПараметр("ЭтоСерия", ЭтоСерия);
	Запрос.Текст = "ВЫБРАТЬ
	               |	ДатаМобайл_МаркиДляПроверки.Марка,
	               |	ДатаМобайл_МаркиДляПроверки.ЗаданиеТСД
	               |ИЗ
	               |	РегистрСведений.ДатаМобайл_МаркиДляПроверки КАК ДатаМобайл_МаркиДляПроверки
	               |ГДЕ
	               |	ДатаМобайл_МаркиДляПроверки.ЗаданиеТСД = &Задание
	               |	И ВЫБОР
	               |			КОГДА &ЭтоСерия
	               |				ТОГДА ДатаМобайл_МаркиДляПроверки.Серия = &PDFDataMatrix
	               |			ИНАЧЕ ДатаМобайл_МаркиДляПроверки.Марка = &PDFDataMatrix
	               |		КОНЕЦ";
				   
	Возврат Запрос.Выполнить().Выбрать().Количество() > 0;
	
КонецФункции
//////////////////////////////////////////////////////////////////////////////
Функция GetArtRest(SN, UserName, ArtID)
	УзелПО=НайтиУзел(SN);
	Если УзелПО=Неопределено тогда
		УзелПО = NewTSD(SN, UserName);
	КонецЕсли;
	
	Если Лев(ArtID,3)="8U-" тогда
		Попытка
			Товар=Справочники.Номенклатура.ПолучитьСсылку(Новый УникальныйИдентификатор(Сред(ArtID,4,36)));
		Исключение
			Возврат 0;
		КонецПопытки;	
		ИДХК=Сред(ArtID,40,36);
		Если ИДХК="00000000-0000-0000-0000-000000000000" тогда
			ХК=Справочники.ХарактеристикиНоменклатуры.ПустаяСсылка();
		Иначе	
			ХК=Справочники.ХарактеристикиНоменклатуры.ПолучитьСсылку(Новый УникальныйИдентификатор(ИДХК));
		КонецЕсли;	
		Товар=Справочники.Номенклатура.ПолучитьСсылку(Новый УникальныйИдентификатор(Сред(ArtID,4)));
	ИначеЕсли Лев(ArtID,3)="8n-" тогда
		Возврат 0;
	КонецЕсли;	
	
	Если УзелПО.НеОтображатьОстатки тогда
		Возврат 0;
	Иначе	
	Запрос=Новый Запрос("ВЫБРАТЬ
	|	СУММА(РезервТСД.Количество) КАК РезервТСД,
	|	0 КАК Резерв,
	|	0 КАК Остаток
	|ПОМЕСТИТЬ РазныеДанные
	|ИЗ
	|	(ВЫБРАТЬ
	|		ДатаМобайл_ДокументыТСДСобранныеДанные.Номенклатура КАК Номенклатура,
	|		ДатаМобайл_ДокументыТСДСобранныеДанные.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
	|		СУММА(ДатаМобайл_ДокументыТСДСобранныеДанные.Количество) КАК Количество
	|	ИЗ
	|		Справочник.ДатаМобайл_ДокументыТСД.СобранныеДанныеПодбор КАК ДатаМобайл_ДокументыТСДСобранныеДанные
	|	ГДЕ
	|		ДатаМобайл_ДокументыТСДСобранныеДанные.Ссылка.ДатаЗавершения = ДАТАВРЕМЯ(1, 1, 1)
	|		И ДатаМобайл_ДокументыТСДСобранныеДанные.Номенклатура = &Номенклатура
	|		И ДатаМобайл_ДокументыТСДСобранныеДанные.Ссылка.Шаблон.РезервироватьТовар
	|		И ДатаМобайл_ДокументыТСДСобранныеДанные.Ссылка.ДатаЗавершения = ДАТАВРЕМЯ(1, 1, 1)
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ДатаМобайл_ДокументыТСДСобранныеДанные.Номенклатура,
	|		ДатаМобайл_ДокументыТСДСобранныеДанные.ХарактеристикаНоменклатуры) КАК РезервТСД
	|ГДЕ
	|	РезервТСД.Номенклатура = &Номенклатура
	|	И РезервТСД.ХарактеристикаНоменклатуры = &ХК
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	0,
	|	СУММА(ТоварыВРезервеНаСкладахОстатки.КОтгрузкеОстаток),
	|	СУММА(ТоварыВРезервеНаСкладахОстатки.ВНаличииОстаток)
	|ИЗ
	|	РегистрНакопления.ТоварыНаСкладах.Остатки(
	|			,
	|			Номенклатура = &Номенклатура
	|				И (&ВсеСклады
	|					ИЛИ Склад В (&Склады)
	|					ИЛИ Помещение В (&Склады))) КАК ТоварыВРезервеНаСкладахОстатки
	|ГДЕ
	|	ТоварыВРезервеНаСкладахОстатки.Номенклатура = &Номенклатура
	|	И ТоварыВРезервеНаСкладахОстатки.Характеристика = &ХК
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СУММА(ЕСТЬNULL(РазныеДанные.РезервТСД, 0)) КАК РезервТСД,
	|	СУММА(ЕСТЬNULL(РазныеДанные.Резерв, 0)) КАК Резерв,
	|	СУММА(ЕСТЬNULL(РазныеДанные.Остаток, 0)) КАК Остаток
	|ИЗ
	|	РазныеДанные КАК РазныеДанные");
	Запрос.УстановитьПараметр("Номенклатура",Товар);
	Запрос.УстановитьПараметр("ХК",ХК);
	СписокСкладов=УзелПО.Склады.ВыгрузитьКолонку("Склад");
	Запрос.УстановитьПараметр("Склады",СписокСкладов);
	Запрос.УстановитьПараметр("ВсеСклады",СписокСкладов.Количество()=0);
	Если УзелПО.ПоСвободнымОстаткам тогда
		Запрос.Текст=СтрЗаменить(Запрос.Текст,"РегистрНакопления.ТоварыНаСкладах.Остатки","РегистрНакопления.СвободныеОстатки.Остатки");
		Запрос.Текст=СтрЗаменить(Запрос.Текст,"ТоварыВРезервеНаСкладахОстатки.КОтгрузкеОстаток","ТоварыВРезервеНаСкладахОстатки.ВРезервеСоСкладаОстаток+ТоварыВРезервеНаСкладахОстатки.ВРезервеПодЗаказОстаток");		
		Запрос.Текст=СтрЗаменить(Запрос.Текст,"ИЛИ Помещение В (&Склады)","");
	КонецЕсли;	
	Рез=Запрос.Выполнить().Выгрузить();
	Возврат Рез.Итог("Остаток")-Рез.Итог("Резерв")-Рез.Итог("РезервТСД");
КонецЕсли; 
КонецФункции
Функция GetArtsDrafts(SN, UserName)
	ОбъектСписка=ФабрикаXDTO.Создать(ФабрикаXDTO.Тип("http://www.data-mobile.ru","DMArtList"));
	УзелПО=НайтиУзел(SN);
	Если УзелПО=Неопределено тогда
		УзелПО = NewTSD(SN, UserName);
	КонецЕсли;
	
	Если УзелПО.ОчиститьТовары тогда
		Узел=УзелПО.ПолучитьОбъект();
		Узел.ОчиститьТовары=Ложь;
		Узел.Записать();
	КонецЕсли;	
	ПланыОбмена.ВыбратьИзменения(УзелПО,1,Метаданные.Справочники.ДатаМобайл_НовыеТовары);
	ПланыОбмена.ВыбратьИзменения(УзелПО,1,Метаданные.РегистрыСведений.ДатаМобайл_НовыеШтрихкоды);
	Запрос=Новый Запрос("ВЫБРАТЬ
	                    |	ДатаМобайл_НовыеТоварыИзменения.Ссылка
	                    |ИЗ
	                    |	Справочник.ДатаМобайл_НовыеТовары.Изменения КАК ДатаМобайл_НовыеТоварыИзменения
	                    |ГДЕ
	                    |	ДатаМобайл_НовыеТоварыИзменения.Узел = &Узел
	                    |	И НЕ ДатаМобайл_НовыеТоварыИзменения.НомерСообщения ЕСТЬ NULL 
	                    |
	                    |ОБЪЕДИНИТЬ
	                    |
	                    |ВЫБРАТЬ
	                    |	ДатаМобайл_НовыеШтрихкоды.Номенклатура
	                    |ИЗ
	                    |	РегистрСведений.ДатаМобайл_НовыеШтрихкоды.Изменения КАК ДатаМобайл_НовыеШтрихкодыИзменения
	                    |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ДатаМобайл_НовыеШтрихкоды КАК ДатаМобайл_НовыеШтрихкоды
	                    |		ПО ДатаМобайл_НовыеШтрихкодыИзменения.ШтрихКод = ДатаМобайл_НовыеШтрихкоды.ШтрихКод
	                    |ГДЕ
	                    |	ДатаМобайл_НовыеШтрихкодыИзменения.Узел = &Узел
	                    |	И НЕ ДатаМобайл_НовыеШтрихкодыИзменения.НомерСообщения ЕСТЬ NULL ");
	Запрос.УстановитьПараметр("Узел",УзелПО);
	Запрос.УстановитьПараметр("СписокТоваров",УзелПО.ДоступныеГруппыТоваров.ВыгрузитьКолонку("Номенклатура"));
	лСписокКВыгрузке=Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка");
	Если лСписокКвыгрузке.Количество()=0 тогда
		Ответ=ФабрикаXDTO.Создать(ФабрикаXDTO.Тип("http://www.data-mobile.ru","DMArtList"));
	Иначе	
		Ответ=СобратьТовары(лСписокКВыгрузке,УзелПО);
	КонецЕсли;	
	ПланыОбмена.УдалитьРегистрациюИзменений(УзелПО,Метаданные.Справочники.ДатаМобайл_НовыеТовары);
	ПланыОбмена.УдалитьРегистрациюИзменений(УзелПО,Метаданные.РегистрыСведений.ДатаМобайл_НовыеШтрихкоды);
	Возврат Ответ;
КонецФункции
Функция GetNewArts(SN, UserName)
	
	ОбъектСписка=ФабрикаXDTO.Создать(ФабрикаXDTO.Тип("http://www.data-mobile.ru","DMArtList"));
	
	УзелПО=НайтиУзел(SN);
	Если УзелПО=Неопределено тогда
		УзелПО = NewTSD(SN, UserName);
	КонецЕсли;
	
	Попытка
	Если УзелПО.ОчиститьТовары тогда
		Узел=УзелПО.ПолучитьОбъект();
		Узел.ОчиститьТовары=Ложь;
		Узел.Записать();
	
		ОбъектСписка=СобратьТовары(Новый Массив,УзелПО); 
	Иначе
	ПланыОбмена.ВыбратьИзменения(УзелПО,1,Метаданные.Справочники.Номенклатура);
	ПланыОбмена.ВыбратьИзменения(УзелПО,1,Метаданные.Справочники.ХарактеристикиНоменклатуры);
	ПланыОбмена.ВыбратьИзменения(УзелПО,1,Метаданные.Справочники.УпаковкиЕдиницыИзмерения);
	ПланыОбмена.ВыбратьИзменения(УзелПО,1,Метаданные.РегистрыСведений.ШтрихкодыНоменклатуры);
	ПланыОбмена.ВыбратьИзменения(УзелПО,1,Метаданные.Справочники.ДатаМобайл_НовыеТовары);
	ПланыОбмена.ВыбратьИзменения(УзелПО,1,Метаданные.РегистрыСведений.ДатаМобайл_НовыеШтрихкоды);
	Запрос=Новый Запрос("ВЫБРАТЬ РАЗЛИЧНЫЕ
	                    |	ИзменившиесяТовары.Ссылка
	                    |ИЗ
	                    |	(ВЫБРАТЬ РАЗЛИЧНЫЕ
	                    |		НоменклатураИзменения.Ссылка КАК Ссылка
	                    |	ИЗ
	                    |		Справочник.Номенклатура.Изменения КАК НоменклатураИзменения
	                    |	ГДЕ
	                    |		НоменклатураИзменения.Узел = &Узел
	                    |		И НЕ НоменклатураИзменения.НомерСообщения ЕСТЬ NULL 
	                    |		И НЕ ЕСТЬNULL(НоменклатураИзменения.Ссылка.ЭтоГруппа, ИСТИНА)
	                    |	
	                    |	ОБЪЕДИНИТЬ
	                    |	
	                    |	ВЫБРАТЬ РАЗЛИЧНЫЕ
	                    |		Номенклатура.Ссылка
	                    |	ИЗ
	                    |		Справочник.ХарактеристикиНоменклатуры.Изменения КАК ХарактеристикиНоменклатурыИзменения
	                    |			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК Номенклатура
	                    |			ПО (ВЫБОР
	                    |					КОГДА Номенклатура.ВидНоменклатуры.ИспользованиеХарактеристик = ЗНАЧЕНИЕ(Перечисление.ВариантыИспользованияХарактеристикНоменклатуры.ИндивидуальныеДляНоменклатуры)
	                    |						ТОГДА ХарактеристикиНоменклатурыИзменения.Ссылка.Владелец = Номенклатура.Ссылка
	                    |					КОГДА Номенклатура.ВидНоменклатуры.ИспользованиеХарактеристик = ЗНАЧЕНИЕ(Перечисление.ВариантыИспользованияХарактеристикНоменклатуры.ОбщиеДляВидаНоменклатуры)
	                    |						ТОГДА ХарактеристикиНоменклатурыИзменения.Ссылка.Владелец = Номенклатура.ВидНоменклатуры
						|					КОГДА Номенклатура.ВидНоменклатуры.ИспользованиеХарактеристик = ЗНАЧЕНИЕ(Перечисление.ВариантыИспользованияХарактеристикНоменклатуры.ОбщиеСДругимВидомНоменклатуры)
				 		|						ТОГДА ХарактеристикиНоменклатурыИзменения.Ссылка.Владелец = Номенклатура.ВладелецХарактеристик	
	                    |					ИНАЧЕ ЛОЖЬ
	                    |				КОНЕЦ)
	                    |	ГДЕ
	                    |		ХарактеристикиНоменклатурыИзменения.Узел = &Узел
	                    |		И НЕ ХарактеристикиНоменклатурыИзменения.НомерСообщения ЕСТЬ NULL 
	                    |	
	                    |	ОБЪЕДИНИТЬ
	                    |	
	                    |	ВЫБРАТЬ РАЗЛИЧНЫЕ
	                    |		Номенклатура.Ссылка
	                    |	ИЗ
	                    |		Справочник.УпаковкиЕдиницыИзмерения.Изменения КАК УпаковкиНоменклатурыИзменения
	                    |			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК Номенклатура
	                    |			ПО (УпаковкиНоменклатурыИзменения.Ссылка.Владелец = Номенклатура.Ссылка
	                    |					ИЛИ УпаковкиНоменклатурыИзменения.Ссылка.Владелец = Номенклатура.ВидНоменклатуры)
	                    |	ГДЕ
	                    |		УпаковкиНоменклатурыИзменения.Узел = &Узел
	                    |		И НЕ УпаковкиНоменклатурыИзменения.НомерСообщения ЕСТЬ NULL 
	                    |	
	                    |	ОБЪЕДИНИТЬ
	                    |	
	                    |	ВЫБРАТЬ РАЗЛИЧНЫЕ
	                    |		ШтрихкодыНоменклатуры.Номенклатура
	                    |	ИЗ
	                    |		РегистрСведений.ШтрихкодыНоменклатуры.Изменения КАК ШтрихкодыНоменклатурыИзменения
	                    |			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ШтрихкодыНоменклатуры КАК ШтрихкодыНоменклатуры
	                    |			ПО ШтрихкодыНоменклатурыИзменения.Штрихкод = ШтрихкодыНоменклатуры.Штрихкод
	                    |	ГДЕ
	                    |		ШтрихкодыНоменклатурыИзменения.Узел = &Узел
	                    |		И НЕ ШтрихкодыНоменклатурыИзменения.НомерСообщения ЕСТЬ NULL 
	                    |	
	                    |	ОБЪЕДИНИТЬ
	                    |	
	                    |	ВЫБРАТЬ РАЗЛИЧНЫЕ
	                    |		ДатаМобайл_НовыеШтрихкоды.Номенклатура
	                    |	ИЗ
	                    |		РегистрСведений.ДатаМобайл_НовыеШтрихкоды.Изменения КАК ДатаМобайл_НовыеШтрихкодыИзменения
	                    |			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ДатаМобайл_НовыеШтрихкоды КАК ДатаМобайл_НовыеШтрихкоды
	                    |			ПО ДатаМобайл_НовыеШтрихкодыИзменения.ШтрихКод = ДатаМобайл_НовыеШтрихкоды.ШтрихКод
	                    |	ГДЕ
	                    |		ДатаМобайл_НовыеШтрихкодыИзменения.Узел = &Узел
	                    |		И НЕ ДатаМобайл_НовыеШтрихкодыИзменения.НомерСообщения ЕСТЬ NULL 
	                    |	
	                    |	ОБЪЕДИНИТЬ
	                    |	
	                    |	ВЫБРАТЬ РАЗЛИЧНЫЕ
	                    |		ДатаМобайл_НовыеТоварыИзменения.Ссылка
	                    |	ИЗ
	                    |		Справочник.ДатаМобайл_НовыеТовары.Изменения КАК ДатаМобайл_НовыеТоварыИзменения
	                    |	ГДЕ
	                    |		ДатаМобайл_НовыеТоварыИзменения.Узел = &Узел
	                    |		И НЕ ДатаМобайл_НовыеТоварыИзменения.НомерСообщения ЕСТЬ NULL ) КАК ИзменившиесяТовары
	                    |ГДЕ
	                    |	(НЕ ИзменившиесяТовары.Ссылка ССЫЛКА Справочник.Номенклатура
	                    |			ИЛИ ИзменившиесяТовары.Ссылка В ИЕРАРХИИ (&СписокТоваров)
	                    |			ИЛИ &ВсеТовары)");
	Запрос.УстановитьПараметр("Узел",УзелПО);
	Запрос.УстановитьПараметр("СписокТоваров",УзелПО.ДоступныеГруппыТоваров.ВыгрузитьКолонку("Номенклатура"));
	Запрос.УстановитьПараметр("ВсеТовары",УзелПО.ДоступныеГруппыТоваров.Количество()=0);
	МассивКВыгрузке=Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка");
	Если МассивКВыгрузке.Количество()>0 тогда
		ОбъектСписка=СобратьТовары(МассивКВыгрузке,УзелПО);
	КонецЕсли;	
	ПланыОбмена.УдалитьРегистрациюИзменений(УзелПО,Метаданные.Справочники.Номенклатура);
	ПланыОбмена.УдалитьРегистрациюИзменений(УзелПО,Метаданные.Справочники.ХарактеристикиНоменклатуры);
	ПланыОбмена.УдалитьРегистрациюИзменений(УзелПО,Метаданные.РегистрыСведений.ШтрихкодыНоменклатуры);
	ПланыОбмена.УдалитьРегистрациюИзменений(УзелПО,Метаданные.Справочники.ДатаМобайл_НовыеТовары);
	ПланыОбмена.УдалитьРегистрациюИзменений(УзелПО,Метаданные.РегистрыСведений.ДатаМобайл_НовыеШтрихкоды);
	КонецЕсли;
	Исключение
	КонецПопытки;
	Возврат ОбъектСписка;
КонецФункции
Функция GetDocArts(SN, UserName, DocOutID)
	ОбъектСписка=ФабрикаXDTO.Создать(ФабрикаXDTO.Тип("http://www.data-mobile.ru","DMArtList"));
	
	УзелПО=НайтиУзел(SN);
	Если УзелПО=Неопределено тогда
		УзелПО = NewTSD(SN, UserName);
	КонецЕсли;
	
	
	попытка
		СсылкаНаДок=Справочники.ДатаМобайл_ДокументыТСД.ПолучитьСсылку(Новый УникальныйИдентификатор(Сред(DocOutID,5)));
	Исключение	
		ВызватьИсключениеВС("GetDocArts. Не найден документ. ");
		Возврат ОбъектСписка;
	КонецПопытки;	
	Если ссылканадок.ПолучитьОбъект()=неопределено тогда
		ВызватьИсключениеВС("GetDocArts. Не найден документ. ");
		Возврат ОбъектСписка;
	КонецЕсли;	
	
	Шаблон=СсылкаНаДок.Шаблон;
	
	
	Если Шаблон.ЕГАИС И Шаблон.ВидДокумента <> "ВозвратТоваровОтПокупателя" Тогда
		
		Запрос=Новый Запрос("ВЫБРАТЬ РАЗЛИЧНЫЕ
		                    |	СоответствиеНоменклатурыЕГАИС.Номенклатура КАК Ссылка
		                    |ИЗ
		                    |	Документ.ТТНВходящаяЕГАИС.Товары КАК Документ1С
							|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СоответствиеНоменклатурыЕГАИС КАК СоответствиеНоменклатурыЕГАИС
							| 		ПО СоответствиеНоменклатурыЕГАИС.АлкогольнаяПродукция = Документ1С.АлкогольнаяПродукция 						
		                    |ГДЕ
		                    |	Документ1С.Ссылка = &Ссылка");
	
		Запрос.Текст=СтрЗаменить(Запрос.Текст,".ТТНВходящаяЕГАИС.","."+Шаблон.ВидДокумента+".");
		Запрос.Текст=СтрЗаменить(Запрос.Текст,".Товары КАК ","."+Шаблон.ИмяТабличнойЧастиПодбор+" КАК ");
		
	Иначе
	
		Запрос=Новый Запрос("ВЫБРАТЬ РАЗЛИЧНЫЕ
	                    |	Документ1С.Номенклатура КАК Ссылка,
	                    |	Документ1С.Характеристика
	                    |ИЗ
	                    |	Документ.ОтборРазмещениеТоваров.ТоварыОтбор КАК Документ1С					
	                    |ГДЕ
	                    |	Документ1С.Ссылка = &Ссылка
	                    |
	                    |ОБЪЕДИНИТЬ ВСЕ
	                    |
	                    |ВЫБРАТЬ РАЗЛИЧНЫЕ
	                    |	Документ1С.Номенклатура,
	                    |	Документ1С.Характеристика
	                    |ИЗ
	                    |	Документ.ОтборРазмещениеТоваров.ТоварыРазмещение КАК Документ1С
	                    |ГДЕ
	                    |	Документ1С.Ссылка = &Ссылка");
		Запрос.Текст=СтрЗаменить(Запрос.Текст,".ОтборРазмещениеТоваров.","."+Шаблон.ВидДокумента+".");
		Если Шаблон.ИспользоватьПодбор тогда
			Запрос.Текст=СтрЗаменить(Запрос.Текст,".ТоварыОтбор КАК ","."+Шаблон.ИмяТабличнойЧастиПодбор+" КАК ");
		Иначе
			Запрос.Текст=СтрЗаменить(Запрос.Текст,".ТоварыОтбор КАК ","."+Шаблон.ИмяТабличнойЧастиПриемка+" КАК ");
		КонецЕсли;	
		Если Шаблон.ИспользоватьПриемку тогда
			Запрос.Текст=СтрЗаменить(Запрос.Текст,".ТоварыРазмещение КАК ","."+Шаблон.ИмяТабличнойЧастиПриемка+" КАК ");
		Иначе
			Запрос.Текст=СтрЗаменить(Запрос.Текст,".ТоварыРазмещение КАК ","."+Шаблон.ИмяТабличнойЧастиПодбор+" КАК ");
		КонецЕсли;
		
	КонецЕсли;
	
	Запрос.УстановитьПараметр("Ссылка",ссылканадок.ИсходныйДокумент);	
	
	
	
	МассивКВыгрузке=Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка");
	Если МассивКВыгрузке.Количество()>0 тогда
		ОбъектСписка=СобратьТовары(МассивКВыгрузке,УзелПО,Запрос.Выполнить().Выгрузить());
	КонецЕсли;	
	Возврат ОбъектСписка;
КонецФункции
Функция GetTemplates(SN,UserName)
	ОбъектСписка=ФабрикаXDTO.Создать(ФабрикаXDTO.Тип("http://www.data-mobile.ru","DMTemplateList"));
	УзелПО=НайтиУзел(SN);
	Если УзелПО=Неопределено тогда
		УзелПО = NewTSD(SN, UserName);
	КонецЕсли;
	
	Если УзелПО.ОчиститьШаблоны тогда
		Узел=УзелПО.ПолучитьОбъект();
		Узел.ОчиститьШаблоны=Ложь;
		Узел.Записать();
	КонецЕсли;	
	ПланыОбмена.ВыбратьИзменения(УзелПО,1,Метаданные.Справочники.ДатаМобайл_ШаблоныДокументов);
	Запрос=Новый Запрос("ВЫБРАТЬ
	                    |	ДатаМобайл_ШаблоныДокументовИзменения.Ссылка.Код КАК DMTemplateID,
	                    |	ДатаМобайл_ШаблоныДокументовИзменения.Ссылка.Наименование КАК DMTemplateName,
	                    |	ДатаМобайл_ШаблоныДокументовИзменения.Ссылка.ВсеШтрихкодыТовара КАК DMuseAllBarcode,
	                    |	ЕСТЬNULL(ДатаМобайл_ШаблоныДокументовИзменения.Ссылка.ПометкаУдаления, ИСТИНА) КАК DMisMark,
	                    |	ДатаМобайл_ШаблоныДокументовИзменения.Ссылка.РазрешеноСозданиеНаТСД КАК DMEnableNew,
	                    |	ДатаМобайл_ШаблоныДокументовИзменения.Ссылка.ОбновлятьПриКаждомОткрытии КАК DMLoadRowsOnOpen,
	                    |	ДатаМобайл_ШаблоныДокументовИзменения.Ссылка.ОбновлятьТоварыСДокументом КАК DMLoadArtsWithRows,
	                    |	ДатаМобайл_ШаблоныДокументовИзменения.Ссылка.ЗапретитьРучноеИзменениеКлиента КАК DMDisableManualChangeClient,
	                    |	ДатаМобайл_ШаблоныДокументовИзменения.Ссылка.ЗапретитьИзменениеКлиентаКардРидером КАК DMDisableReaderChangeClient,
	                    |	ДатаМобайл_ШаблоныДокументовИзменения.Ссылка.КардРидер_Трек1 КАК DMreaderTrack1Use,
	                    |	ДатаМобайл_ШаблоныДокументовИзменения.Ссылка.КардРидер_Трек2 КАК DMreaderTrack2Use,
	                    |	ДатаМобайл_ШаблоныДокументовИзменения.Ссылка.КардРидер_Трек3 КАК DMreaderTrack3Use,
	                    |	ДатаМобайл_ШаблоныДокументовИзменения.Ссылка.ГенерацияПаклистаНаСервере КАК DMnewPackOnWS,
	                    |	ДатаМобайл_ШаблоныДокументовИзменения.Ссылка.ШтрихкодыТолькоПоШаблонам КАК DMuseBCTemplates,
	                    |	ДатаМобайл_ШаблоныДокументовИзменения.Ссылка.ИспользоватьПодбор КАК DMuse_Select,
	                    |	ДатаМобайл_ШаблоныДокументовИзменения.Ссылка.ИспользоватьПриемку КАК DMuse_Insert,
	                    |	ДатаМобайл_ШаблоныДокументовИзменения.Ссылка.ПриемкаПоПодбору КАК DMuseSelectLogAsInsertTask,
	                    |	ДатаМобайл_ШаблоныДокументовИзменения.Ссылка.ПриПриемкеЗапрашиватьТовар КАК DMuseArt_Insert,
	                    |	ДатаМобайл_ШаблоныДокументовИзменения.Ссылка.РазрешитьВыгрузкуНеполногоДокумента КАК DMonUploadIncorrectDoc,
	                    |	ДатаМобайл_ШаблоныДокументовИзменения.Ссылка.ПриСканированииТовараПодбор КАК DMonArtScan_Select,
	                    |	ДатаМобайл_ШаблоныДокументовИзменения.Ссылка.ПриСканированииТовараПриемка КАК DMonArtScan_Insert,
	                    |	ДатаМобайл_ШаблоныДокументовИзменения.Ссылка.ПриПревышенииЗаданияПодбор КАК DMonTaskQty_Select,
	                    |	ДатаМобайл_ШаблоныДокументовИзменения.Ссылка.ПриПревышенииЗаданияПриемка КАК DMonTaskQty_Insert,
	                    |	ДатаМобайл_ШаблоныДокументовИзменения.Ссылка.ПриПревышенииЛимитаПодбор КАК DMonLimitQty_Select,
	                    |	ДатаМобайл_ШаблоныДокументовИзменения.Ссылка.ПриПревышенииЛимитаПриемка КАК DMonLimitQty_Insert,
	                    |	ДатаМобайл_ШаблоныДокументовИзменения.Ссылка.ИспользованиеЯчеекПодбор КАК DMuseCell_Select,
	                    |	ДатаМобайл_ШаблоныДокументовИзменения.Ссылка.ИспользованиеЯчеекПриемка КАК DMuseCell_Insert,
	                    |	ДатаМобайл_ШаблоныДокументовИзменения.Ссылка.ИспользованиеУпаковочныхЛистовПодбор КАК DMusePack_Select,
	                    |	ДатаМобайл_ШаблоныДокументовИзменения.Ссылка.ИспользованиеУпаковочныхЛистовПриемка КАК DMusePack_Insert,
	                    |	ДатаМобайл_ШаблоныДокументовИзменения.Ссылка.УчитыватьЯчеекВЗаданииПодбор КАК DMuseCellOnTask_Select,
	                    |	ДатаМобайл_ШаблоныДокументовИзменения.Ссылка.УчитыватьЯчеекВЗаданииПриемка КАК DMuseCellOnTask_Insert,
	                    |	ДатаМобайл_ШаблоныДокументовИзменения.Ссылка.УчитыватьСерийниковВЗаданииПодбор КАК DMuseSNOnTask_Select,
	                    |	ДатаМобайл_ШаблоныДокументовИзменения.Ссылка.УчитыватьСерийниковВЗаданииПриемка КАК DMuseSNOnTask_Insert,
	                    |	ДатаМобайл_ШаблоныДокументовИзменения.Ссылка.РучнойВводКоличестваПодбор КАК DMquantEnable_Select,
	                    |	ДатаМобайл_ШаблоныДокументовИзменения.Ссылка.РучнойВводКоличестваПриемка КАК DMquantEnable_Insert,
	                    |	ДатаМобайл_ШаблоныДокументовИзменения.Ссылка.ПодтверждатьЭнтеромПодбор КАК DMenterToCommit_Select,
	                    |	ДатаМобайл_ШаблоныДокументовИзменения.Ссылка.ПодтверждатьЭнтеромПриемка КАК DMenterToCommit_Insert,
	                    |	ДатаМобайл_ШаблоныДокументовИзменения.Ссылка.ОтсылатьГотовуюЗаписьНаСерверПодбор КАК DMwriteRecordToWS_Select,
	                    |	ДатаМобайл_ШаблоныДокументовИзменения.Ссылка.ОтсылатьГотовуюЗаписьНаСерверПриемка КАК DMwriteRecordToWS_Insert,
	                    |	ДатаМобайл_ШаблоныДокументовИзменения.Ссылка.ПечатьЭтикеткиПриПриемке КАК DMPrintLabel_Insert,
	                    |	ДатаМобайл_ШаблоныДокументовИзменения.Ссылка.ПечатьЭтикеткиПриПодборе КАК DMPrintLabel_Select,
	                    |	ДатаМобайл_ШаблоныДокументовИзменения.Ссылка.ИспользованиеСерийниковПодбор КАК DMuseSN_Select,
	                    |	ДатаМобайл_ШаблоныДокументовИзменения.Ссылка.ИспользованиеСерийниковПриемка КАК DMuseSN_Insert,
	                    |	ДатаМобайл_ШаблоныДокументовИзменения.Ссылка.ПоштучноеПеремещение КАК DMoneArtReplaceMode,
	                    |	ДатаМобайл_ШаблоныДокументовИзменения.Ссылка.ПриСканированииНовогоТовара КАК DMonNewArt,
						|	ДатаМобайл_ШаблоныДокументовИзменения.Ссылка.УникальныеШтрихкодыНоменклатурыВДокументе КАК DMuniquebarcodedoc,
						|	ДатаМобайл_ШаблоныДокументовИзменения.Ссылка.ГрупповаяРабота КАК DMMultiDoc,
	                    |	ДатаМобайл_ШаблоныДокументовИзменения.Ссылка.ГрупповаяРаботаЗвуковоеОповещение КАК DMMultiDocSound,
	                    |	ДатаМобайл_ШаблоныДокументовИзменения.Ссылка.ГрупповаяРаботаИнтервалОпроса КАК DMMultiDocTimeout,
						|	ДатаМобайл_ШаблоныДокументовИзменения.Ссылка.ВыгрузкаЯчеекПодбор КАК DMEnterCell_Select,
						|	ДатаМобайл_ШаблоныДокументовИзменения.Ссылка.ВыгрузкаЯчеекПриемка КАК DMEnterCell_Insert,
						|	ДатаМобайл_ШаблоныДокументовИзменения.Ссылка.ЕГАИС КАК DMUseEgais,
						|	ДатаМобайл_ШаблоныДокументовИзменения.Ссылка.ЕГАИСИспользоватьДатуРозлива КАК DMUseDateBottling,
						|	ДатаМобайл_ШаблоныДокументовИзменения.Ссылка.ЕгаисИспользоватьМарку КАК DMUseDataMatrixBarcode,
						|	ДатаМобайл_ШаблоныДокументовИзменения.Ссылка.ЕГАИСРежимВВодаPDF417 КАК DMEnterPDF417Barcode,
						|	ДатаМобайл_ШаблоныДокументовИзменения.Ссылка.СопоставлениеЕГАИС КАК DMEgaisCompare,
						|	ДатаМобайл_ШаблоныДокументовИзменения.Ссылка.ЕГАИСИспользоватьСправкуА КАК DMUseBlankA,
						|	ДатаМобайл_ШаблоныДокументовИзменения.Ссылка.ЕГАИСИспользоватьСправкуБ КАК DMUseBlankB,
						|	ДатаМобайл_ШаблоныДокументовИзменения.Ссылка.ЕГАИСИспользоватьПроверкуМарок КАК DMUseCheckMark,
						|	ДатаМобайл_ШаблоныДокументовИзменения.Ссылка.ЗагружатьCписокЯчеекССервераПодбор КАК DMGetCellsListFromServerSelect,
						|	ДатаМобайл_ШаблоныДокументовИзменения.Ссылка.ЗагружатьCписокЯчеекССервераПриемка КАК DMGetCellsListFromServerInsert,
						|	ДатаМобайл_ШаблоныДокументовИзменения.Ссылка.УникальныеСерийныеНомераПодбор КАК DMIsUniqueSNSelect,
	                    |	ДатаМобайл_ШаблоныДокументовИзменения.Ссылка.УникальныеСерийныеНомераПриемка КАК DMIsUniqueSNInsert,
						|	ДатаМобайл_ШаблоныДокументовИзменения.Ссылка.ВерсияЕГАИС КАК DMEgaisVersion,
						|	ДатаМобайл_ШаблоныДокументовИзменения.Ссылка.ИспользоватьСервисRateGoods КАК DMUseOnlineArtsCatalog,
						|	ДатаМобайл_ШаблоныДокументовИзменения.Ссылка.ЕГАИСЗагружатьСписокДатРозлива КАК DMGetDateBottlingFromServer
						|ИЗ
	                    |	Справочник.ДатаМобайл_ШаблоныДокументов.Изменения КАК ДатаМобайл_ШаблоныДокументовИзменения
	                    |ГДЕ
	                    |	ДатаМобайл_ШаблоныДокументовИзменения.Узел = &Узел
	                    |	И НЕ ДатаМобайл_ШаблоныДокументовИзменения.НомерСообщения ЕСТЬ NULL 
	                    |	И (ДатаМобайл_ШаблоныДокументовИзменения.Ссылка В (&СписокШаблонов)
	                    |			ИЛИ &ВсеШаблоны)
	                    |	И НЕ ДатаМобайл_ШаблоныДокументовИзменения.Ссылка.ПометкаУдаления ЕСТЬ NULL ");
	Запрос.УстановитьПараметр("Узел",УзелПО);
	Запрос.УстановитьПараметр("СписокШаблонов",УзелПО.Шаблоны.ВыгрузитьКолонку("Шаблон"));
	Запрос.УстановитьПараметр("ВсеШаблоны",УзелПО.Шаблоны.Количество()=0);
	Рез=Запрос.Выполнить().Выбрать();
	ОбъектСписка=ФабрикаXDTO.Создать(ФабрикаXDTO.Тип("http://www.data-mobile.ru","DMTemplateList"));
	Пока Рез.Следующий() цикл
		ОбъектШаблона=ФабрикаXDTO.Создать(ФабрикаXDTO.Тип("http://www.data-mobile.ru","DMTemplate"));
		ЗаполнитьЗначенияСвойств(ОбъектШаблона,Рез);
		ОбъектСписка.DMTemplate.Добавить(ОбъектШаблона);
	КонецЦикла;	
	ПланыОбмена.УдалитьРегистрациюИзменений(УзелПО,Метаданные.Справочники.ДатаМобайл_ШаблоныДокументов);
	Возврат ОбъектСписка;
КонецФункции
Функция GetCells(SN, UserName)
	ОбъектСписка=ФабрикаXDTO.Создать(ФабрикаXDTO.Тип("http://www.data-mobile.ru","DMCellList"));
	УзелПО=НайтиУзел(SN);
	Если УзелПО=Неопределено тогда
		УзелПО = NewTSD(SN, UserName);
	КонецЕсли;
	
	Если УзелПО.ОчиститьЯчейки тогда
		Узел=УзелПО.ПолучитьОбъект();
		Узел.ОчиститьЯчейки=Ложь;
		Узел.Записать();
	КонецЕсли;	
	ПланыОбмена.ВыбратьИзменения(УзелПО,1,Метаданные.Справочники.СкладскиеЯчейки);
	Запрос=Новый Запрос("ВЫБРАТЬ РАЗЛИЧНЫЕ
	                    |	МестаХраненияИзменения.Ссылка КАК ССылка,
	                    |	МестаХраненияИзменения.Ссылка.Код КАК Код,
	                    |	0 КАК DMTaskQnt,
	                    |	МестаХраненияИзменения.Ссылка.Наименование КАК Описание
	                    |ИЗ
	                    |	Справочник.СкладскиеЯчейки.Изменения КАК МестаХраненияИзменения
	                    |ГДЕ
	                    |	НЕ МестаХраненияИзменения.Ссылка.ПометкаУдаления
	                    |	И НЕ МестаХраненияИзменения.Ссылка.ЭтоГруппа
	                    |	И МестаХраненияИзменения.Узел = &Узел
	                    |	И НЕ МестаХраненияИзменения.НомерСообщения ЕСТЬ NULL ");
	Запрос.УстановитьПараметр("Узел",УзелПО.Ссылка);
	Рез=Запрос.Выполнить().Выбрать();
	Пока Рез.Следующий() цикл
		ОбъектЯчейки=ФабрикаXDTO.Создать(ФабрикаXDTO.Тип("http://www.data-mobile.ru","DMCell"));
		ОбъектЯчейки.DMBarcode = ?(УзелПО.ВыгружатьВКодЯчейки=0,Строка(Рез.Код), Строка(ШтрихкодированиеПечатныхФорм.ЧисловойКодПоСсылке(Рез.Ссылка)));
		ОбъектЯчейки.DMCellName = ?(УзелПО.ВыгружатьВНаименованиеЯчейки=0,ЧистаяСтрока(Рез.Описание), Рез.Код);
		ОбъектЯчейки.DMTaskQnt = рез.DMTaskQnt;
		ОбъектСписка.DMCell.Добавить(ОбъектЯчейки);
	КонецЦикла;	
	ПланыОбмена.УдалитьРегистрациюИзменений(УзелПО,Метаданные.Справочники.СкладскиеЯчейки);
	Возврат ОбъектСписка;
КонецФункции
Функция GetClients(SN, UserName)

	ОбъектСписка=ФабрикаXDTO.Создать(ФабрикаXDTO.Тип("http://www.data-mobile.ru","DMClientList"));
	УзелПО=НайтиУзел(SN);
	Если УзелПО=Неопределено тогда
		УзелПО = NewTSD(SN, UserName);
	КонецЕсли;
	
	
	Попытка
		
	Если УзелПО.ОчиститьКлиентов тогда
		Узел=УзелПО.ПолучитьОбъект();
		Узел.ОчиститьКлиентов=Ложь;
		Узел.Записать();
	КонецЕсли;	
	
	ПланыОбмена.ВыбратьИзменения(УзелПО,1,Метаданные.Справочники.Партнеры);
	Запрос=Новый Запрос("ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВЫРАЗИТЬ(ПартнерыИзменения.Ссылка.Наименование КАК Строка(100)) КАК DMName,
	|	ПартнерыИзменения.Ссылка КАК Ссылка,
	|	ПартнерыИзменения.Ссылка.Код КАК DMBarcode
	|ИЗ
	|	Справочник.Партнеры.Изменения КАК ПартнерыИзменения
	|ГДЕ
	|	НЕ ПартнерыИзменения.Ссылка.ПометкаУдаления
	|	И ПартнерыИзменения.Узел = &Узел
	|	И НЕ ПартнерыИзменения.НомерСообщения ЕСТЬ NULL");
	Запрос.УстановитьПараметр("Узел",УзелПО.Ссылка);
	Рез=Запрос.Выполнить().Выбрать();
	Пока Рез.Следующий() цикл
		ОбъектКлиента=ФабрикаXDTO.Создать(ФабрикаXDTO.Тип("http://www.data-mobile.ru","DMClient"));
		ЗаполнитьЗначенияСвойств(ОбъектКлиента,Рез);
		ОбъектКлиента.DMClientID="8k-"+СокрЛП(Рез.Ссылка.УникальныйИдентификатор());
		ОбъектСписка.DMClient.Добавить(ОбъектКлиента);
	КонецЦикла;	
	ПланыОбмена.УдалитьРегистрациюИзменений(УзелПО,Метаданные.Справочники.Партнеры);
	
	
	Запрос=Новый Запрос("ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВЫРАЗИТЬ(ПартнерыИзменения.Ссылка.Наименование КАК Строка(100)) КАК DMName,
	|	ПартнерыИзменения.Ссылка КАК Ссылка,
	|	"""" КАК DMBarcode
	|ИЗ
	|	Справочник.КлассификаторОрганизацийЕГАИС КАК ПартнерыИзменения
	|ГДЕ
	|	НЕ ПартнерыИзменения.Ссылка.ПометкаУдаления");
	
	Запрос.УстановитьПараметр("Узел",УзелПО.Ссылка);
	Рез=Запрос.Выполнить().Выбрать();
	Пока Рез.Следующий() цикл
		ОбъектКлиента=ФабрикаXDTO.Создать(ФабрикаXDTO.Тип("http://www.data-mobile.ru","DMClient"));
		ЗаполнитьЗначенияСвойств(ОбъектКлиента,Рез);
		ОбъектКлиента.DMClientID="8k-"+СокрЛП(Рез.Ссылка.УникальныйИдентификатор());
		ОбъектСписка.DMClient.Добавить(ОбъектКлиента);
	КонецЦикла;
	
	Исключение
	КонецПопытки;
	
	Возврат ОбъектСписка;

КонецФункции
Функция GetUsers(SN, UserName)
	ОбъектСписка=ФабрикаXDTO.Создать(ФабрикаXDTO.Тип("http://www.data-mobile.ru","DMUserList"));
	УзелПО=НайтиУзел(SN);
	Если УзелПО=Неопределено тогда
		УзелПО = NewTSD(SN, UserName);
	КонецЕсли;
	
	Если УзелПО.ОчиститьПользователей тогда
		Узел=УзелПО.ПолучитьОбъект();
		Узел.ОчиститьПользователей=Ложь;
		Узел.Записать();
	КонецЕсли;	
	ПланыОбмена.ВыбратьИзменения(УзелПО,1,Метаданные.Справочники.Пользователи);
	Запрос=Новый Запрос("ВЫБРАТЬ
	                    |	МАКСИМУМ(Логины.DMLogin) КАК DMLogin,
	                    |	Логины.DMName,
	                    |	МАКСИМУМ(Логины.DMPass) КАК DMPass,
	                    |	МАКСИМУМ(Логины.DMIsAdmin) КАК DMIsAdmin,
	                    |	МАКСИМУМ(Логины.DMEnableEditArts) КАК DMEnableEditArts
	                    |ИЗ
	                    |	(ВЫБРАТЬ РАЗЛИЧНЫЕ
	                    |		ПОДСТРОКА(ДатаМобайл_СписокТСДПользователиТСД.Логин, 1, 50) КАК DMLogin,
	                    |		ПОДСТРОКА(ДатаМобайл_СписокТСДПользователиТСД.Пользователь.Наименование, 1, 100) КАК DMName,
	                    |		ПОДСТРОКА(ДатаМобайл_СписокТСДПользователиТСД.Пароль, 1, 10) КАК DMPass,
	                    |		ДатаМобайл_СписокТСДПользователиТСД.Админ КАК DMIsAdmin,
	                    |		ДатаМобайл_СписокТСДПользователиТСД.РазрешитьСозданиеТовара КАК DMEnableEditArts
	                    |	ИЗ
	                    |		ПланОбмена.ДатаМобайл_СписокТСД.ПользователиТСД КАК ДатаМобайл_СписокТСДПользователиТСД
	                    |	ГДЕ
	                    |		НЕ ДатаМобайл_СписокТСДПользователиТСД.Пользователь.ПометкаУдаления
	                    |		И (ДатаМобайл_СписокТСДПользователиТСД.Ссылка = &Узел
	                    |				ИЛИ ДатаМобайл_СписокТСДПользователиТСД.Ссылка = &УзелКорня)) КАК Логины
	                    |
	                    |СГРУППИРОВАТЬ ПО
	                    |	Логины.DMName");
	Запрос.УстановитьПараметр("Узел",УзелПО.Ссылка);
	Запрос.УстановитьПараметр("УзелКорня",ПланыОбмена.ДатаМобайл_СписокТСД.ЭтотУзел());
	Рез=Запрос.Выполнить().Выбрать();
	Пока Рез.Следующий() цикл
		ОбъектЯчейки=ФабрикаXDTO.Создать(ФабрикаXDTO.Тип("http://www.data-mobile.ru","DMUser"));
		ЗаполнитьЗначенияСвойств(ОбъектЯчейки,Рез);
		//		ОбъектЯчейки.DMPass=СокрЛП(ОбъектЯчейки.DMPass);
		ОбъектСписка.DMUser.Добавить(ОбъектЯчейки);
	КонецЦикла;	
	ПланыОбмена.УдалитьРегистрациюИзменений(УзелПО,Метаданные.Справочники.Пользователи);
	Возврат ОбъектСписка;
КонецФункции
Функция GetEgaisArts(SN, UserName)
	
	ОбъектСписка=ФабрикаXDTO.Создать(ФабрикаXDTO.Тип("http://www.data-mobile.ru","DMArtEgaisList"));
	
	УзелПО=НайтиУзел(SN);
	Если УзелПО=Неопределено тогда
		УзелПО = NewTSD(SN, UserName);
	КонецЕсли;

	
	Если УзелПО.ОчиститьЕгаисТовары тогда
		Узел=УзелПО.ПолучитьОбъект();
		Узел.ОчиститьЕгаисТовары=Ложь;
		Узел.Записать();
	КонецЕсли;
	
	ПланыОбмена.ВыбратьИзменения(УзелПО,1,Метаданные.Справочники.КлассификаторАлкогольнойПродукцииЕГАИС);

	ЗапросТоваров = Новый Запрос;
	ЗапросТоваров.Текст = "ВЫБРАТЬ РАЗЛИЧНЫЕ
	                      |	ЕСТЬNULL(ЕГАИС_НоменклатураИзменения.Ссылка, ЗНАЧЕНИЕ(Справочник.КлассификаторАлкогольнойПродукцииЕГАИС.ПустаяССылка)) КАК ССылка
	                      |ИЗ
	                      |	Справочник.КлассификаторАлкогольнойПродукцииЕГАИС.Изменения КАК ЕГАИС_НоменклатураИзменения
						  |ГДЕ
						  | НЕ ЕГАИС_НоменклатураИзменения.Ссылка.ПометкаУдаления";
	
		ВыборкаТоваров = ЗапросТоваров.Выполнить().Выбрать();
		Пока ВыборкаТоваров.Следующий() Цикл
			ОбъектТовара=ФабрикаXDTO.Создать(ФабрикаXDTO.Тип("http://www.data-mobile.ru","DMArtEgais"));
			ОбъектТовара.ArtID="8"+"e-"+Строка(ВыборкаТоваров.Ссылка.УникальныйИдентификатор());	
			ОбъектТовара.ArtName = ЧистаяСтрока(Лев(ВыборкаТоваров.Ссылка.Наименование,100));
			ОбъектТовара.Barcode = ЧистаяСтрока(ВыборкаТоваров.Ссылка.Код);
			ОбъектТовара.Manufacturer = ЧистаяСтрока(Лев(ВыборкаТоваров.Ссылка.Производитель.Наименование,100));
			ОбъектТовара.Importer = ""; // импортера не используем
			ОбъектТовара.Capacity = ВыборкаТоваров.Ссылка.Объем;
			ОбъектТовара.PercentAlco = ВыборкаТоваров.Ссылка.Крепость;
			ОбъектТовара.TypeAlco = ЧистаяСтрока(ВыборкаТоваров.Ссылка.ВидПродукции.Код+" "+ВыборкаТоваров.Ссылка.ВидПродукции.Наименование);
			ОбъектТовара.DMIsCompared = ТоварСопоставленОдинКОдному(ВыборкаТоваров.ССылка);
			ОбъектТовара.DMBoxKF = 0; //количество единиц в коробе
			ОбъектТовара.DMIsNeedBlankA = Истина; //требуется ввод справки А по товару
			ОбъектТовара.DMIsNeedBlankB = Истина; //требуется ввод справки Б по товару
			ОбъектТовара.DMIsNeedDateBottling = Истина; //требуется ввод даты розлива по товару

			ОбъектСписка.DMArtEgais.Добавить(ОбъектТовара);
		КонецЦикла;
		
	ПланыОбмена.УдалитьРегистрациюИзменений(УзелПО,Метаданные.Справочники.КлассификаторАлкогольнойПродукцииЕГАИС);
	
	
	Возврат ОбъектСписка;
	

КонецФункции
Функция GetDocArtsEgais(SN, UserName, DocID)
	 ОбъектСписка=ФабрикаXDTO.Создать(ФабрикаXDTO.Тип("http://www.data-mobile.ru","DMArtEgaisList"));
	
	УзелПО=НайтиУзел(SN);
	Если УзелПО=Неопределено тогда
		УзелПО = NewTSD(SN, UserName);
	КонецЕсли;

	
	Попытка
		СсылкаНаДок=Справочники.ДатаМобайл_ДокументыТСД.ПолучитьСсылку(Новый УникальныйИдентификатор(Сред(DocID,5)));
	Исключение
		Возврат ЛОЖЬ;
	КонецПопытки;
		
	Шаблон = ССылкаНаДок.Шаблон;
	
	ИмяДокумента = Шаблон.ВидДокумента;
	ИмяТЧ = Шаблон.ИмяТабличнойЧастиПодбор;
	
		
	Если НЕ ЗНачениеЗАполнено(ССылкаНаДок.ИсходныйДокумент) Тогда
		Возврат ОбъектСписка;	
	КонецЕсли;
	
	СписокМарок = Новый СписокЗначений();                                                                        
	
	Если Шаблон.ЕГАИС  Тогда
				
		ЗапросТоваров = Новый Запрос;
		ЗапросТоваров.УстановитьПараметр("ТТН", СсылкаНаДок.ИсходныйДокумент);
		ЗапросТоваров.УстановитьПараметр("СписокНепроверяемыхМарок", СписокМарок); 
		Если Шаблон.ВидДокумента <> "ВозвратТоваровОтКлиента" Тогда
			ЗАпросТоваров.Текст = 
			"ВЫБРАТЬ
			|	ЕГАИС_ТТНТовары.АлкогольнаяПродукция КАК Номенклатура,
			|	СУММА(ЕГАИС_ТТНТовары.Количество) КАК Количество
			|ПОМЕСТИТЬ ТоварыВОсновании
			|ИЗ
			|	Документ.ТТНВходящаяЕГАИС.Товары КАК ЕГАИС_ТТНТовары
			|ГДЕ
			|	ЕГАИС_ТТНТовары.Ссылка = &ТТН
			|	И НЕ ЕГАИС_ТТНТовары.АлкогольнаяПродукция.ВидПродукции В (&СписокНепроверяемыхМарок)
			|
			|СГРУППИРОВАТЬ ПО
			|	ЕГАИС_ТТНТовары.АлкогольнаяПродукция
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ЕСТЬNULL(ЕГАИС_Номенклатура.Код, """") КАК Barcode,
			|	ЕСТЬNULL(ЕГАИС_Номенклатура.Производитель.Наименование, """") КАК Manufacturer,
			|	ЕСТЬNULL(ЕГАИС_Номенклатура.Импортер.Наименование, """") КАК Importer,
			|	ЕСТЬNULL(ЕГАИС_Номенклатура.Объем, 0) КАК Capacity,
			|	ЕСТЬNULL(ЕГАИС_Номенклатура.Крепость, 0) КАК PercentAlco,
			|	ВЫБОР
			|		КОГДА ЕГАИС_Номенклатура.ВидПродукции.Код ЕСТЬ NULL
			|			ТОГДА ЕСТЬNULL(ЕГАИС_Номенклатура.ВидПродукции.Код + "" "", """") + ЕСТЬNULL(ЕГАИС_Номенклатура.ВидПродукции.Наименование, """")
			|		ИНАЧЕ ЕСТЬNULL(Товары.Номенклатура.ВидАлкогольнойПродукции.Код + "" "", """") + ЕСТЬNULL(Товары.Номенклатура.ВидАлкогольнойПродукции.Наименование + "" "", """")
			|	КОНЕЦ КАК TypeAlco,
			|	ЕСТЬNULL(ТоварыВОсновании.Количество, 0) КАК Quant,
			|	ЕСТЬNULL(ЕГАИС_Номенклатура.Наименование, """") КАК ArtName,
			|	ЕСТЬNULL(ТоварыВОсновании.Номенклатура.Ссылка, ЗНАЧЕНИЕ(Справочник.КлассификаторАлкогольнойПродукцииЕГАИС.ПустаяССылка)) КАК Ссылка,
			|	ЕСТЬNULL(Товары.Номенклатура.Ссылка, ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяССылка)) КАК Поле1
			|ИЗ
			|	ТоварыВОсновании КАК ТоварыВОсновании
			|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
			|			СоответствиеНоменклатурыЕГАИС.АлкогольнаяПродукция КАК АлкогольнаяПродукция,
			|			МАКСИМУМ(СоответствиеНоменклатурыЕГАИС.Номенклатура) КАК Номенклатура
			|		ИЗ
			|			РегистрСведений.СоответствиеНоменклатурыЕГАИС КАК СоответствиеНоменклатурыЕГАИС
			|		
			|		СГРУППИРОВАТЬ ПО
			|			СоответствиеНоменклатурыЕГАИС.АлкогольнаяПродукция) КАК Товары
			|		ПО (Товары.АлкогольнаяПродукция = ТоварыВОсновании.Номенклатура)
			|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КлассификаторАлкогольнойПродукцииЕГАИС КАК ЕГАИС_Номенклатура
			|		ПО ТоварыВОсновании.Номенклатура = ЕГАИС_Номенклатура.Ссылка";
		Иначе
			ЗАпросТоваров.Текст = 
			"ВЫБРАТЬ
			|	ЕГАИС_ТТНТовары.Номенклатура КАК Номенклатура,
			|	СУММА(ЕГАИС_ТТНТовары.Количество) КАК Количество
			|ПОМЕСТИТЬ ТоварыВОсновании
			|ИЗ
			|	Документ.ВозвратТоваровОтКлиента.Товары КАК ЕГАИС_ТТНТовары
			|ГДЕ
			|	ЕГАИС_ТТНТовары.Ссылка = &ТТН
			|	И НЕ ЕГАИС_ТТНТовары.Номенклатура.ВидАлкогольнойПродукции В (&СписокНепроверяемыхМарок)
			|
			|СГРУППИРОВАТЬ ПО
			|	ЕГАИС_ТТНТовары.Номенклатура
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ЕСТЬNULL(ЕГАИС_Номенклатура.Код, """") КАК Barcode,
			|	ЕСТЬNULL(ЕГАИС_Номенклатура.Производитель.Наименование, """") КАК Manufacturer,
			|	ЕСТЬNULL(ЕГАИС_Номенклатура.Импортер.Наименование, """") КАК Importer,
			|	ЕСТЬNULL(ЕГАИС_Номенклатура.Объем, 0) КАК Capacity,
			|	ЕСТЬNULL(ЕГАИС_Номенклатура.Крепость, 0) КАК PercentAlco,
			|	ВЫБОР
			|		КОГДА ЕГАИС_Номенклатура.ВидПродукции.Код ЕСТЬ NULL
			|			ТОГДА ЕСТЬNULL(ЕГАИС_Номенклатура.ВидПродукции.Код + "" "", """") + ЕСТЬNULL(ЕГАИС_Номенклатура.ВидПродукции.Наименование, """")
			|		ИНАЧЕ ЕСТЬNULL(Товары.Номенклатура.ВидАлкогольнойПродукции.Код + "" "", """") + ЕСТЬNULL(Товары.Номенклатура.ВидАлкогольнойПродукции.Наименование + "" "", """")
			|	КОНЕЦ КАК TypeAlco,
			|	ЕСТЬNULL(ТоварыВОсновании.Количество, 0) КАК Quant,
			|	ЕСТЬNULL(ЕГАИС_Номенклатура.Наименование, """") КАК ArtName,
			|	ЕСТЬNULL(Товары.АлкогольнаяПродукция.Ссылка, ЗНАЧЕНИЕ(Справочник.КлассификаторАлкогольнойПродукцииЕГАИС.ПустаяССылка)) КАК Поле1,
			|	ЕСТЬNULL(ТоварыВОсновании.Номенклатура.Ссылка, ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяССылка)) КАК ССылка
			|ИЗ
			|	ТоварыВОсновании КАК ТоварыВОсновании
			|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
			|			МАКСИМУМ(СоответствиеНоменклатурыЕГАИС.АлкогольнаяПродукция) КАК АлкогольнаяПродукция,
			|			СоответствиеНоменклатурыЕГАИС.Номенклатура КАК Номенклатура
			|		ИЗ
			|			РегистрСведений.СоответствиеНоменклатурыЕГАИС КАК СоответствиеНоменклатурыЕГАИС
			|		
			|		СГРУППИРОВАТЬ ПО
			|			СоответствиеНоменклатурыЕГАИС.Номенклатура) КАК Товары
			|		ПО (Товары.Номенклатура = ТоварыВОсновании.Номенклатура)
			|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КлассификаторАлкогольнойПродукцииЕГАИС КАК ЕГАИС_Номенклатура
			|		ПО (Товары.АлкогольнаяПродукция.Ссылка = ЕГАИС_Номенклатура.Ссылка)";
			
		КонецЕсли;
		ЗапросТоваров.Текст=СтрЗаменить(ЗапросТоваров.Текст,".ТТНВходящаяЕГАИС.Товары","."+Шаблон.ВидДокумента+"."+Шаблон.ИмяТабличнойЧастиПодбор);
		ТаблицаТоваров = ЗапросТоваров.Выполнить().Выгрузить();
		Для Каждого ВыборкаТоваров из ТаблицаТоваров Цикл
			
			ОбъектТовара=ФабрикаXDTO.Создать(ФабрикаXDTO.Тип("http://www.data-mobile.ru","DMArtEgais"));
			ОбъектТовара.ArtID="8"+"e-"+Строка(ВыборкаТоваров.Ссылка.УникальныйИдентификатор());	
			ЗаполнитьЗначенияСвойств(ОбъектТовара, ВыборкаТоваров);
			ОбъектТовара.ArtName = ЧистаяСтрока(ОбъектТовара.ArtName);

			
			ОбъектСписка.DMArtEgais.Добавить(ОбъектТовара);
	
		КонецЦикла;
		
	КонецЕсли;
	
	Возврат ОбъектСписка;

	
КонецФункции
Функция GetUnits(SN, UserName)
	
	УзелПО=НайтиУзел(SN);
	Если УзелПО=Неопределено тогда
		УзелПО = NewTSD(SN, UserName);
	КонецЕсли;

	Если УзелПО.ОчиститьЕдиницыИзмерения тогда
		Узел=УзелПО.ПолучитьОбъект();
		Узел.ОчиститьЕдиницыИзмерения=Ложь;
		Узел.Записать();
	КонецЕсли;	
	
	ОбъектСписка=ФабрикаXDTO.Создать(ФабрикаXDTO.Тип("http://www.data-mobile.ru","DMUnitList"));
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	               |	УпаковкиЕдиницыИзмеренияИзменения.Ссылка.ЕдиницаИзмерения.Ссылка КАК Ссылка,
	               |	ВЫРАЗИТЬ(УпаковкиЕдиницыИзмеренияИзменения.Ссылка.ЕдиницаИзмерения.Наименование КАК СТрока(10)) КАК Наименование
	               |ПОМЕСТИТЬ тЕдиницы
	               |ИЗ
	               |	Справочник.УпаковкиЕдиницыИзмерения КАК УпаковкиЕдиницыИзмеренияИзменения
	               |ГДЕ
	               |	УпаковкиЕдиницыИзмеренияИзменения.Ссылка.ЕдиницаИзмерения.Владелец = ЗНАЧЕНИЕ(Справочник.НаборыУпаковок.БазовыеЕдиницыИзмерения)
	               |	И УпаковкиЕдиницыИзмеренияИзменения.Ссылка.ЕдиницаИзмерения.ТипИзмеряемойВеличины = ЗНАЧЕНИЕ(Перечисление.ТипыИзмеряемыхВеличин.КоличествоШтук)
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	тЕдиницы.Ссылка,
	               |	тЕдиницы.Наименование
	               |ИЗ
	               |	тЕдиницы КАК тЕдиницы
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	тЕдиницы.Ссылка,
	               |	тЕдиницы.Наименование";
				   
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		
		ОбъектЕдиницыИзмерения=ФабрикаXDTO.Создать(ФабрикаXDTO.Тип("http://www.data-mobile.ru","DMUnit"));
		ОбъектЕдиницыИзмерения.DMUnitID = Строка(Выборка.Ссылка.УникальныйИдентификатор());
		ОбъектЕдиницыИзмерения.DMUnitName = ЧистаяСтрока(Выборка.Наименование);
		
		ОбъектСписка.DMUnit.Добавить(ОбъектЕдиницыИзмерения);

	КонецЦикла;
	
	//ПланыОбмена.УдалитьРегистрациюИзменений(УзелПО,Метаданные.Справочники.УпаковкиЕдиницыИзмерения);
	
	Возврат ОбъектСписка;

КонецФункции
Функция GetArtAttributesName(SN, UserName)
	
	УзелПО=НайтиУзел(SN);
	Если УзелПО=Неопределено тогда
		УзелПО = NewTSD(SN, UserName);
	КонецЕсли;

	
	ОбъектАтрибутов=ФабрикаXDTO.Создать(ФабрикаXDTO.Тип("http://www.data-mobile.ru","DMAttrs"));
	ЕСЛИ УзелПО.ИмяАтрибута1<>"" Тогда
		ОбъектАтрибутов.DMAttr1 = УзелПО.ИмяАтрибута1;
	ИНАЧЕ
		ОбъектАтрибутов.DMAttr1 = "Атрибут 1";
	КОНЕЦЕСЛИ;
	
	ЕСЛИ УзелПО.ИмяАтрибута2<>"" Тогда
		ОбъектАтрибутов.DMAttr2 = УзелПО.ИмяАтрибута2;
	ИНАЧЕ
		ОбъектАтрибутов.DMAttr2 = "Атрибут 2";
	КОНЕЦЕСЛИ;

	ЕСЛИ УзелПО.ИмяАтрибута3<>"" Тогда
		ОбъектАтрибутов.DMAttr3 = УзелПО.ИмяАтрибута3;
	ИНАЧЕ
		ОбъектАтрибутов.DMAttr3 = "Атрибут 3";
	КОНЕЦЕСЛИ;
	
	ЕСЛИ УзелПО.ИмяАтрибута4<>"" Тогда
		ОбъектАтрибутов.DMAttr4 = УзелПО.ИмяАтрибута4;
	ИНАЧЕ
		ОбъектАтрибутов.DMAttr4 = "Атрибут 4";
	КОНЕЦЕСЛИ;

	ЕСЛИ УзелПО.ИмяАтрибута5<>"" Тогда
		ОбъектАтрибутов.DMAttr5 = УзелПО.ИмяАтрибута5;
	ИНАЧЕ
		ОбъектАтрибутов.DMAttr5 = "Атрибут 5";
	КОНЕЦЕСЛИ;

	ЕСЛИ УзелПО.ИмяАтрибута6 <>"" Тогда
		ОбъектАтрибутов.DMAttr6 = УзелПО.ИмяАтрибута6;
	ИНАЧЕ
		ОбъектАтрибутов.DMAttr6 = "Атрибут 6";
	КОНЕЦЕСЛИ;

	ЕСЛИ УзелПО.ИмяАтрибута7<>"" Тогда
		ОбъектАтрибутов.DMAttr7 = УзелПО.ИмяАтрибута7;
	ИНАЧЕ
		ОбъектАтрибутов.DMAttr7 = "Атрибут 7";
	КОНЕЦЕСЛИ;

	ЕСЛИ УзелПО.ИмяАтрибута8<>"" Тогда
		ОбъектАтрибутов.DMAttr8 = УзелПО.ИмяАтрибута8;
	ИНАЧЕ
		ОбъектАтрибутов.DMAttr8 = "Атрибут 8";
	КОНЕЦЕСЛИ;

	ЕСЛИ УзелПО.ИмяАтрибута9<>"" Тогда
	ОбъектАтрибутов.DMAttr9 = УзелПО.ИмяАтрибута9;
	ИНАЧЕ
		ОбъектАтрибутов.DMAttr9 = "Атрибут 9";
	КОНЕЦЕСЛИ;

	ЕСЛИ УзелПО.ИмяАтрибута10<>"" Тогда
		ОбъектАтрибутов.DMAttr10 = УзелПО.ИмяАтрибута10;
	ИНАЧЕ
		ОбъектАтрибутов.DMAttr10 = "Атрибут 10";
	КОНЕЦЕСЛИ;

	Возврат ОбъектАтрибутов; 
КонецФункции
Функция GetArtOnBC(SN, UserName, Barcode)
	
				
	ОбъектСписка=ФабрикаXDTO.Создать(ФабрикаXDTO.Тип("http://www.data-mobile.ru","DMArtList"));
	
	УзелПО=НайтиУзел(SN);
	Если УзелПО=Неопределено тогда
		УзелПО = NewTSD(SN, UserName);
	КонецЕсли;
	
		
	Запрос=Новый Запрос("ВЫБРАТЬ РАЗЛИЧНЫЕ
	                    |	РегистрШтрихкодов.Номенклатура КАК Ссылка
	                    |ИЗ
	                    |	РегистрСведений.ШтрихкодыНоменклатуры КАК РегистрШтрихкодов
	                    |ГДЕ
	                    |	РегистрШтрихкодов.Штрихкод = &ШК");
						
	Запрос.УстановитьПараметр("ШК",Barcode);
	
	МассивКВыгрузке=Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка");
	Если МассивКВыгрузке.Количество()>0 тогда
		ОбъектСписка=СобратьТовары(МассивКВыгрузке,УзелПО);
	КонецЕсли;	
	Возврат ОбъектСписка;

	
КонецФункции
//////////////////////////////////////////////////////////////////////////////
Функция GetDocHeads(SN, UserName, DMDocsIDs)
	ОбъектСписка=ФабрикаXDTO.Создать(ФабрикаXDTO.Тип("http://www.data-mobile.ru","DMDocList"));
	УзелПО=НайтиУзел(SN);
	Если УзелПО=Неопределено тогда
		УзелПО = NewTSD(SN, UserName);
	КонецЕсли;
	
	Если УзелПО.ОчиститьДокументы тогда
		Узел=УзелПО.ПолучитьОбъект();
		Узел.ОчиститьДокументы=Ложь;
		Узел.Записать();
	КонецЕсли;	
	
	
	//Дополнительная верификация документов
	МассивДокументов = Новый Массив;
	Для Каждого DocOutID из DMDocsIDs.DMDocID цикл	
		Попытка
			СсылкаНаДок=Справочники.ДатаМобайл_ДокументыТСД.ПолучитьСсылку(Новый УникальныйИдентификатор(Сред(DocOutID,5)));
			МассивДокументов.Добавить(СсылкаНаДок);
		Исключение	
		КонецПопытки;
	КонецЦикла;	
	
	Запрос=Новый Запрос("ВЫБРАТЬ
	                     |	ДатаМобайл_ДокументыТСД.Ссылка
	                     |ИЗ
	                     |	Справочник.ДатаМобайл_ДокументыТСД КАК ДатаМобайл_ДокументыТСД
						 |ГДЕ
						 // 1) Документа нет на ТСД, по 1С документ еще не завершен, документ для этого терминала или для всех терминалов
						 |  ((ДатаМобайл_ДокументыТСД.Ссылка НЕ В (&СписокДокументов)) 
						 |  	И  (ДатаМобайл_ДокументыТСД.Ссылка.ТСД = &ТСД ИЛИ ДатаМобайл_ДокументыТСД.Ссылка.ТСД = ЗНАЧЕНИЕ(планобмена.датамобайл_списоктсд.пустаяссылка)) 
						 |  	И  (ДатаМобайл_ДокументыТСД.Ссылка.ДатаЗавершения = ДАТАВРЕМЯ(1, 1, 1)))
						 |   	И  (НЕ ДатаМобайл_ДокументыТСД.Ссылка.ПометкаУдаления)
						 |  ИЛИ
						 // 2) Документ есть на ТСД, но документ чужой или по 1С документ уже завершен или по 1С документ удален	 
						 |  ((ДатаМобайл_ДокументыТСД.Ссылка В (&СписокДокументов))
						 |  	И  ((ДатаМобайл_ДокументыТСД.Ссылка.ТСД <> &ТСД И ДатаМобайл_ДокументыТСД.Ссылка.ТСД <> ЗНАЧЕНИЕ(планобмена.датамобайл_списоктсд.пустаяссылка)) 
						 |   	ИЛИ  (ДатаМобайл_ДокументыТСД.Ссылка.ПометкаУдаления)
						 |  	ИЛИ  (ДатаМобайл_ДокументыТСД.Ссылка.ДатаЗавершения <> ДАТАВРЕМЯ(1, 1, 1))))
						 |");
							 
	Запрос.УстановитьПараметр("СписокДокументов",МассивДокументов);
	Запрос.УстановитьПараметр("ТСД",УзелПО.Ссылка);
	Рез=Запрос.Выполнить().Выбрать();
	Пока Рез.Следующий() цикл
		//Зарегистрируем спорные документы для обновления ТСД
		Попытка
			ПланыОбмена.ЗарегистрироватьИзменения(УзелПО,Рез.Ссылка);
		Исключение
		КонецПопытки;
	КонецЦикла;	
	//Дополнительная верификация документов

			
	ПланыОбмена.ВыбратьИзменения(УзелПО,1,Метаданные.Справочники.ДатаМобайл_ДокументыТСД);

	Запрос=Новый Запрос(
	//1) Запрос на DMIsMarkDoc = Ложь	
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	                    |	ЕСТЬNULL(ДатаМобайл_ДокументыТСДИзменения.Ссылка.Шаблон.Код, 0) КАК DMTemplateID,
	                    |	ЕСТЬNULL(ДатаМобайл_ДокументыТСДИзменения.Ссылка.Шаблон.Наименование, """") КАК DMTemplateName,
	                    |	ЕСТЬNULL(ДатаМобайл_ДокументыТСДИзменения.Ссылка.Шаблон.ВсеШтрихкодыТовара, ЛОЖЬ) КАК DMuseAllBarcode,
	                    |	ЕСТЬNULL(ДатаМобайл_ДокументыТСДИзменения.Ссылка.Шаблон.ПометкаУдаления, ЛОЖЬ) КАК DMisMark,
	                    |	ЕСТЬNULL(ДатаМобайл_ДокументыТСДИзменения.Ссылка.Номер, """") КАК DMNumber,
	                    //|	ЕСТЬNULL(ДатаМобайл_ДокументыТСДИзменения.Ссылка.ИсходныйДокумент.Ссылка, """") КАК DMNowDocs,
	                    |	ЕСТЬNULL(ДатаМобайл_ДокументыТСДИзменения.Ссылка.Дата, ДАТАВРЕМЯ(1, 1, 1)) КАК DMDate,
	                    |	ЛОЖЬ КАК DMisMarkDoc,
	                    |	ДатаМобайл_ДокументыТСДИзменения.Ссылка КАК ДокСсылка,
	                    |	ЕСТЬNULL(ДатаМобайл_ДокументыТСДИзменения.Ссылка.Номер, """") КАК DMBarcode,
	                    |	ЕСТЬNULL(ДатаМобайл_ДокументыТСДИзменения.Ссылка.Комментарий, """") КАК DMComment,
	                    |	ЕСТЬNULL(ДатаМобайл_ДокументыТСДИзменения.Ссылка.Шаблон.РазрешеноСозданиеНаТСД, ЛОЖЬ) КАК DMEnableNew,
	                    |	ВЫБОР
	                    |		КОГДА ЕСТЬNULL(ДатаМобайл_ДокументыТСДИзменения.Ссылка.ДатаЗавершенияСбора, ДАТАВРЕМЯ(1, 1, 1)) = ДАТАВРЕМЯ(1, 1, 1)
	                    |			ТОГДА ЛОЖЬ
	                    |		ИНАЧЕ ИСТИНА
	                    |	КОНЕЦ КАК DMisLoaded,
	                    |	ЕСТЬNULL(ДатаМобайл_ДокументыТСДИзменения.Ссылка.Клиент.Наименование, """") КАК DMClientName,
	                    |	ЕСТЬNULL(ДатаМобайл_ДокументыТСДИзменения.Ссылка.Клиент.Код, """") КАК DMClientBarcode,
	                    |	ЕСТЬNULL(ДатаМобайл_ДокументыТСДИзменения.Ссылка.Клиент, ЗНАЧЕНИЕ(Справочник.Партнеры.ПустаяСсылка)) КАК КлиентСсылка,
	                    |	ЕСТЬNULL(ДатаМобайл_ДокументыТСДИзменения.Ссылка.Шаблон.ОбновлятьПриКаждомОткрытии, ЛОЖЬ) КАК DMLoadRowsOnOpen,
	                    |	ЕСТЬNULL(ДатаМобайл_ДокументыТСДИзменения.Ссылка.Шаблон.ОбновлятьТоварыСДокументом, ЛОЖЬ) КАК DMLoadArtsWithRows,
	                    |	ЕСТЬNULL(ДатаМобайл_ДокументыТСДИзменения.Ссылка.Шаблон.ЗапретитьРучноеИзменениеКлиента, ЛОЖЬ) КАК DMDisableManualChangeClient,
	                    |	ЕСТЬNULL(ДатаМобайл_ДокументыТСДИзменения.Ссылка.Шаблон.ЗапретитьИзменениеКлиентаКардРидером, ЛОЖЬ) КАК DMDisableReaderChangeClient,
	                    |	ЕСТЬNULL(ДатаМобайл_ДокументыТСДИзменения.Ссылка.Шаблон.КардРидер_Трек1, ЛОЖЬ) КАК DMreaderTrack1Use,
	                    |	ЕСТЬNULL(ДатаМобайл_ДокументыТСДИзменения.Ссылка.Шаблон.КардРидер_Трек2, ЛОЖЬ) КАК DMreaderTrack2Use,
	                    |	ЕСТЬNULL(ДатаМобайл_ДокументыТСДИзменения.Ссылка.Шаблон.КардРидер_Трек3, ЛОЖЬ) КАК DMreaderTrack3Use,
	                    |	ЕСТЬNULL(ДатаМобайл_ДокументыТСДИзменения.Ссылка.Шаблон.ГенерацияПаклистаНаСервере, ЛОЖЬ) КАК DMnewPackOnWS,
	                    |	ЕСТЬNULL(ДатаМобайл_ДокументыТСДИзменения.Ссылка.Шаблон.ШтрихкодыТолькоПоШаблонам, ЛОЖЬ) КАК DMuseBCTemplates,
	                    |	ЕСТЬNULL(ДатаМобайл_ДокументыТСДИзменения.Ссылка.Шаблон.ИспользоватьПодбор, ЛОЖЬ) КАК DMuse_Select,
	                    |	ЕСТЬNULL(ДатаМобайл_ДокументыТСДИзменения.Ссылка.Шаблон.ИспользоватьПриемку, ЛОЖЬ) КАК DMuse_Insert,
	                    |	ЕСТЬNULL(ДатаМобайл_ДокументыТСДИзменения.Ссылка.Шаблон.ПриемкаПоПодбору, ЛОЖЬ) КАК DMuseSelectLogAsInsertTask,
	                    |	ЕСТЬNULL(ДатаМобайл_ДокументыТСДИзменения.Ссылка.Шаблон.ПриПриемкеЗапрашиватьТовар, ЛОЖЬ) КАК DMuseArt_Insert,
	                    |	ЕСТЬNULL(ДатаМобайл_ДокументыТСДИзменения.Ссылка.Шаблон.РазрешитьВыгрузкуНеполногоДокумента, 0) КАК DMonUploadIncorrectDoc,
	                    |	ЕСТЬNULL(ДатаМобайл_ДокументыТСДИзменения.Ссылка.Шаблон.ПриСканированииТовараПодбор, 0) КАК DMonArtScan_Select,
	                    |	ЕСТЬNULL(ДатаМобайл_ДокументыТСДИзменения.Ссылка.Шаблон.ПриСканированииТовараПриемка, 0) КАК DMonArtScan_Insert,
	                    |	ЕСТЬNULL(ДатаМобайл_ДокументыТСДИзменения.Ссылка.Шаблон.ПриПревышенииЗаданияПодбор, 0) КАК DMonTaskQty_Select,
	                    |	ЕСТЬNULL(ДатаМобайл_ДокументыТСДИзменения.Ссылка.Шаблон.ПриПревышенииЗаданияПриемка, 0) КАК DMonTaskQty_Insert,
	                    |	ЕСТЬNULL(ДатаМобайл_ДокументыТСДИзменения.Ссылка.Шаблон.ПриПревышенииЛимитаПодбор, 0) КАК DMonLimitQty_Select,
	                    |	ЕСТЬNULL(ДатаМобайл_ДокументыТСДИзменения.Ссылка.Шаблон.ПриПревышенииЛимитаПриемка, 0) КАК DMonLimitQty_Insert,
	                    |	ЕСТЬNULL(ДатаМобайл_ДокументыТСДИзменения.Ссылка.Шаблон.ИспользованиеЯчеекПодбор, 0) КАК DMuseCell_Select,
	                    |	ЕСТЬNULL(ДатаМобайл_ДокументыТСДИзменения.Ссылка.Шаблон.ИспользованиеЯчеекПриемка, 0) КАК DMuseCell_Insert,
	                    |	ЕСТЬNULL(ДатаМобайл_ДокументыТСДИзменения.Ссылка.Шаблон.ИспользованиеУпаковочныхЛистовПодбор, 0) КАК DMusePack_Select,
	                    |	ЕСТЬNULL(ДатаМобайл_ДокументыТСДИзменения.Ссылка.Шаблон.ИспользованиеУпаковочныхЛистовПриемка, 0) КАК DMusePack_Insert,
	                    |	ЕСТЬNULL(ДатаМобайл_ДокументыТСДИзменения.Ссылка.Шаблон.УчитыватьЯчеекВЗаданииПодбор, ЛОЖЬ) КАК DMuseCellOnTask_Select,
	                    |	ЕСТЬNULL(ДатаМобайл_ДокументыТСДИзменения.Ссылка.Шаблон.УчитыватьЯчеекВЗаданииПриемка, ЛОЖЬ) КАК DMuseCellOnTask_Insert,
	                    |	ЕСТЬNULL(ДатаМобайл_ДокументыТСДИзменения.Ссылка.Шаблон.УчитыватьСерийниковВЗаданииПодбор, ЛОЖЬ) КАК DMuseSNOnTask_Select,
	                    |	ЕСТЬNULL(ДатаМобайл_ДокументыТСДИзменения.Ссылка.Шаблон.УчитыватьСерийниковВЗаданииПриемка, ЛОЖЬ) КАК DMuseSNOnTask_Insert,
	                    |	ЕСТЬNULL(ДатаМобайл_ДокументыТСДИзменения.Ссылка.Шаблон.РучнойВводКоличестваПодбор, ЛОЖЬ) КАК DMquantEnable_Select,
	                    |	ЕСТЬNULL(ДатаМобайл_ДокументыТСДИзменения.Ссылка.Шаблон.РучнойВводКоличестваПриемка, ЛОЖЬ) КАК DMquantEnable_Insert,
	                    |	ЕСТЬNULL(ДатаМобайл_ДокументыТСДИзменения.Ссылка.Шаблон.ПодтверждатьЭнтеромПодбор, ЛОЖЬ) КАК DMenterToCommit_Select,
	                    |	ЕСТЬNULL(ДатаМобайл_ДокументыТСДИзменения.Ссылка.Шаблон.ПодтверждатьЭнтеромПриемка, ЛОЖЬ) КАК DMenterToCommit_Insert,
	                    |	ЕСТЬNULL(ДатаМобайл_ДокументыТСДИзменения.Ссылка.Шаблон.ОтсылатьГотовуюЗаписьНаСерверПодбор, ЛОЖЬ) КАК DMwriteRecordToWS_Select,
	                    |	ЕСТЬNULL(ДатаМобайл_ДокументыТСДИзменения.Ссылка.Шаблон.ОтсылатьГотовуюЗаписьНаСерверПриемка, ЛОЖЬ) КАК DMwriteRecordToWS_Insert,
	                    |	ЕСТЬNULL(ДатаМобайл_ДокументыТСДИзменения.Ссылка.Шаблон.ПечатьЭтикеткиПриПриемке, 0) КАК DMPrintLabel_Insert,
	                    |	ЕСТЬNULL(ДатаМобайл_ДокументыТСДИзменения.Ссылка.Шаблон.ПечатьЭтикеткиПриПодборе, 0) КАК DMPrintLabel_Select,
	                    |	ЕСТЬNULL(ДатаМобайл_ДокументыТСДИзменения.Ссылка.Шаблон.ИспользованиеСерийниковПодбор, 0) КАК DMuseSN_Select,
	                    |	ЕСТЬNULL(ДатаМобайл_ДокументыТСДИзменения.Ссылка.Шаблон.ИспользованиеСерийниковПриемка, 0) КАК DMuseSN_Insert,
	                    |	ЕСТЬNULL(ДатаМобайл_ДокументыТСДИзменения.Ссылка.Шаблон.ПоштучноеПеремещение, 0) КАК DMoneArtReplaceMode,
	                    |	ЕСТЬNULL(ДатаМобайл_ДокументыТСДИзменения.Ссылка.Шаблон.ПриСканированииНовогоТовара, 0) КАК DMonNewArt,
	                    |	ЕСТЬNULL(ДатаМобайл_ДокументыТСДИзменения.Ссылка.Шаблон.УникальныеШтрихкодыНоменклатурыВДокументе, ЛОЖЬ) КАК DMuniquebarcodedoc,
	                    |	ЕСТЬNULL(ДатаМобайл_ДокументыТСДИзменения.Ссылка.Шаблон.ГрупповаяРабота, ЛОЖЬ) КАК DMMultiDoc,
	                    |	ЕСТЬNULL(ДатаМобайл_ДокументыТСДИзменения.Ссылка.Шаблон.ГрупповаяРаботаЗвуковоеОповещение, ЛОЖЬ) КАК DMMultiDocSound,
	                    |	ЕСТЬNULL(ДатаМобайл_ДокументыТСДИзменения.Ссылка.Шаблон.ГрупповаяРаботаИнтервалОпроса, 0) КАК DMMultiDocTimeout,
	                    |	ЕСТЬNULL(ДатаМобайл_ДокументыТСДИзменения.Ссылка.Шаблон.ВыгрузкаЯчеекПодбор, 0) КАК DMEnterCell_Select,
	                    |	ЕСТЬNULL(ДатаМобайл_ДокументыТСДИзменения.Ссылка.Шаблон.ВыгрузкаЯчеекПриемка, 0) КАК DMEnterCell_Insert,
	                    |	ЕСТЬNULL(ДатаМобайл_ДокументыТСДИзменения.Ссылка.Шаблон.ЕГАИС, ЛОЖЬ) КАК DMUseEgais,
	                    |	ЕСТЬNULL(ДатаМобайл_ДокументыТСДИзменения.Ссылка.Шаблон.ЕГАИСИспользоватьДатуРозлива, ЛОЖЬ) КАК DMUseDateBottling,
	                    |	ЕСТЬNULL(ДатаМобайл_ДокументыТСДИзменения.Ссылка.Шаблон.ЕгаисИспользоватьМарку, 0) КАК DMUseDataMatrixBarcode,
	                    |	ЕСТЬNULL(ДатаМобайл_ДокументыТСДИзменения.Ссылка.Шаблон.ЕГАИСРежимВВодаPDF417, 0) КАК DMEnterPDF417Barcode,
	                    |	ЕСТЬNULL(ДатаМобайл_ДокументыТСДИзменения.Ссылка.Шаблон.СопоставлениеЕГАИС, ЛОЖЬ) КАК DMEgaisCompare,
						|	ЕСТЬNULL(ДатаМобайл_ДокументыТСДИзменения.Ссылка.Шаблон.ЕГАИСИспользоватьСправкуА, 0) КАК DMUseBlankA,
						|	ЕСТЬNULL(ДатаМобайл_ДокументыТСДИзменения.Ссылка.Шаблон.ЕГАИСИспользоватьСправкуБ, 0) КАК DMUseBlankB,
						|	ЕСТЬNULL(ДатаМобайл_ДокументыТСДИзменения.Ссылка.Шаблон.ЕГАИСИспользоватьПроверкуМарок, 0) КАК DMUseCheckMark,
	                    |	ЕСТЬNULL(ДатаМобайл_ДокументыТСДИзменения.Ссылка.Шаблон.ЗагружатьCписокЯчеекССервераПодбор, ЛОЖЬ) КАК DMGetCellsListFromServerSelect,
	                    |	ЕСТЬNULL(ДатаМобайл_ДокументыТСДИзменения.Ссылка.Шаблон.ЗагружатьCписокЯчеекССервераПриемка, ЛОЖЬ) КАК DMGetCellsListFromServerInsert,
	                    |	ЕСТЬNULL(ДатаМобайл_ДокументыТСДИзменения.Ссылка.Шаблон.УникальныеСерийныеНомераПодбор, ЛОЖЬ) КАК DMIsUniqueSNSelect,
	                    |	ЕСТЬNULL(ДатаМобайл_ДокументыТСДИзменения.Ссылка.Шаблон.УникальныеСерийныеНомераПриемка, ЛОЖЬ) КАК DMIsUniqueSNInsert,
						|	ЕСТЬNULL(ДатаМобайл_ДокументыТСДИзменения.Ссылка.Шаблон.ВерсияЕГАИС, 0) КАК DMEgaisVersion,
						|	ЕСТЬNULL(ДатаМобайл_ДокументыТСДИзменения.Ссылка.Шаблон.ИспользоватьСервисRateGoods, ЛОЖЬ) КАК DMUseOnlineArtsCatalog,
						|	ЕСТЬNULL(ДатаМобайл_ДокументыТСДИзменения.Ссылка.Шаблон.ЕГАИСЗагружатьСписокДатРозлива, ЛОЖЬ) КАК DMGetDateBottlingFromServer
	                    |ИЗ
	                    |	Справочник.ДатаМобайл_ДокументыТСД.Изменения КАК ДатаМобайл_ДокументыТСДИзменения
	                    |ГДЕ
	                    |	НЕ ДатаМобайл_ДокументыТСДИзменения.НомерСообщения ЕСТЬ NULL
	                    |	И НЕ(ЕСТЬNULL(ДатаМобайл_ДокументыТСДИзменения.Ссылка.ПометкаУдаления, ИСТИНА)
	                    |				ИЛИ ДатаМобайл_ДокументыТСДИзменения.Ссылка.ДатаЗавершения <> ДАТАВРЕМЯ(1, 1, 1)
	                    |				ИЛИ НЕ(&ВсеСклады
	                    |						ИЛИ ЕСТЬNULL(ДатаМобайл_ДокументыТСДИзменения.Ссылка.Склад,ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка)) В (&Склады))
						//|   			ИЛИ ЕСТЬNULL(ДатаМобайл_ДокументыТСДИзменения.Ссылка.ИсходныйДокумент.ПометкаУдаления,Ложь)
	                    |				ИЛИ НЕ(&ВсеШаблоны
	                    |						ИЛИ ДатаМобайл_ДокументыТСДИзменения.Ссылка.Шаблон В (&Шаблон))
	                    |				ИЛИ ВЫБОР
	                    |					КОГДА ДатаМобайл_ДокументыТСДИзменения.Ссылка.Шаблон.ГрупповаяРабота
	                    |						ТОГДА ВЫБОР
	                    |								КОГДА ДатаМобайл_ДокументыТСДИзменения.Ссылка.ДатаПриемкиОператором <> ДАТАВРЕМЯ(1, 1, 1)
	                    |									ТОГДА ИСТИНА
	                    |								ИНАЧЕ ЛОЖЬ
	                    |							КОНЕЦ
	                    |					ИНАЧЕ ВЫБОР
	                    |							КОГДА НЕ(ДатаМобайл_ДокументыТСДИзменения.Ссылка.ТСД = &ТСД
	                    |										ИЛИ ДатаМобайл_ДокументыТСДИзменения.Ссылка.ТСД = ЗНАЧЕНИЕ(планобмена.датамобайл_списоктсд.пустаяссылка))
	                    |								ТОГДА ИСТИНА
	                    |							ИНАЧЕ ЛОЖЬ
	                    |						КОНЕЦ
	                    |				КОНЕЦ)
	                    |
	                    |ОБЪЕДИНИТЬ ВСЕ
						//2) Запрос на DMIsMarkDOc|
						|
	                    |ВЫБРАТЬ РАЗЛИЧНЫЕ
	                    |	ЕСТЬNULL(ДатаМобайл_ДокументыТСДИзменения.Ссылка.Шаблон.Код, 0),
	                    |	ЕСТЬNULL(ДатаМобайл_ДокументыТСДИзменения.Ссылка.Шаблон.Наименование, """"),
	                    |	ЕСТЬNULL(ДатаМобайл_ДокументыТСДИзменения.Ссылка.Шаблон.ВсеШтрихкодыТовара, ЛОЖЬ),
	                    |	ЕСТЬNULL(ДатаМобайл_ДокументыТСДИзменения.Ссылка.Шаблон.ПометкаУдаления, ЛОЖЬ),
	                    |	ЕСТЬNULL(ДатаМобайл_ДокументыТСДИзменения.Ссылка.Номер, """"),
	                    //|	ЕСТЬNULL(ДатаМобайл_ДокументыТСДИзменения.Ссылка.ИсходныйДокумент.Ссылка, """"),
	                    |	ЕСТЬNULL(ДатаМобайл_ДокументыТСДИзменения.Ссылка.Дата, ДАТАВРЕМЯ(1, 1, 1)),
	                    |	ИСТИНА,
	                    |	ДатаМобайл_ДокументыТСДИзменения.Ссылка,
	                    |	ЕСТЬNULL(ДатаМобайл_ДокументыТСДИзменения.Ссылка.Номер, """"),
	                    |	ЕСТЬNULL(ДатаМобайл_ДокументыТСДИзменения.Ссылка.Комментарий, """"),
	                    |	ЕСТЬNULL(ДатаМобайл_ДокументыТСДИзменения.Ссылка.Шаблон.РазрешеноСозданиеНаТСД, ЛОЖЬ),
	                    |	ВЫБОР
	                    |		КОГДА ЕСТЬNULL(ДатаМобайл_ДокументыТСДИзменения.Ссылка.ДатаЗавершенияСбора, ДАТАВРЕМЯ(1, 1, 1)) = ДАТАВРЕМЯ(1, 1, 1)
	                    |			ТОГДА ЛОЖЬ
	                    |		ИНАЧЕ ИСТИНА
	                    |	КОНЕЦ,
	                    |	ЕСТЬNULL(ДатаМобайл_ДокументыТСДИзменения.Ссылка.Клиент.Наименование, """"),
	                    |	ЕСТЬNULL(ДатаМобайл_ДокументыТСДИзменения.Ссылка.Клиент.Код, """"),
	                    |	ЕСТЬNULL(ДатаМобайл_ДокументыТСДИзменения.Ссылка.Клиент, ЗНАЧЕНИЕ(Справочник.Партнеры.ПустаяСсылка)),
	                    |	ЕСТЬNULL(ДатаМобайл_ДокументыТСДИзменения.Ссылка.Шаблон.ОбновлятьПриКаждомОткрытии, ЛОЖЬ),
	                    |	ЕСТЬNULL(ДатаМобайл_ДокументыТСДИзменения.Ссылка.Шаблон.ОбновлятьТоварыСДокументом, ЛОЖЬ),
	                    |	ЕСТЬNULL(ДатаМобайл_ДокументыТСДИзменения.Ссылка.Шаблон.ЗапретитьРучноеИзменениеКлиента, ЛОЖЬ),
	                    |	ЕСТЬNULL(ДатаМобайл_ДокументыТСДИзменения.Ссылка.Шаблон.ЗапретитьИзменениеКлиентаКардРидером, ЛОЖЬ),
	                    |	ЕСТЬNULL(ДатаМобайл_ДокументыТСДИзменения.Ссылка.Шаблон.КардРидер_Трек1, ЛОЖЬ),
	                    |	ЕСТЬNULL(ДатаМобайл_ДокументыТСДИзменения.Ссылка.Шаблон.КардРидер_Трек2, ЛОЖЬ),
	                    |	ЕСТЬNULL(ДатаМобайл_ДокументыТСДИзменения.Ссылка.Шаблон.КардРидер_Трек3, ЛОЖЬ),
	                    |	ЕСТЬNULL(ДатаМобайл_ДокументыТСДИзменения.Ссылка.Шаблон.ГенерацияПаклистаНаСервере, ЛОЖЬ),
	                    |	ЕСТЬNULL(ДатаМобайл_ДокументыТСДИзменения.Ссылка.Шаблон.ШтрихкодыТолькоПоШаблонам, ЛОЖЬ),
	                    |	ЕСТЬNULL(ДатаМобайл_ДокументыТСДИзменения.Ссылка.Шаблон.ИспользоватьПодбор, ЛОЖЬ),
	                    |	ЕСТЬNULL(ДатаМобайл_ДокументыТСДИзменения.Ссылка.Шаблон.ИспользоватьПриемку, ЛОЖЬ),
	                    |	ЕСТЬNULL(ДатаМобайл_ДокументыТСДИзменения.Ссылка.Шаблон.ПриемкаПоПодбору, ЛОЖЬ),
	                    |	ЕСТЬNULL(ДатаМобайл_ДокументыТСДИзменения.Ссылка.Шаблон.ПриПриемкеЗапрашиватьТовар, ЛОЖЬ),
	                    |	ЕСТЬNULL(ДатаМобайл_ДокументыТСДИзменения.Ссылка.Шаблон.РазрешитьВыгрузкуНеполногоДокумента, 0),
	                    |	ЕСТЬNULL(ДатаМобайл_ДокументыТСДИзменения.Ссылка.Шаблон.ПриСканированииТовараПодбор, 0),
	                    |	ЕСТЬNULL(ДатаМобайл_ДокументыТСДИзменения.Ссылка.Шаблон.ПриСканированииТовараПриемка, 0),
	                    |	ЕСТЬNULL(ДатаМобайл_ДокументыТСДИзменения.Ссылка.Шаблон.ПриПревышенииЗаданияПодбор, 0),
	                    |	ЕСТЬNULL(ДатаМобайл_ДокументыТСДИзменения.Ссылка.Шаблон.ПриПревышенииЗаданияПриемка, 0),
	                    |	ЕСТЬNULL(ДатаМобайл_ДокументыТСДИзменения.Ссылка.Шаблон.ПриПревышенииЛимитаПодбор, 0),
	                    |	ЕСТЬNULL(ДатаМобайл_ДокументыТСДИзменения.Ссылка.Шаблон.ПриПревышенииЛимитаПриемка, 0),
	                    |	ЕСТЬNULL(ДатаМобайл_ДокументыТСДИзменения.Ссылка.Шаблон.ИспользованиеЯчеекПодбор, 0),
	                    |	ЕСТЬNULL(ДатаМобайл_ДокументыТСДИзменения.Ссылка.Шаблон.ИспользованиеЯчеекПриемка, 0),
	                    |	ЕСТЬNULL(ДатаМобайл_ДокументыТСДИзменения.Ссылка.Шаблон.ИспользованиеУпаковочныхЛистовПодбор, 0),
	                    |	ЕСТЬNULL(ДатаМобайл_ДокументыТСДИзменения.Ссылка.Шаблон.ИспользованиеУпаковочныхЛистовПриемка, 0),
	                    |	ЕСТЬNULL(ДатаМобайл_ДокументыТСДИзменения.Ссылка.Шаблон.УчитыватьЯчеекВЗаданииПодбор, ЛОЖЬ),
	                    |	ЕСТЬNULL(ДатаМобайл_ДокументыТСДИзменения.Ссылка.Шаблон.УчитыватьЯчеекВЗаданииПриемка, ЛОЖЬ),
	                    |	ЕСТЬNULL(ДатаМобайл_ДокументыТСДИзменения.Ссылка.Шаблон.УчитыватьСерийниковВЗаданииПодбор, ЛОЖЬ),
	                    |	ЕСТЬNULL(ДатаМобайл_ДокументыТСДИзменения.Ссылка.Шаблон.УчитыватьСерийниковВЗаданииПриемка, ЛОЖЬ),
	                    |	ЕСТЬNULL(ДатаМобайл_ДокументыТСДИзменения.Ссылка.Шаблон.РучнойВводКоличестваПодбор, ЛОЖЬ),
	                    |	ЕСТЬNULL(ДатаМобайл_ДокументыТСДИзменения.Ссылка.Шаблон.РучнойВводКоличестваПриемка, ЛОЖЬ),
	                    |	ЕСТЬNULL(ДатаМобайл_ДокументыТСДИзменения.Ссылка.Шаблон.ПодтверждатьЭнтеромПодбор, ЛОЖЬ),
	                    |	ЕСТЬNULL(ДатаМобайл_ДокументыТСДИзменения.Ссылка.Шаблон.ПодтверждатьЭнтеромПриемка, ЛОЖЬ),
	                    |	ЕСТЬNULL(ДатаМобайл_ДокументыТСДИзменения.Ссылка.Шаблон.ОтсылатьГотовуюЗаписьНаСерверПодбор, ЛОЖЬ),
	                    |	ЕСТЬNULL(ДатаМобайл_ДокументыТСДИзменения.Ссылка.Шаблон.ОтсылатьГотовуюЗаписьНаСерверПриемка, ЛОЖЬ),
	                    |	ЕСТЬNULL(ДатаМобайл_ДокументыТСДИзменения.Ссылка.Шаблон.ПечатьЭтикеткиПриПриемке, 0),
	                    |	ЕСТЬNULL(ДатаМобайл_ДокументыТСДИзменения.Ссылка.Шаблон.ПечатьЭтикеткиПриПодборе, 0),
	                    |	ЕСТЬNULL(ДатаМобайл_ДокументыТСДИзменения.Ссылка.Шаблон.ИспользованиеСерийниковПодбор, 0),
	                    |	ЕСТЬNULL(ДатаМобайл_ДокументыТСДИзменения.Ссылка.Шаблон.ИспользованиеСерийниковПриемка, 0),
	                    |	ЕСТЬNULL(ДатаМобайл_ДокументыТСДИзменения.Ссылка.Шаблон.ПоштучноеПеремещение, 0),
	                    |	ЕСТЬNULL(ДатаМобайл_ДокументыТСДИзменения.Ссылка.Шаблон.ПриСканированииНовогоТовара, 0),
	                    |	ЕСТЬNULL(ДатаМобайл_ДокументыТСДИзменения.Ссылка.Шаблон.УникальныеШтрихкодыНоменклатурыВДокументе, ЛОЖЬ),
	                    |	ЕСТЬNULL(ДатаМобайл_ДокументыТСДИзменения.Ссылка.Шаблон.ГрупповаяРабота, ЛОЖЬ),
	                    |	ЕСТЬNULL(ДатаМобайл_ДокументыТСДИзменения.Ссылка.Шаблон.ГрупповаяРаботаЗвуковоеОповещение, ЛОЖЬ),
	                    |	ЕСТЬNULL(ДатаМобайл_ДокументыТСДИзменения.Ссылка.Шаблон.ГрупповаяРаботаИнтервалОпроса, 0),
	                    |	ЕСТЬNULL(ДатаМобайл_ДокументыТСДИзменения.Ссылка.Шаблон.ВыгрузкаЯчеекПодбор, 0),
	                    |	ЕСТЬNULL(ДатаМобайл_ДокументыТСДИзменения.Ссылка.Шаблон.ВыгрузкаЯчеекПриемка, 0),
	                    |	ЕСТЬNULL(ДатаМобайл_ДокументыТСДИзменения.Ссылка.Шаблон.ЕГАИС, ЛОЖЬ),
	                    |	ЕСТЬNULL(ДатаМобайл_ДокументыТСДИзменения.Ссылка.Шаблон.ЕГАИСИспользоватьДатуРозлива, ЛОЖЬ),
	                    |	ЕСТЬNULL(ДатаМобайл_ДокументыТСДИзменения.Ссылка.Шаблон.ЕгаисИспользоватьМарку, 0),
	                    |	ЕСТЬNULL(ДатаМобайл_ДокументыТСДИзменения.Ссылка.Шаблон.ЕГАИСРежимВВодаPDF417, 0),
	                    |	ЕСТЬNULL(ДатаМобайл_ДокументыТСДИзменения.Ссылка.Шаблон.СопоставлениеЕГАИС, ЛОЖЬ),
						|	ЕСТЬNULL(ДатаМобайл_ДокументыТСДИзменения.Ссылка.Шаблон.ЕГАИСИспользоватьСправкуА, 0),
						|	ЕСТЬNULL(ДатаМобайл_ДокументыТСДИзменения.Ссылка.Шаблон.ЕГАИСИспользоватьСправкуБ, 0),
						|	ЕСТЬNULL(ДатаМобайл_ДокументыТСДИзменения.Ссылка.Шаблон.ЕГАИСИспользоватьПроверкуМарок, 0),
	                    |	ЕСТЬNULL(ДатаМобайл_ДокументыТСДИзменения.Ссылка.Шаблон.ЗагружатьCписокЯчеекССервераПодбор, ЛОЖЬ),
	                    |	ЕСТЬNULL(ДатаМобайл_ДокументыТСДИзменения.Ссылка.Шаблон.ЗагружатьCписокЯчеекССервераПриемка, ЛОЖЬ),
	                    |	ЕСТЬNULL(ДатаМобайл_ДокументыТСДИзменения.Ссылка.Шаблон.УникальныеСерийныеНомераПодбор, ЛОЖЬ),
	                    |	ЕСТЬNULL(ДатаМобайл_ДокументыТСДИзменения.Ссылка.Шаблон.УникальныеСерийныеНомераПриемка, ЛОЖЬ),
						|	ЕСТЬNULL(ДатаМобайл_ДокументыТСДИзменения.Ссылка.Шаблон.ВерсияЕГАИС, 0),
						|	ЕСТЬNULL(ДатаМобайл_ДокументыТСДИзменения.Ссылка.Шаблон.ИспользоватьСервисRateGoods, ЛОЖЬ),
						|	ЕСТЬNULL(ДатаМобайл_ДокументыТСДИзменения.Ссылка.Шаблон.ЕГАИСЗагружатьСписокДатРозлива, ЛОЖЬ)
						|ИЗ
	                    |	Справочник.ДатаМобайл_ДокументыТСД.Изменения КАК ДатаМобайл_ДокументыТСДИзменения
	                    |ГДЕ
	                    |	НЕ ДатаМобайл_ДокументыТСДИзменения.НомерСообщения ЕСТЬ NULL
	                    |	И ДатаМобайл_ДокументыТСДИзменения.Ссылка В(&СписокДокументов)
	                    |	И (ЕСТЬNULL(ДатаМобайл_ДокументыТСДИзменения.Ссылка.ПометкаУдаления, ИСТИНА)
	                    |			ИЛИ ДатаМобайл_ДокументыТСДИзменения.Ссылка.ДатаЗавершения <> ДАТАВРЕМЯ(1, 1, 1)
						|			ИЛИ НЕ(&ВсеСклады
	                    |					ИЛИ ЕСТЬNULL(ДатаМобайл_ДокументыТСДИзменения.Ссылка.Склад,ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка)) В (&Склады))
						//|   		ИЛИ ЕСТЬNULL(ДатаМобайл_ДокументыТСДИзменения.Ссылка.ИсходныйДокумент.ПометкаУдаления, Ложь)
	                    |			ИЛИ НЕ(&ВсеШаблоны
	                    |					ИЛИ ДатаМобайл_ДокументыТСДИзменения.Ссылка.Шаблон В (&Шаблон))
	                    |			ИЛИ ВЫБОР
	                    |				КОГДА ДатаМобайл_ДокументыТСДИзменения.Ссылка.Шаблон.ГрупповаяРабота
	                    |					ТОГДА ВЫБОР
	                    |							КОГДА ДатаМобайл_ДокументыТСДИзменения.Ссылка.ДатаПриемкиОператором <> ДАТАВРЕМЯ(1, 1, 1)
	                    |								ТОГДА ИСТИНА
	                    |							ИНАЧЕ ЛОЖЬ
	                    |						КОНЕЦ
	                    |				ИНАЧЕ ВЫБОР
	                    |						КОГДА НЕ(ДатаМобайл_ДокументыТСДИзменения.Ссылка.ТСД = &ТСД
	                    |									ИЛИ ДатаМобайл_ДокументыТСДИзменения.Ссылка.ТСД = ЗНАЧЕНИЕ(планобмена.датамобайл_списоктсд.пустаяссылка))
	                    |							ТОГДА ИСТИНА
	                    |						ИНАЧЕ ЛОЖЬ
	                    |					КОНЕЦ
	                    |			КОНЕЦ)");

	Запрос.УстановитьПараметр("ТСД",УзелПО.Ссылка);
	СписокСкладов=УзелПО.Склады.ВыгрузитьКолонку("Склад");
	Запрос.УстановитьПараметр("Склады",СписокСкладов);
	Запрос.УстановитьПараметр("ВсеСклады",СписокСкладов.Количество()=0);
	СписокШаблонов=УзелПО.Шаблоны.ВыгрузитьКолонку("Шаблон");
	Запрос.УстановитьПараметр("Шаблон",СписокШаблонов);
	Запрос.УстановитьПараметр("ВсеШаблоны",СписокШаблонов.Количество()=0);
	Запрос.УстановитьПараметр("СписокДокументов",МассивДокументов);
	Рез=Запрос.Выполнить().Выбрать();
	Пока Рез.Следующий() цикл
		ОбъектДока=ФабрикаXDTO.Создать(ФабрикаXDTO.Тип("http://www.data-mobile.ru","DMDocHead"));
		ОбъектШаблона=ФабрикаXDTO.Создать(ФабрикаXDTO.Тип("http://www.data-mobile.ru","DMTemplate"));
		ОбъектКлиента=ФабрикаXDTO.Создать(ФабрикаXDTO.Тип("http://www.data-mobile.ru","DMClient"));
		ОбъектКлиента.DMClientID=?(Рез.КлиентСсылка.Пустая(),"","8k-"+СокрЛП(Рез.КлиентСсылка.УникальныйИдентификатор()));
		ОбъектКлиента.DMName=Рез.DMClientName;
		ОбъектКлиента.DMBarcode=Рез.DMClientBarcode;
		ОбъектДока.DMClient=ОбъектКлиента;
		ЗаполнитьЗначенияСвойств(ОбъектШаблона,Рез);
		ЗаполнитьЗначенияСвойств(ОбъектДока,Рез);
		ОбъектДока.DMDocOutID="d82-"+Строка(Рез.ДокСсылка.УникальныйИдентификатор());
		
				
		
		ОбъектДока.DMisMark=Рез.DMisMarkDoc;
		ОбъектДока.DMTemplate=ОбъектШаблона;
		ОбъектДока.DMComment=ЧистаяСтрока(ОбъектДока.DMComment);
		ОбъектДока.DMBarcode=ЧистаяСтрока(ОбъектДока.DMBarcode);
		
		//Штрихкод от 1С	
		Попытка
			ОбъектДока.DMBarcode=  ЧисловойКодПоСсылке(Рез.ДокСсылка.ИсходныйДокумент);
		Исключение
			ОбъектДока.DMBarcode=  "";
		КонецПопытки;
		
		ОбъектДока.DMNumber=ЧистаяСтрока(ОбъектДока.DMNumber);
		ОбъектСписка.DMDocHead.Добавить(ОбъектДока);
	КонецЦикла;	
	ПланыОбмена.УдалитьРегистрациюИзменений(УзелПО,Метаданные.Справочники.ДатаМобайл_ДокументыТСД);
	Возврат ОбъектСписка;
КонецФункции
Функция ЧисловойКодПоСсылке(Ссылка) Экспорт
	ШестнадчатиричноеЧисло = СтрЗаменить(Строка(Ссылка.УникальныйИдентификатор()),"-","");
	Возврат ПреобразоватьИзШестнадцатиричнойСистемыСчисленияВДесятичноеЧисло(ШестнадчатиричноеЧисло);
КонецФункции
Функция ПреобразоватьИзШестнадцатиричнойСистемыСчисленияВДесятичноеЧисло(Знач Значение)
	
	Значение = НРег(Значение);
	ДлинаСтроки = СтрДлина(Значение);
	
	Результат = 0;
	Для НомерСимвола = 1 По ДлинаСтроки Цикл
		Результат = Результат * 16 + Найти("0123456789abcdef", Сред(Значение, НомерСимвола, 1)) - 1;
	КонецЦикла;
	
	Возврат Формат(Результат, "ЧГ=0");
	
КонецФункции
Функция GetNewGroupDocRows(SN, UserName, DocOutID)
	
	ОбъектСписка=ФабрикаXDTO.Создать(ФабрикаXDTO.Тип("http://www.data-mobile.ru","DMDocRows"));

	УзелПО=НайтиУзел(SN);
	Если УзелПО=Неопределено тогда
		УзелПО = NewTSD(SN, UserName);
	КонецЕсли;

	
	
	попытка
		СсылкаНаДок=Справочники.ДатаМобайл_ДокументыТСД.ПолучитьСсылку(Новый УникальныйИдентификатор(Сред(DocOutID,5)));
	Исключение	
		ВызватьИсключениеВС("GetNewGroupDocRows. Не найден документ. ");
		Возврат ОбъектСписка;
	КонецПопытки;	
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Тсд", УзелПО);
	Запрос.УстановитьПараметр("ИндетификаторДокумента", СсылкаНаДок);
	
	Запрос.Текст = "ВЫБРАТЬ
	               |	ДатаМобайл_СтрокиГрупповыхДокументов.Штрихкод КАК DMBarcode,
	               |	ДатаМобайл_СтрокиГрупповыхДокументов.СерийныйНомер КАК DMSN,
				   |	ДатаМобайл_СтрокиГрупповыхДокументов.Ячейка КАК DMCell,
				   |	ДатаМобайл_СтрокиГрупповыхДокументов.КодТовара КАК DMArtID,
				   |	ДатаМобайл_СтрокиГрупповыхДокументов.УпаковочныйЛист КАК DMPackID,
				   |	ДатаМобайл_СтрокиГрупповыхДокументов.Количество * ВЫБОР КОГДА ЕстьNull(ДатаМобайл_СтрокиГрупповыхДокументов.ЕдиницаИзмерения.Числитель,1) = 0 ТОГДА 1 ИНАЧЕ ЕстьNull(ДатаМобайл_СтрокиГрупповыхДокументов.ЕдиницаИзмерения.Числитель,1) КОНЕЦ КАК DMQuant,
				   |	ДатаМобайл_СтрокиГрупповыхДокументов.НазваниеТовара КАК DMArtName,
				   |	ДатаМобайл_СтрокиГрупповыхДокументов.ЕгаисПолныйКод КАК DMPDFBarcode,
				   |	ДатаМобайл_СтрокиГрупповыхДокументов.ЕгаисМарка КАК DMDataMatrixBarcode,
				   |	ДатаМобайл_СтрокиГрупповыхДокументов.ЕгаисДатаРозлива КАК DMDateBottling,
				   |	ДатаМобайл_СтрокиГрупповыхДокументов.PDF КАК DMDecodedPDFBarcode,
				   |	ДатаМобайл_СтрокиГрупповыхДокументов.ЕгаисСправкаА КАК DMBlankA,
				   |	ДатаМобайл_СтрокиГрупповыхДокументов.ЕгаисСправкаБ КАК DMBlankB,
				   |	ДатаМобайл_СтрокиГрупповыхДокументов.НоваяЦена КАК DMChangedPrice,
				   |	ДатаМобайл_СтрокиГрупповыхДокументов.Короб КАК DMBoxPackID,   
				   |	ДатаМобайл_СтрокиГрупповыхДокументов.ИмяТаблицы КАК DMTable,
				   |	ДатаМобайл_СтрокиГрупповыхДокументов.Уникальность КАК DMGroupId
				   
				   |ИЗ
				   |	РегистрСведений.ДатаМобайл_СтрокиГрупповыхДокументов КАК ДатаМобайл_СтрокиГрупповыхДокументов
				   |ГДЕ
				   |	ДатаМобайл_СтрокиГрупповыхДокументов.ТСД = &ТСД
	               |	И ДатаМобайл_СтрокиГрупповыхДокументов.ДокументТСД = &ИндетификаторДокумента
				   |	И ДатаМобайл_СтрокиГрупповыхДокументов.ДляОбмена";
				   
				   
	Рез = Запрос.Выполнить().Выбрать();
	Пока Рез.Следующий() Цикл
			ОбъектСтроки=ФабрикаXDTO.Создать(ФабрикаXDTO.Тип("http://www.data-mobile.ru","DMDocRec"));
			ЗаполнитьЗначенияСвойств(ОбъектСтроки, Рез);
			ОбъектСтроки.DMDateBottling = Строка(Формат(Рез.DMDateBottling,"ДФ=ddmmyy"));
			ОбъектСписка.DMDocRow.Добавить(ОбъектСтроки);
	КонецЦикла;
	
	//СтруктураОтбора = Новый Структура("ТСД", УзелПО);
	//
	//ВыборкаЗаписей = РегистрыСведений.ДатаМобайл_СтрокиГрупповыхДокументов.Выбрать(СтруктураОтбора);
	//Пока ВыборкаЗаписей.Следующий() Цикл
	//	Если ВыборкаЗаписей.ДокументТСД = СсылкаНаДок и ВыборкаЗаписей.ДляОбмена Тогда
	//		ВыборкаЗаписей.ПолучитьМенеджерЗаписи().Удалить();
	//	КонецЕсли;
	//КонецЦикла;
		
	Возврат ОбъектСписка;
	
КонецФункции

Функция ApproveGroupDocRows(SN, UserName, DocOutID, DMDocsIDs)
	УзелПО=НайтиУзел(SN);
	Если УзелПО=Неопределено тогда
		УзелПО = NewTSD(SN, UserName);
	КонецЕсли; 	
	
	попытка
		СсылкаНаДок=Справочники.ДатаМобайл_ДокументыТСД.ПолучитьСсылку(Новый УникальныйИдентификатор(Сред(DocOutID,5)));
	Исключение	
		ВызватьИсключениеВС("ApproveGroupDocRows. Не найден документ. ");
		Возврат Ложь;
	КонецПопытки;	
	
	Для Каждого УникальныйИдентификаторСтроки из DMDocsIDs.DMDocID цикл	
		Попытка			
			СтруктураОтбора = Новый Структура("ТСД", УзелПО);	
			ВыборкаЗаписей = РегистрыСведений.ДатаМобайл_СтрокиГрупповыхДокументов.Выбрать(СтруктураОтбора);
			Пока ВыборкаЗаписей.Следующий() Цикл
				Если ВыборкаЗаписей.ДокументТСД = СсылкаНаДок и ВыборкаЗаписей.ДляОбмена и ВыборкаЗаписей.Уникальность = УникальныйИдентификаторСтроки Тогда
					ВыборкаЗаписей.ПолучитьМенеджерЗаписи().Удалить();
				КонецЕсли;
			КонецЦикла;
			
		Исключение
			Возврат Ложь;
		КонецПопытки;
	КонецЦикла;	
	
	Возврат Истина;
	
КонецФункции

Функция GetDocRowsSelect(SN, UserName, DocOutID)
	ОбъектСписка=ФабрикаXDTO.Создать(ФабрикаXDTO.Тип("http://www.data-mobile.ru","DMDocRows"));
	УзелПО=НайтиУзел(SN);
	Если УзелПО=Неопределено тогда
		УзелПО = NewTSD(SN, UserName);
	КонецЕсли;

	попытка
		СсылкаНаДок=Справочники.ДатаМобайл_ДокументыТСД.ПолучитьСсылку(Новый УникальныйИдентификатор(Сред(DocOutID,5)));
	Исключение	
		ВызватьИсключениеВС("GetDocRowsSelect. Не найден документ. ");
		Возврат ОбъектСписка;
	КонецПопытки;	
	Если ссылканадок.ПолучитьОбъект()=неопределено тогда
		ВызватьИсключениеВС("GetDocRowsSelect. Не найден документ. ");
		Возврат ОбъектСписка;
	КонецЕсли;	
	Шаблон=СсылкаНаДок.Шаблон;
	Если не Шаблон.ИспользоватьПодбор тогда
		Возврат ОбъектСписка;
	КонецЕсли;
	
	//start egais
	ШаблонЕГАИС = Шаблон.ЕГАИС;
	
	Если ШаблонЕГАИС Тогда

		СписокМарок = Новый СписокЗначений();                                                                          

		
		Запрос=Новый Запрос(
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ЗапросСЛимитами.Номенклатура,
		|	ЛОЖЬ КАК ЭтоХарактеристика,
		|	СУММА(ЗапросСЛимитами.Количество) КАК Количество,
		|   СУММА(ЕСТЬNULL(ТоварыНаСкладахОстатки.ВНаличииОстаток, 0) - ЕСТЬNULL(РезервыТСД.Количество, 0)) КАК Лимит, 
		|	ЗапросСЛимитами.ИдентификаторСтроки КАК ИдентификаторСтроки,
		|	ЗапросСЛимитами.НомерСтроки КАК НомерСтроки
		|ИЗ
		|	(ВЫБРАТЬ
		|		ТаблицаТоваровВДокументе.АлкогольнаяПродукция КАК Номенклатура,
		|		СУММА(ТаблицаТоваровВДокументе.Количество) КАК Количество,
		|		МИНИМУМ(ТаблицаТоваровВДокументе.НомерСтроки) КАК НомерСтроки,
		|		ТаблицаТоваровВДокументе.Справка2 КАК ИдентификаторСтроки
		|	ИЗ
		|		Документ.ТТНВходящаяЕГАИС.Товары КАК ТаблицаТоваровВДокументе
		|	ГДЕ
		|		ТаблицаТоваровВДокументе.Ссылка = &ИсходныйДокумент
		|		И НЕ ТаблицаТоваровВДокументе.АлкогольнаяПродукция.ВидПродукции В (&СписокМарок)
		|	
		|	СГРУППИРОВАТЬ ПО
		|		ТаблицаТоваровВДокументе.АлкогольнаяПродукция,
		|		ТаблицаТоваровВДокументе.Справка2) КАК ЗапросСЛимитами
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|			СоответствиеНоменклатурыЕГАИС.АлкогольнаяПродукция КАК АлкогольнаяПродукция,
		|			МАКСИМУМ(СоответствиеНоменклатурыЕГАИС.Номенклатура) КАК Номенклатура
		|		ИЗ
		|			РегистрСведений.СоответствиеНоменклатурыЕГАИС КАК СоответствиеНоменклатурыЕГАИС
		|		
		|		СГРУППИРОВАТЬ ПО
		|			СоответствиеНоменклатурыЕГАИС.АлкогольнаяПродукция) КАК Товары
		|		ПО (Товары.АлкогольнаяПродукция = ЗапросСЛимитами.Номенклатура)
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ТоварыНаСкладах.Остатки(
		|				,
		|				&ВсеСклады
		|					ИЛИ Склад В (&Склады)) КАК ТоварыНаСкладахОстатки
		|		ПО ЗапросСЛимитами.Номенклатура = ТоварыНаСкладахОстатки.Номенклатура
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|			ДатаМобайл_ДокументыТСДСобранныеДанные.Номенклатура КАК Номенклатура,
		|			СУММА(ДатаМобайл_ДокументыТСДСобранныеДанные.Количество) КАК Количество
		|		ИЗ
		|			Справочник.ДатаМобайл_ДокументыТСД.СобранныеДанныеПодбор КАК ДатаМобайл_ДокументыТСДСобранныеДанные
		|		ГДЕ
		|			ДатаМобайл_ДокументыТСДСобранныеДанные.Ссылка <> &Ссылка
		|			И ДатаМобайл_ДокументыТСДСобранныеДанные.Ссылка.Шаблон.РезервироватьТовар
		|			И ДатаМобайл_ДокументыТСДСобранныеДанные.Ссылка.ДатаЗавершения = ДАТАВРЕМЯ(1, 1, 1)					
		|		
		|		СГРУППИРОВАТЬ ПО
		|			ДатаМобайл_ДокументыТСДСобранныеДанные.Номенклатура) КАК РезервыТСД
		|		ПО (Товары.Номенклатура = РезервыТСД.Номенклатура)
		|
		|СГРУППИРОВАТЬ ПО
		|	ЗапросСЛимитами.Номенклатура,
		|	ЗапросСЛимитами.НомерСтроки,
		|	ЗапросСЛимитами.ИдентификаторСтроки
		|
		|УПОРЯДОЧИТЬ ПО
		|	НомерСтроки");
		
		Запрос.УстановитьПараметр("СписокМарок", СписокМарок);
		Запрос.УстановитьПараметр("Ссылка",СсылкаНаДок);
		Запрос.УстановитьПараметр("ИсходныйДокумент",СсылкаНаДок.ИсходныйДокумент);
		Запрос.Текст=СтрЗаменить(Запрос.Текст,".ПриходныйОрдерНаТовары.","."+Шаблон.ВидДокумента+".");
		Запрос.Текст=СтрЗаменить(Запрос.Текст,".Товары КАК ","."+Шаблон.ИмяТабличнойЧастиПодбор+" КАК ");
		СписокСкладов=УзелПО.Склады.ВыгрузитьКолонку("Склад");
		Запрос.УстановитьПараметр("Склады",СписокСкладов);
		Запрос.УстановитьПараметр("ВсеСклады",СписокСкладов.Количество()=0);
	
	Если Шаблон.ВидДокумента = "УстановкаЦенНоменклатуры" или Шаблон.ВидДокумента = "ПрименениеЦенНоменклатуры" тогда
		Запрос.Текст=СтрЗаменить(Запрос.Текст,"ТаблицаТоваровВДокументе.Количество",999);
	КонецЕсли;	

	Попытка
		ЕстьТЧМарок = СсылкаНаДок.ИсходныйДокумент.метаданные().ТабличныеЧасти.Найти("АкцизныеМарки") <> Неопределено;
		ЕстьРеквизитИдентификаторСтроки = СсылкаНаДок.ИсходныйДокумент.метаданные().ТабличныеЧасти[Шаблон.ИмяТабличнойЧастиПодбор].Реквизиты.Найти("Справка2") <> Неопределено;
	Исключение
	    ЕстьТЧМарок = Ложь;
		ЕстьРеквизитИдентификаторСтроки = Ложь;
	КонецПопытки;
	
	Если ЕстьРеквизитИдентификаторСтроки тогда
	Иначе
		Запрос.Текст=СтрЗаменить(Запрос.Текст,"ТаблицаТоваровВДокументе.Справка2","0");
	КонецЕсли;

	
		Рез=Запрос.Выполнить().Выгрузить();
	Для Каждого СтрокаДока из Рез цикл
		ОбъектСтрокиДока=ФабрикаXDTO.Создать(ФабрикаXDTO.Тип("http://www.data-mobile.ru","DMDocRec"));
		ОбъектСтрокиДока.DMBarcode="";
			
			СписокМарок = ДатаМобайл_ОбщийМодуль.СформироватьСписокНепроверяемыхМарокЕГАИС();  
			Если СписокМарок.НайтиПоЗначению(СтрокаДока.Номенклатура.ВидПродукции)<>Неопределено  тогда
				лТекущаяНоменклатура = ДатаМобайл_ОбщийМодуль.ПолучитьНоменклатуруПоЕГАИС(СтрокаДока.Номенклатура);
				ОбъектСтрокиДока.DMArtID="8U-"+Строка(лТекущаяНоменклатура.УникальныйИдентификатор())+Строка(Справочники.ХарактеристикиНоменклатуры.ПустаяСсылка().УникальныйИдентификатор()); 
			Иначе	 
				ОбъектСтрокиДока.DMArtID = "8e-"+Строка(СтрокаДока.Номенклатура.УникальныйИдентификатор());
			КонецЕсли;	
			ТекущийИдентификаторСтроки = СтрокаДока.ИдентификаторСтроки;
			
		
		ОбъектСтрокиДока.DMArtNAME = ЧистаяСтрока(СтрокаДока.Номенклатура.Наименование);
		ОбъектСтрокиДока.DMBlankA = "";	
		ОбъектСтрокиДока.DMBlankB = "";	
		ОбъектСтрокиДока.DMSN="";
		ОбъектСтрокиДока.DMQuant=СтрокаДока.Количество;
		
		Если УзелПО.НеОтображатьОстатки тогда
			ОбъектСтрокиДока.DMLimit="0";
		Иначе	
			Итог = Строка(Формат(СтрокаДока.Лимит, "ЧДЦ=2; ЧРД=.; ЧН=0; ЧГ=0"));
			Итог = СтрЗаменить(Итог, ",",".");
			Попытка
				ОбъектСтрокиДока.DMLimit=Итог;
			Исключение
				ОбъектСтрокиДока.DMLimit="0";
			КонецПопытки;
		КонецЕсли;
		//Марки формат 3.0
		Если Шаблон.ВерсияЕГАИС = 1 и Шаблон.ВидДокумента = "ТТНВходящаяЕГАИС" тогда
			КоличествоБезМарок = СтрокаДока.Количество;
					
			ТЗМарок = ДатаМобайл_ОбщийМодуль.ПолучитьМаркиВходящейТТН_ЕГАИС(СсылкаНаДок.ИсходныйДокумент);
			СтруктураПоискаМарок = Новый Структура("АлкогольнаяПродукция,Справка2",СтрокаДока.Номенклатура,ТекущийИдентификаторСтроки);
			СтрокиПоискаМарок = ТЗМарок.НайтиСтроки(СтруктураПоискаМарок);		

				Для Каждого СтрокаМарок из СтрокиПоискаМарок цикл				
					Если КоличествоБезМарок > 0 тогда
					  ОбъектСтрокиДокаМарки = ФабрикаXDTO.Создать(ФабрикаXDTO.Тип("http://www.data-mobile.ru","DMDocRec"));
					  ОбъектСтрокиДокаМарки.DMBarcode = ОбъектСтрокиДока.DMBarcode;
                      ОбъектСтрокиДокаМарки.DMArtID = ОбъектСтрокиДока.DMArtID;
					  ОбъектСтрокиДокаМарки.DMArtNAME = ОбъектСтрокиДока.DMArtNAME;
					  ОбъектСтрокиДокаМарки.DMSN = ОбъектСтрокиДока.DMSN;
					  ОбъектСтрокиДокаМарки.DMLimit = ОбъектСтрокиДока.DMLimit;

					  ОбъектСтрокиДокаМарки.DMQuant = 1;
					  ОбъектСтрокиДокаМарки.DMPDFBarcode = СтрокаМарок.Марка;
					  ОбъектСписка.DMDocRow.Добавить(ОбъектСтрокиДокаМарки);
					  КоличествоБезМарок = КоличествоБезМарок-1;
				  	Иначе
					  Продолжить;
					КонецЕсли;  
				КонецЦикла;
		КонецЕсли;
		
		Если Шаблон.ВерсияЕГАИС = 1 и Шаблон.ВидДокумента = "ТТНВходящаяЕГАИС" тогда
			Если КоличествоБезМарок>0 тогда
				ОбъектСтрокиДока.DMQuant = КоличествоБезМарок;
				ОбъектСписка.DMDocRow.Добавить(ОбъектСтрокиДока);
			КонецЕсли;	
		Иначе
			ОбъектСписка.DMDocRow.Добавить(ОбъектСтрокиДока);
		КонецЕсли;

	КонецЦикла;

			
	Иначе	
	 Если Шаблон.УчитыватьЯчеекВЗаданииПодбор тогда
		Запрос=Новый Запрос("ВЫБРАТЬ РАЗРЕШЕННЫЕ
		                    |	ЗапросСЛимитами.Номенклатура,
		                    |	ЗапросСЛимитами.Характеристика,
							|	ЗапросСЛимитами.Серия,
		                    |	СУММА(ЗапросСЛимитами.Количество) КАК Количество,
		                    |	СУММА(ЕСТЬNULL(ТоварыВЯчейкахОстатки.ВНаличииОстаток, 0) - ЕСТЬNULL(РезервыТСД.Количество, 0)) КАК Лимит,
		                    |	ЗапросСЛимитами.Ячейка КАК Ячейка,
		                    |	МИНИМУМ(ЗапросСЛимитами.НомерСтроки) КАК НомерСтроки
		                    |ИЗ
		                    |	(ВЫБРАТЬ
		                    |		ТаблицаТоваровВДокументе.Номенклатура КАК Номенклатура,
		                    |		ТаблицаТоваровВДокументе.Характеристика КАК Характеристика,
							|		&УсловиеСерия КАК Серия,
		                    |		СУММА(ТаблицаТоваровВДокументе.Количество) КАК Количество,
		                    |		ТаблицаТоваровВДокументе.Ячейка КАК Ячейка,
		                    |		МИНИМУМ(ТаблицаТоваровВДокументе.НомерСтроки) КАК НомерСтроки
		                    |	ИЗ
		                    |		Документ.ОтборРазмещениеТоваров.ТоварыОтбор КАК ТаблицаТоваровВДокументе
		                    |	ГДЕ
		                    |		ТаблицаТоваровВДокументе.Ссылка = &ИсходныйДокумент
		                    |	
		                    |	СГРУППИРОВАТЬ ПО
		                    |		ТаблицаТоваровВДокументе.Номенклатура,
		                    |		ТаблицаТоваровВДокументе.Характеристика,
							|		&УсловиеСерия,
		                    |		ТаблицаТоваровВДокументе.Ячейка) КАК ЗапросСЛимитами
		                    |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ТоварыВЯчейках.Остатки(
		                    |				,
		                    |				&ВсеСклады
		                    |					ИЛИ Ячейка.Владелец В (&Склады)
		                    |					ИЛИ Ячейка.Помещение В (&Склады)) КАК ТоварыВЯчейкахОстатки
		                    |		ПО ЗапросСЛимитами.Номенклатура = ТоварыВЯчейкахОстатки.Номенклатура
		                    |			И ЗапросСЛимитами.Характеристика = ТоварыВЯчейкахОстатки.Характеристика
		                    |			И ЗапросСЛимитами.Ячейка = ТоварыВЯчейкахОстатки.Ячейка
		                    |		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		                    |			ДатаМобайл_ДокументыТСДСобранныеДанные.Номенклатура КАК Номенклатура,
		                    |			ДатаМобайл_ДокументыТСДСобранныеДанные.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
		                    |			ДатаМобайл_ДокументыТСДСобранныеДанные.Ячейка КАК Ячейка,
		                    |			СУММА(ДатаМобайл_ДокументыТСДСобранныеДанные.Количество) КАК Количество
		                    |		ИЗ
		                    |			Справочник.ДатаМобайл_ДокументыТСД.СобранныеДанныеПодбор КАК ДатаМобайл_ДокументыТСДСобранныеДанные
		                    |		ГДЕ
		                    |			ДатаМобайл_ДокументыТСДСобранныеДанные.Ссылка <> &Ссылка
		                    |			И ДатаМобайл_ДокументыТСДСобранныеДанные.Ссылка.Шаблон.РезервироватьТовар
							|			И ДатаМобайл_ДокументыТСДСобранныеДанные.Ссылка.ДатаЗавершения = ДАТАВРЕМЯ(1, 1, 1)
		                    |		
		                    |		СГРУППИРОВАТЬ ПО
		                    |			ДатаМобайл_ДокументыТСДСобранныеДанные.Номенклатура,
		                    |			ДатаМобайл_ДокументыТСДСобранныеДанные.Ячейка,
		                    |			ДатаМобайл_ДокументыТСДСобранныеДанные.ХарактеристикаНоменклатуры) КАК РезервыТСД
		                    |		ПО ЗапросСЛимитами.Номенклатура = РезервыТСД.Номенклатура
		                    |			И ЗапросСЛимитами.Характеристика = РезервыТСД.ХарактеристикаНоменклатуры
		                    |			И ЗапросСЛимитами.Ячейка.Код = РезервыТСД.Ячейка
		                    |
		                    |СГРУППИРОВАТЬ ПО
		                    |	ЗапросСЛимитами.Номенклатура,
		                    |	ЗапросСЛимитами.Характеристика,
							|	ЗапросСЛимитами.Серия,
		                    |	ЗапросСЛимитами.Ячейка
		                    |
		                    |УПОРЯДОЧИТЬ ПО
		                    |	НомерСтроки");
	
		Запрос.УстановитьПараметр("Ссылка",СсылкаНаДок);
		Запрос.УстановитьПараметр("ИсходныйДокумент",СсылкаНаДок.ИсходныйДокумент);
		Запрос.Текст=СтрЗаменить(Запрос.Текст,".ОтборРазмещениеТоваров.","."+Шаблон.ВидДокумента+".");
		Запрос.Текст=СтрЗаменить(Запрос.Текст,".ТоварыОтбор КАК ","."+Шаблон.ИмяТабличнойЧастиПодбор+" КАК ");
		СписокСкладов=УзелПО.Склады.ВыгрузитьКолонку("Склад");
		Запрос.УстановитьПараметр("Склады",СписокСкладов);
		Запрос.УстановитьПараметр("ВсеСклады",СписокСкладов.Количество()=0);

		ЕстьСерии = Ложь;
		Попытка
			Для Каждого МетаРеквизитТЧ из Метаданные.Документы[Шаблон.ВидДокумента].ТабличныеЧасти[Шаблон.ИмяТабличнойЧастиПодбор].Реквизиты цикл
				Если МетаРеквизитТЧ.Имя = "Серия" Тогда
					ЕстьСерии = Истина;
					Прервать;	
				КонецЕсли;
			КонецЦикла;
		Исключение
		КонецПопытки;
		
		Если ЕстьСерии тогда
			Запрос.Текст=СтрЗаменить(Запрос.Текст,"&УсловиеСерия","ТаблицаТоваровВДокументе.Серия");
		Иначе
			Запрос.Текст=СтрЗаменить(Запрос.Текст,"&УсловиеСерия","Значение(Справочник.СерииНоменклатуры.ПустаяСсылка)");
		КонецЕсли;

		Рез=Запрос.Выполнить().Выгрузить();
		Для Каждого СтрокаДока из Рез цикл
			ОбъектСтрокиДока=ФабрикаXDTO.Создать(ФабрикаXDTO.Тип("http://www.data-mobile.ru","DMDocRec"));
			ОбъектСтрокиДока.DMBarcode="";
			ОбъектСтрокиДока.DMArtID="8U-"+СокрЛП(СтрокаДока.Номенклатура.УникальныйИдентификатор())+СокрЛП(СтрокаДока.Характеристика.УникальныйИдентификатор());
			
			ОбъектСтрокиДока.DMCell=?(УзелПО.ВыгружатьВКодЯчейки=0,СтрокаДока.Ячейка.Код, Строка(ШтрихкодированиеПечатныхФорм.ЧисловойКодПоСсылке(СтрокаДока.Ячейка)));
			
		Попытка	
			Если Шаблон.СерияПоДате Тогда //04.08.18 
			    ОбъектСтрокиДока.DMSN = Формат(СтрокаДока.Серия.ГоденДо,"ДФ=dd.MM.yy"); 
		    Иначе
			    ОбъектСтрокиДока.DMSN=СокрЛП(СтрокаДока.Серия.Номер);
			КонецЕсли;
		Исключение
			ОбъектСтрокиДока.DMSN="";
		КонецПопытки;	
		
			ОбъектСтрокиДока.DMQuant=СтрокаДока.Количество;
			Если УзелПО.НеОтображатьОстатки тогда
				ОбъектСтрокиДока.DMLimit=0;
			Иначе	
				ОбъектСтрокиДока.DMLimit=СтрокаДока.Лимит;
			КонецЕсли;
			ОбъектСписка.DMDocRow.Добавить(ОбъектСтрокиДока);
		КонецЦикла;
	Иначе	
		Запрос=Новый Запрос("ВЫБРАТЬ РАЗРЕШЕННЫЕ
		                    |	ЗапросСЛимитами.Номенклатура,
		                    |	ЗапросСЛимитами.Характеристика,
							|	ЗапросСЛимитами.Серия,
							|	ЗапросСЛимитами.Цена,
		                    |	СУММА(ЗапросСЛимитами.Количество) КАК Количество,
		                    |	СУММА(ЕСТЬNULL(СвободныеОстаткиОстатки.ВНаличииОстаток, 0) - ЕСТЬNULL(РезервыТСД.Количество, 0)) КАК Лимит,
		                    |	МИНИМУМ(ЗапросСЛимитами.НомерСтроки) КАК НомерСтроки
		                    |ИЗ
		                    |	(ВЫБРАТЬ
		                    |		ТаблицаТоваровВДокументе.Номенклатура КАК Номенклатура,
		                    |		ТаблицаТоваровВДокументе.Характеристика КАК Характеристика,
							|		&УсловиеСерия КАК Серия,
							|		&УсловиеЦена КАК Цена,
		                    |		СУММА(ТаблицаТоваровВДокументе.Количество) КАК Количество,
		                    |		МИНИМУМ(ТаблицаТоваровВДокументе.НомерСтроки) КАК НомерСтроки
		                    |	ИЗ
		                    |		Документ.ПриходныйОрдерНаТовары.Товары КАК ТаблицаТоваровВДокументе
		                    |	ГДЕ
		                    |		ТаблицаТоваровВДокументе.Ссылка = &ИсходныйДокумент
		                    |	
		                    |	СГРУППИРОВАТЬ ПО
		                    |		ТаблицаТоваровВДокументе.Номенклатура,
		                    |		ТаблицаТоваровВДокументе.Характеристика,
							|		&УсловиеСерия,
							|		&УсловиеЦена) КАК ЗапросСЛимитами
		                    |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ТоварыНаСкладах.Остатки(
		                    |				,
		                    |				&ВсеСклады
		                    |					ИЛИ Склад В (&Склады)
		                    |					ИЛИ Помещение В (&Склады)) КАК СвободныеОстаткиОстатки
		                    |		ПО ЗапросСЛимитами.Номенклатура = СвободныеОстаткиОстатки.Номенклатура
		                    |			И ЗапросСЛимитами.Характеристика = СвободныеОстаткиОстатки.Характеристика
		                    |		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		                    |			ДатаМобайл_ДокументыТСДСобранныеДанные.Номенклатура КАК Номенклатура,
		                    |			ДатаМобайл_ДокументыТСДСобранныеДанные.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
		                    |			СУММА(ДатаМобайл_ДокументыТСДСобранныеДанные.Количество) КАК Количество
		                    |		ИЗ
		                    |			Справочник.ДатаМобайл_ДокументыТСД.СобранныеДанныеПодбор КАК ДатаМобайл_ДокументыТСДСобранныеДанные
		                    |		ГДЕ
		                    |			ДатаМобайл_ДокументыТСДСобранныеДанные.Ссылка <> &Ссылка
		                    |			И ДатаМобайл_ДокументыТСДСобранныеДанные.Ссылка.Шаблон.РезервироватьТовар
							|			И ДатаМобайл_ДокументыТСДСобранныеДанные.Ссылка.ДатаЗавершения = ДАТАВРЕМЯ(1, 1, 1)
		                    |		
		                    |		СГРУППИРОВАТЬ ПО
		                    |			ДатаМобайл_ДокументыТСДСобранныеДанные.Номенклатура,
		                    |			ДатаМобайл_ДокументыТСДСобранныеДанные.ХарактеристикаНоменклатуры) КАК РезервыТСД
		                    |		ПО ЗапросСЛимитами.Номенклатура = РезервыТСД.Номенклатура
		                    |			И ЗапросСЛимитами.Характеристика = РезервыТСД.ХарактеристикаНоменклатуры
		                    |
		                    |СГРУППИРОВАТЬ ПО
		                    |	ЗапросСЛимитами.Номенклатура,
		                    |	ЗапросСЛимитами.Характеристика,
							|	ЗапросСЛимитами.Серия,
							|	ЗапросСЛимитами.Цена
		                    |
		                    |УПОРЯДОЧИТЬ ПО
		                    |	НомерСтроки");
		Запрос.УстановитьПараметр("Ссылка",СсылкаНаДок);
		Запрос.УстановитьПараметр("ИсходныйДокумент",СсылкаНаДок.ИсходныйДокумент);
		Запрос.Текст=СтрЗаменить(Запрос.Текст,".ПриходныйОрдерНаТовары.","."+Шаблон.ВидДокумента+".");
		Запрос.Текст=СтрЗаменить(Запрос.Текст,".Товары КАК ","."+Шаблон.ИмяТабличнойЧастиПодбор+" КАК ");
		Запрос.Текст=СтрЗаменить(Запрос.Текст,".ТТНВходящаяЕГАИС.","."+Шаблон.ВидДокумента+".");
		СписокСкладов=УзелПО.Склады.ВыгрузитьКолонку("Склад");
		Запрос.УстановитьПараметр("Склады",СписокСкладов);
		Запрос.УстановитьПараметр("ВсеСклады",СписокСкладов.Количество()=0);
		
		ЕстьЦены = Ложь;
		Попытка
			Для Каждого МетаРеквизитТЧ из Метаданные.Документы[Шаблон.ВидДокумента].ТабличныеЧасти[Шаблон.ИмяТабличнойЧастиПодбор].Реквизиты цикл
				Если МетаРеквизитТЧ.Имя = "Цена" Тогда
					ЕстьЦены = Истина;
					Прервать;	
				КонецЕсли;
			КонецЦикла;
		Исключение
		КонецПопытки;
		
		Если ЕстьЦены тогда
			Запрос.Текст=СтрЗаменить(Запрос.Текст,"&УсловиеЦена","ТаблицаТоваровВДокументе.Цена");
		Иначе
			Запрос.Текст=СтрЗаменить(Запрос.Текст,"&УсловиеЦена","0");
		КонецЕсли;
		
		ЕстьСерии = Ложь;
		Попытка
			Для Каждого МетаРеквизитТЧ из Метаданные.Документы[Шаблон.ВидДокумента].ТабличныеЧасти[Шаблон.ИмяТабличнойЧастиПодбор].Реквизиты цикл
				Если МетаРеквизитТЧ.Имя = "Серия" Тогда
					ЕстьСерии = Истина;
					Прервать;	
				КонецЕсли;
			КонецЦикла;
		Исключение
		КонецПопытки;
			
		Если ЕстьСерии тогда
			Запрос.Текст=СтрЗаменить(Запрос.Текст,"&УсловиеСерия","ТаблицаТоваровВДокументе.Серия");
		Иначе
			Запрос.Текст=СтрЗаменить(Запрос.Текст,"&УсловиеСерия","Значение(Справочник.СерииНоменклатуры.ПустаяСсылка)");
		КонецЕсли;


		Если УзелПО.ПоСвободнымОстаткам тогда
			Запрос.Текст=СтрЗаменить(Запрос.Текст,"РегистрНакопления.ТоварыНаСкладах.Остатки","РегистрНакопления.СвободныеОстатки.Остатки");
			Запрос.Текст=СтрЗаменить(Запрос.Текст,"СвободныеОстаткиОстатки.КОтгрузкеОстаток","СвободныеОстаткиОстатки.ВРезервеСоСкладаОстаток+СвободныеОстаткиОстатки.ВРезервеПодЗаказОстаток");
			Запрос.Текст=СтрЗаменить(Запрос.Текст,"ИЛИ Помещение В (&Склады)","");
		КонецЕсли;	
		
			Рез=Запрос.Выполнить().Выгрузить();
	Для Каждого СтрокаДока из Рез цикл
		ОбъектСтрокиДока=ФабрикаXDTO.Создать(ФабрикаXDTO.Тип("http://www.data-mobile.ru","DMDocRec"));
		ОбъектСтрокиДока.DMBarcode="";
		ОбъектСтрокиДока.DMArtID="8U-"+СокрЛП(СтрокаДока.Номенклатура.УникальныйИдентификатор())+СокрЛП(СтрокаДока.Характеристика.УникальныйИдентификатор());
		ОбъектСтрокиДока.DMPrice=СтрокаДока.Цена;	
		ОбъектСтрокиДока.DMArtNAME = ЧистаяСтрока(СтрокаДока.Номенклатура.Наименование);
		ОбъектСтрокиДока.DMBlankA = "";	
		ОбъектСтрокиДока.DMBlankB = "";
		
		Попытка
			Если Шаблон.СерияПоДате Тогда //04.08.18 
			    ОбъектСтрокиДока.DMSN = Формат(СтрокаДока.Серия.ГоденДо,"ДФ=dd.MM.yy"); 
		    Иначе
			    ОбъектСтрокиДока.DMSN=СокрЛП(СтрокаДока.Серия.Номер);
			КонецЕсли;
		Исключение
			ОбъектСтрокиДока.DMSN="";
		КонецПопытки;	
			
		ОбъектСтрокиДока.DMQuant=СтрокаДока.Количество;
		
	
		Если УзелПО.НеОтображатьОстатки тогда
			ОбъектСтрокиДока.DMLimit="0";
		Иначе	
			Итог = Строка(Формат(СтрокаДока.Лимит, "ЧДЦ=2; ЧРД=.; ЧН=0; ЧГ=0"));
			Итог = СтрЗаменить(Итог, ",",".");
			Попытка
				ОбъектСтрокиДока.DMLimit=Итог;
			Исключение
				ОбъектСтрокиДока.DMLimit="0";
			КонецПопытки;
		КонецЕсли;
		
		ОбъектСписка.DMDocRow.Добавить(ОбъектСтрокиДока);
	КонецЦикла;

	КонецЕсли;
//end egais
	КонецЕсли;
	Возврат ОбъектСписка;
КонецФункции
Функция GetDocRowsInsert(SN, UserName, DocOutID)
	ОбъектСписка=ФабрикаXDTO.Создать(ФабрикаXDTO.Тип("http://www.data-mobile.ru","DMDocRows"));
	УзелПО=НайтиУзел(SN);
	Если УзелПО=Неопределено тогда
		УзелПО = NewTSD(SN, UserName);
	КонецЕсли;

	попытка
		СсылкаНаДок=Справочники.ДатаМобайл_ДокументыТСД.ПолучитьСсылку(Новый УникальныйИдентификатор(Сред(DocOutID,5)));
	Исключение	
		ВызватьИсключениеВС("GetDocRowsInsert. Не найден документ. ");
		Возврат ОбъектСписка;
	КонецПопытки;	
	Если ссылканадок.ПолучитьОбъект()=неопределено тогда
		ВызватьИсключениеВС("GetDocRowsInsert. Не найден документ. ");
		Возврат ОбъектСписка;
	КонецЕсли;	
	Шаблон=СсылкаНаДок.Шаблон;
	Если не Шаблон.ИспользоватьПриемку тогда
		Возврат ОбъектСписка;
	КонецЕсли;	

	
	Если Шаблон.УчитыватьЯчеекВЗаданииПриемка тогда
		Запрос=Новый Запрос("ВЫБРАТЬ РАЗРЕШЕННЫЕ
		                    |	ЗапросСЛимитами.Номенклатура,
		                    |	ЗапросСЛимитами.Характеристика,
							|	ЗапросСЛимитами.Серия,
		                    |	СУММА(ЗапросСЛимитами.Количество) КАК Количество,
		                    |	СУММА(ЕСТЬNULL(ТоварыВЯчейкахОстатки.ВНаличииОстаток, 0)) КАК Лимит,
		                    |	ЗапросСЛимитами.Ячейка КАК Ячейка,
		                    |	МИНИМУМ(ЗапросСЛимитами.НомерСтроки) КАК НомерСтроки
		                    |ИЗ
		                    |	(ВЫБРАТЬ
		                    |		ТаблицаТоваровВДокументе.Номенклатура КАК Номенклатура,
		                    |		ТаблицаТоваровВДокументе.Характеристика КАК Характеристика,
							|		&УсловиеСерия КАК Серия,
		                    |		СУММА(ТаблицаТоваровВДокументе.Количество) КАК Количество,
		                    |		ТаблицаТоваровВДокументе.Ячейка КАК Ячейка,
		                    |		МИНИМУМ(ТаблицаТоваровВДокументе.НомерСтроки) КАК НомерСтроки
		                    |	ИЗ
		                    |		Документ.ОтборРазмещениеТоваров.ТоварыОтбор КАК ТаблицаТоваровВДокументе
		                    |	ГДЕ
		                    |		ТаблицаТоваровВДокументе.Ссылка = &ИсходныйДокумент
		                    |	
		                    |	СГРУППИРОВАТЬ ПО
		                    |		ТаблицаТоваровВДокументе.Номенклатура,
		                    |		ТаблицаТоваровВДокументе.Характеристика,
							|		&УсловиеСерия,
		                    |		ТаблицаТоваровВДокументе.Ячейка) КАК ЗапросСЛимитами
							|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ТоварыВЯчейках.Остатки(
		                    |				,
		                    |				&ВсеСклады
		                    |					ИЛИ Ячейка.Владелец В (&Склады)
		                    |					ИЛИ Ячейка.Помещение В (&Склады)) КАК ТоварыВЯчейкахОстатки
		                    |		ПО ЗапросСЛимитами.Номенклатура = ТоварыВЯчейкахОстатки.Номенклатура
		                    |			И ЗапросСЛимитами.Характеристика = ТоварыВЯчейкахОстатки.Характеристика
		                    |			И ЗапросСЛимитами.Ячейка = ТоварыВЯчейкахОстатки.Ячейка
		                    |
		                    |СГРУППИРОВАТЬ ПО
		                    |	ЗапросСЛимитами.Номенклатура,
							|	ЗапросСЛимитами.Серия,
		                    |	ЗапросСЛимитами.Характеристика,
		                    |	ЗапросСЛимитами.Ячейка
							|		
		                    |УПОРЯДОЧИТЬ ПО
		                    |	НомерСтроки");
		Запрос.УстановитьПараметр("Ссылка",СсылкаНаДок);
		СписокСкладов=УзелПО.Склады.ВыгрузитьКолонку("Склад");
		Запрос.УстановитьПараметр("Склады",СписокСкладов);
		Запрос.УстановитьПараметр("ВсеСклады",СписокСкладов.Количество()=0);
		Запрос.УстановитьПараметр("ИсходныйДокумент",СсылкаНаДок.ИсходныйДокумент);
		Запрос.Текст=СтрЗаменить(Запрос.Текст,".ОтборРазмещениеТоваров.","."+Шаблон.ВидДокумента+".");
		Запрос.Текст=СтрЗаменить(Запрос.Текст,".ТоварыОтбор КАК ","."+Шаблон.ИмяТабличнойЧастиПриемка+" КАК ");
		
		ЕстьСерии = Ложь;
		Попытка
			Для Каждого МетаРеквизитТЧ из Метаданные.Документы[Шаблон.ВидДокумента].ТабличныеЧасти[Шаблон.ИмяТабличнойЧастиПриемка].Реквизиты цикл
				Если МетаРеквизитТЧ.Имя = "Серия" Тогда
					ЕстьСерии = Истина;
					Прервать;	
				КонецЕсли;
			КонецЦикла;
		Исключение
		КонецПопытки;
		
		Если ЕстьСерии тогда
			Запрос.Текст=СтрЗаменить(Запрос.Текст,"&УсловиеСерия","ТаблицаТоваровВДокументе.Серия");
		Иначе
			Запрос.Текст=СтрЗаменить(Запрос.Текст,"&УсловиеСерия","Значение(Справочник.СерииНоменклатуры.ПустаяСсылка)");
		КонецЕсли;


		Рез=Запрос.Выполнить().Выгрузить();
		Для Каждого СтрокаДока из Рез цикл
			ОбъектСтрокиДока=ФабрикаXDTO.Создать(ФабрикаXDTO.Тип("http://www.data-mobile.ru","DMDocRec"));
			ОбъектСтрокиДока.DMBarcode="";
			ОбъектСтрокиДока.DMArtID="8U-"+СокрЛП(СтрокаДока.Номенклатура.УникальныйИдентификатор())+СокрЛП(СтрокаДока.Характеристика.УникальныйИдентификатор());

			ОбъектСтрокиДока.DMCell=?(УзелПО.ВыгружатьВКодЯчейки=0,СтрокаДока.Ячейка.Код, Строка(ШтрихкодированиеПечатныхФорм.ЧисловойКодПоСсылке(СтрокаДока.Ячейка)));
			
		Попытка
			Если Шаблон.СерияПоДате Тогда //04.08.18 
			    ОбъектСтрокиДока.DMSN = Формат(СтрокаДока.Серия.ГоденДо,"ДФ=dd.MM.yy"); 
		    Иначе
			    ОбъектСтрокиДока.DMSN=СокрЛП(СтрокаДока.Серия.Номер);
			КонецЕсли;
		Исключение
			ОбъектСтрокиДока.DMSN="";
		КонецПопытки;
		
			ОбъектСтрокиДока.DMQuant=СтрокаДока.Количество;

			Если УзелПО.НеОтображатьОстатки тогда
				ОбъектСтрокиДока.DMLimit=0;
			Иначе	
				ОбъектСтрокиДока.DMLimit=СтрокаДока.Лимит;
			КонецЕсли;

			ОбъектСписка.DMDocRow.Добавить(ОбъектСтрокиДока);
		КонецЦикла;
	Иначе	
		Запрос=Новый Запрос("ВЫБРАТЬ РАЗРЕШЕННЫЕ
		                    |	ЗапросСЛимитами.Номенклатура,
		                    |	ЗапросСЛимитами.Характеристика,
							|	ЗапросСЛимитами.Серия,
		                    |	СУММА(ЗапросСЛимитами.Количество) КАК Количество,
		                    |	СУММА(ЕСТЬNULL(ТоварыВЯчейкахОстатки.ВНаличииОстаток, 0)) КАК Лимит,
		                    |	МИНИМУМ(ЗапросСЛимитами.НомерСтроки) КАК НомерСтроки
		                    |ИЗ
		                    |	(ВЫБРАТЬ
		                    |		ТаблицаТоваровВДокументе.Номенклатура КАК Номенклатура,
		                    |		ТаблицаТоваровВДокументе.Характеристика КАК Характеристика,
							|		&УсловиеСерия КАК Серия,
		                    |		СУММА(ТаблицаТоваровВДокументе.Количество) КАК Количество,
		                    |		МИНИМУМ(ТаблицаТоваровВДокументе.НомерСтроки) КАК НомерСтроки
		                    |	ИЗ
		                    |		Документ.ПриходныйОрдерНаТовары.Товары КАК ТаблицаТоваровВДокументе
		                    |	ГДЕ
		                    |		ТаблицаТоваровВДокументе.Ссылка = &ИсходныйДокумент
		                    |	
		                    |	СГРУППИРОВАТЬ ПО
		                    |		ТаблицаТоваровВДокументе.Номенклатура,
		                    |		ТаблицаТоваровВДокументе.Характеристика,
							|		&УсловиеСерия) КАК ЗапросСЛимитами
							|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ТоварыВЯчейках.Остатки(
		                    |				,
		                    |				&ВсеСклады
		                    |					ИЛИ Ячейка.Владелец В (&Склады)
		                    |					ИЛИ Ячейка.Помещение В (&Склады)) КАК ТоварыВЯчейкахОстатки
		                    |		ПО ЗапросСЛимитами.Номенклатура = ТоварыВЯчейкахОстатки.Номенклатура
		                    |			И ЗапросСЛимитами.Характеристика = ТоварыВЯчейкахОстатки.Характеристика
		                    |
		                    |СГРУППИРОВАТЬ ПО
		                    |	ЗапросСЛимитами.Номенклатура,
		                    |	ЗапросСЛимитами.Характеристика,
							|	ЗапросСЛимитами.Серия
		                    |
		                    |УПОРЯДОЧИТЬ ПО
		                    |	НомерСтроки");
		Запрос.УстановитьПараметр("Ссылка",СсылкаНаДок);
		Запрос.УстановитьПараметр("ИсходныйДокумент",СсылкаНаДок.ИсходныйДокумент);
		СписокСкладов=УзелПО.Склады.ВыгрузитьКолонку("Склад");
		Запрос.УстановитьПараметр("Склады",СписокСкладов);
		Запрос.УстановитьПараметр("ВсеСклады",СписокСкладов.Количество()=0);
		Запрос.Текст=СтрЗаменить(Запрос.Текст,".ПриходныйОрдерНаТовары.","."+Шаблон.ВидДокумента+".");
		Запрос.Текст=СтрЗаменить(Запрос.Текст,".Товары КАК ","."+Шаблон.ИмяТабличнойЧастиПриемка+" КАК ");
		
		ЕстьСерии = Ложь;
		Попытка
			Для Каждого МетаРеквизитТЧ из Метаданные.Документы[Шаблон.ВидДокумента].ТабличныеЧасти[Шаблон.ИмяТабличнойЧастиПриемка].Реквизиты цикл
				Если МетаРеквизитТЧ.Имя = "Серия" Тогда
					ЕстьСерии = Истина;
					Прервать;	
				КонецЕсли;
			КонецЦикла;
		Исключение
		КонецПопытки;
		
		Если ЕстьСерии тогда
			Запрос.Текст=СтрЗаменить(Запрос.Текст,"&УсловиеСерия","ТаблицаТоваровВДокументе.Серия");
		Иначе
			Запрос.Текст=СтрЗаменить(Запрос.Текст,"&УсловиеСерия","Значение(Справочник.СерииНоменклатуры.ПустаяСсылка)");
		КонецЕсли;

		
		Рез=Запрос.Выполнить().Выгрузить();
		Для Каждого СтрокаДока из Рез цикл
			ОбъектСтрокиДока=ФабрикаXDTO.Создать(ФабрикаXDTO.Тип("http://www.data-mobile.ru","DMDocRec"));
			ОбъектСтрокиДока.DMBarcode="";
			ОбъектСтрокиДока.DMArtID="8U-"+СокрЛП(СтрокаДока.Номенклатура.УникальныйИдентификатор())+СокрЛП(СтрокаДока.Характеристика.УникальныйИдентификатор());
			
		Попытка
			Если Шаблон.СерияПоДате Тогда //04.08.18 
			    ОбъектСтрокиДока.DMSN = Формат(СтрокаДока.Серия.ГоденДо,"ДФ=dd.MM.yy"); 
		    Иначе
			    ОбъектСтрокиДока.DMSN=СокрЛП(СтрокаДока.Серия.Номер);
			КонецЕсли;
		Исключение
			ОбъектСтрокиДока.DMSN="";
		КонецПопытки;


			ОбъектСтрокиДока.DMQuant=СтрокаДока.Количество;

			Если УзелПО.НеОтображатьОстатки тогда
				ОбъектСтрокиДока.DMLimit=0;
			Иначе	
				ОбъектСтрокиДока.DMLimit=СтрокаДока.Лимит;
			КонецЕсли;
			ОбъектСписка.DMDocRow.Добавить(ОбъектСтрокиДока);
		КонецЦикла;
	КонецЕсли;
	Возврат ОбъектСписка;
КонецФункции
//////////////////////////////////////////////////////////////////////////////
Функция OnArtScanSelect(SN,UserName,ШК, DocOutID,Ячейка)
	ОбъектСписка=ФабрикаXDTO.Создать(ФабрикаXDTO.Тип("http://www.data-mobile.ru","DMArtQueryInfo"));
	УзелПО=НайтиУзел(SN);
	Если УзелПО=Неопределено тогда
		УзелПО = NewTSD(SN, UserName);
	КонецЕсли;
	
	попытка
		СсылкаНаДок=Справочники.ДатаМобайл_ДокументыТСД.ПолучитьСсылку(Новый УникальныйИдентификатор(Сред(DocOutID,5)));
	Исключение	
		ВызватьИсключениеВС("OnArtScan. Не нашли документ. ");
		Возврат ОбъектСписка;
	КонецПопытки;	
	Если ссылканадок.ПолучитьОбъект()=неопределено тогда
		ВызватьИсключениеВС("OnArtScan. Не нашли документ. ");
		Возврат ОбъектСписка;
	КонецЕсли;	
	Если Не СсылкаНаДок.ТСД.Пустая() тогда
		Если СсылкаНаДок.ТСД<>УзелПО тогда
			ВызватьИсключениеВС("OnArtScan. Чужой документ. ");
			Возврат ОбъектСписка;
		КонецЕсли;	
	КонецЕсли;	
	Если СсылкаНаДок.ДатаЗавершенияСбора<>Дата(1,1,1) тогда
		ВызватьИсключениеВС("OnArtScan. Закрытый документ. ");
		Возврат ОбъектСписка;
	КонецЕсли;	
	Шаблон=СсылкаНаДок.Шаблон;
	Если не Шаблон.ИспользоватьПодбор тогда
		ВызватьИсключениеВС("OnArtScan. Шаблон запрещает использование подбора. ");
		Возврат ОбъектСписка;
	КонецЕсли;			

	ТипЦен=УзелПО.ТипЦен;
	ВключатьАртикул=УзелПО.ДобавлятьАртикулВНаименование;
	
	Если Шаблон.ЕГАИС И Шаблон.ВидДокумента <> "ВозвратТоваровОтКлиента" Тогда
		Запрос=Новый Запрос(
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ШтрихкодыНоменклатуры.Номенклатура КАК Номенклатура,
		|	ШтрихкодыНоменклатуры.Характеристика,
		|	ШтрихкодыНоменклатуры.Упаковка,
		|	ШтрихкодыНоменклатуры.Штрихкод,
		|	ШтрихкодыНоменклатуры.Упаковка.ЕдиницаИзмерения.Наименование КАК Наименование,
		|	ВЫБОР
		|		КОГДА ШтрихкодыНоменклатуры.Упаковка.Числитель = 0
		|			ТОГДА 1
		|		ИНАЧЕ ШтрихкодыНоменклатуры.Упаковка.Числитель
		|	КОНЕЦ / ВЫБОР
		|		КОГДА ШтрихкодыНоменклатуры.Упаковка.Знаменатель = 0
		|			ТОГДА 1
		|		ИНАЧЕ ШтрихкодыНоменклатуры.Упаковка.Знаменатель
		|	КОНЕЦ КАК Коэффициент
		|ПОМЕСТИТЬ ДоступныеТовары
		|ИЗ
		|	РегистрСведений.ШтрихкодыНоменклатуры КАК ШтрихкодыНоменклатуры
		|ГДЕ
		|	ШтрихкодыНоменклатуры.Штрихкод = &Штрихкод
		|
		|ОБЪЕДИНИТЬ
		|
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ДатаМобайл_НовыеШтрихкоды.Номенклатура,
		|	ДатаМобайл_НовыеШтрихкоды.Характеристика,
		|	ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка),
		|	ДатаМобайл_НовыеШтрихкоды.ШтрихКод,
		|	ДатаМобайл_НовыеШтрихкоды.Наименование,
		|	ДатаМобайл_НовыеШтрихкоды.Коэффициент
		|ИЗ
		|	РегистрСведений.ДатаМобайл_НовыеШтрихкоды КАК ДатаМобайл_НовыеШтрихкоды
		|ГДЕ
		|	ДатаМобайл_НовыеШтрихкоды.ШтрихКод = &Штрихкод
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ДоступныеТовары.Номенклатура,
		|	ДоступныеТовары.Характеристика,
		|	ДоступныеТовары.Упаковка,
		|	СУММА(ВЫБОР
		|			КОГДА ДатаМобайл_ДокументыТСДСобранныеДанные.Ссылка.Шаблон.РезервироватьТовар
		|					И ДатаМобайл_ДокументыТСДСобранныеДанные.Ссылка <> &ИсходноеЗадание
		|				ТОГДА ЕСТЬNULL(ДатаМобайл_ДокументыТСДСобранныеДанные.Количество, 0)
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК ВРезервеТСД,
		|	СУММА(ВЫБОР
		|			КОГДА ДатаМобайл_ДокументыТСДСобранныеДанные.Ссылка = &ИсходноеЗадание
		|				ТОГДА ДатаМобайл_ДокументыТСДСобранныеДанные.Количество
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК СобраноТСД
		|ПОМЕСТИТЬ ТоварыСРезервамиТСД
		|ИЗ
		|	ДоступныеТовары КАК ДоступныеТовары
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ДатаМобайл_ДокументыТСД.СобранныеДанныеПодбор КАК ДатаМобайл_ДокументыТСДСобранныеДанные
		|		ПО ДоступныеТовары.Характеристика = ДатаМобайл_ДокументыТСДСобранныеДанные.ХарактеристикаНоменклатуры
		|			И ДоступныеТовары.Упаковка = ДатаМобайл_ДокументыТСДСобранныеДанные.ЕдиницаИзмерения
		|			И ДоступныеТовары.Номенклатура = ДатаМобайл_ДокументыТСДСобранныеДанные.Номенклатура
		|
		|СГРУППИРОВАТЬ ПО
		|	ДоступныеТовары.Упаковка,
		|	ДоступныеТовары.Характеристика,
		|	ДоступныеТовары.Номенклатура
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
  		|	СУММА(ЕСТЬNULL(СвободныеОстаткиОстатки.ВНаличииОстаток, 0)) КАК ВНаличии,
		|	СУММА(ЕСТЬNULL(СвободныеОстаткиОстатки.КОтгрузкеОстаток, 0)) КАК ВРезерве,
		|	ДоступныеТовары.Номенклатура,
		|	ДоступныеТовары.Характеристика,
		|	ДоступныеТовары.Упаковка
		|ПОМЕСТИТЬ ТоварыСОстатками1С
		|ИЗ
		|	ДоступныеТовары КАК ДоступныеТовары
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ТоварыНаСкладах.Остатки(
		|				,
		|				&ВсеСклады
		|					ИЛИ Склад В (&Склады)) КАК СвободныеОстаткиОстатки
		|		ПО ДоступныеТовары.Номенклатура = СвободныеОстаткиОстатки.Номенклатура
		|			И ДоступныеТовары.Характеристика = СвободныеОстаткиОстатки.Характеристика
		|
		|СГРУППИРОВАТЬ ПО
		|	ДоступныеТовары.Характеристика,
		|	ДоступныеТовары.Номенклатура,
		|	ДоступныеТовары.Упаковка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВЫБОР
		|		КОГДА ТоварыДокумента.НоменклатураСоответствие ЕСТЬ NULL
		|			ТОГДА ДоступныеТовары.Номенклатура
		|		ИНАЧЕ ТоварыДокумента.НоменклатураСоответствие
		|	КОНЕЦ КАК Номенклатура,
		|	ТоварыДокумента.Номенклатура КАК Номенклатура_ЕГАИС,
		|	ДоступныеТовары.Характеристика,
		|	ДоступныеТовары.Упаковка,
		|	СУММА(ЕСТЬNULL(ТоварыДокумента.Количество, 0)) КАК ВЗадании
		|ПОМЕСТИТЬ ТоварыСЗаданием
		|ИЗ
		|	ДоступныеТовары КАК ДоступныеТовары
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|			Товары.Номенклатура КАК НоменклатураСоответствие,
		|			Документ1С.АлкогольнаяПродукция КАК Номенклатура,
		|			Документ1С.Количество КАК Количество
		|		ИЗ
		|			Документ.ПоступлениеТоваров.Товары КАК Документ1С
		|				ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|					СоответствиеНоменклатурыЕГАИС.АлкогольнаяПродукция КАК АлкогольнаяПродукция,
		|					МАКСИМУМ(СоответствиеНоменклатурыЕГАИС.Номенклатура) КАК Номенклатура
		|				ИЗ
		|					РегистрСведений.СоответствиеНоменклатурыЕГАИС КАК СоответствиеНоменклатурыЕГАИС
		|				
		|				СГРУППИРОВАТЬ ПО
		|					СоответствиеНоменклатурыЕГАИС.АлкогольнаяПродукция) КАК Товары
		|				ПО (Товары.АлкогольнаяПродукция = Документ1С.АлкогольнаяПродукция)
		|		ГДЕ
		|			Документ1С.Ссылка = &ИсходныйДокумент) КАК ТоварыДокумента
		|		ПО (ТоварыДокумента.НоменклатураСоответствие = ДоступныеТовары.Номенклатура)
		|
		|СГРУППИРОВАТЬ ПО
		|	ТоварыДокумента.Номенклатура,
		|	ДоступныеТовары.Номенклатура,
		|	ТоварыДокумента.НоменклатураСоответствие,
		|	ДоступныеТовары.Характеристика,
		|	ДоступныеТовары.Упаковка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ДоступныеТовары.Номенклатура,
		|	ДоступныеТовары.Характеристика,
		|	ДоступныеТовары.Упаковка,
		|	МАКСИМУМ(ВЫРАЗИТЬ(ЕСТЬNULL(ЦеныНоменклатурыСрезПоследних.Цена, 0) / ВЫБОР
		|				КОГДА ЕСТЬNULL(ДоступныеТовары.Упаковка.Числитель, 0) = 0
		|					ТОГДА 1
		|				ИНАЧЕ ДоступныеТовары.Упаковка.Числитель
		|			КОНЕЦ КАК ЧИСЛО(19, 2))) КАК Цена
		|ПОМЕСТИТЬ ТоварыСЦенами
		|ИЗ
		|	ДоступныеТовары КАК ДоступныеТовары
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныНоменклатуры.СрезПоследних(, ВидЦены = &ТипЦен) КАК ЦеныНоменклатурыСрезПоследних
		|		ПО ДоступныеТовары.Номенклатура = ЦеныНоменклатурыСрезПоследних.Номенклатура
		|			И ДоступныеТовары.Характеристика = ЦеныНоменклатурыСрезПоследних.Характеристика
		|			И (ДоступныеТовары.Номенклатура.ИспользоватьУпаковки
		|				ИЛИ ДоступныеТовары.Упаковка = ЦеныНоменклатурыСрезПоследних.Упаковка)
		|
		|СГРУППИРОВАТЬ ПО
		|	ДоступныеТовары.Номенклатура,
		|	ДоступныеТовары.Характеристика,
		|	ДоступныеТовары.Упаковка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ДоступныеТовары.Номенклатура,
		|	ДоступныеТовары.Характеристика,
		|	ДоступныеТовары.Упаковка,
		|	ТоварыСЗаданием.ВЗадании,
		|	ТоварыСОстатками1С.ВНаличии,
		|	ТоварыСОстатками1С.ВРезерве,
		|	ТоварыСРезервамиТСД.ВРезервеТСД,
		|	ЕСТЬNULL(ТоварыСЦенами.Цена, 0) КАК Цена,
		|	ЕСТЬNULL(ДоступныеТовары.Наименование, ДоступныеТовары.Номенклатура.ЕдиницаИзмерения.Наименование) КАК НаименованиеУпаковки,
		|	ЕСТЬNULL(ДоступныеТовары.Коэффициент, 1) КАК Коэффициент,
		|	ВЫБОР
		|		КОГДА &ВключатьАртикул
		|				И ТИПЗНАЧЕНИЯ(ДоступныеТовары.Номенклатура) = ТИП(Справочник.Номенклатура)
		|			ТОГДА ДоступныеТовары.Номенклатура.Артикул + ""-""
		|		ИНАЧЕ """"
		|	КОНЕЦ + ДоступныеТовары.Номенклатура.Наименование + "" "" + ЕСТЬNULL(ДоступныеТовары.Характеристика.Наименование, """") КАК НаименованиеТовара,
		|	ТоварыСРезервамиТСД.СобраноТСД,
		|	ВЫБОР
		|		КОГДА ТИПЗНАЧЕНИЯ(ДоступныеТовары.Номенклатура) = ТИП(справочник.номенклатура)
		|			ТОГДА ЛОЖЬ
		|		ИНАЧЕ ИСТИНА
		|	КОНЕЦ КАК ЭтоНовыйТовар
		|ИЗ
		|	ДоступныеТовары КАК ДоступныеТовары
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТоварыСРезервамиТСД КАК ТоварыСРезервамиТСД
		|		ПО ДоступныеТовары.Характеристика = ТоварыСРезервамиТСД.Характеристика
		|			И ДоступныеТовары.Номенклатура = ТоварыСРезервамиТСД.Номенклатура
		|			И ДоступныеТовары.Упаковка = ТоварыСРезервамиТСД.Упаковка
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТоварыСОстатками1С КАК ТоварыСОстатками1С
		|		ПО ДоступныеТовары.Номенклатура = ТоварыСОстатками1С.Номенклатура
		|			И ДоступныеТовары.Характеристика = ТоварыСОстатками1С.Характеристика
		|			И ДоступныеТовары.Упаковка = ТоварыСОстатками1С.Упаковка
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТоварыСЗаданием КАК ТоварыСЗаданием
		|		ПО ДоступныеТовары.Номенклатура = ТоварыСЗаданием.Номенклатура
		|			И ДоступныеТовары.Характеристика = ТоварыСЗаданием.Характеристика
		|			И ДоступныеТовары.Упаковка = ТоварыСЗаданием.Упаковка
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТоварыСЦенами КАК ТоварыСЦенами
		|		ПО ДоступныеТовары.Номенклатура = ТоварыСЦенами.Номенклатура
		|			И ДоступныеТовары.Характеристика = ТоварыСЦенами.Характеристика
		|			И ДоступныеТовары.Упаковка = ТоварыСЦенами.Упаковка");
		
		
	Иначе
		
		Если не Шаблон.УчитыватьЯчеекВЗаданииПодбор тогда
		Запрос=Новый Запрос("ВЫБРАТЬ РАЗЛИЧНЫЕ
		                    |	ШтрихкодыНоменклатуры.Номенклатура,
		                    |	ШтрихкодыНоменклатуры.Характеристика,
		                    |	ШтрихкодыНоменклатуры.Упаковка,
		                    |	ШтрихкодыНоменклатуры.Штрихкод,
		                    |	ШтрихкодыНоменклатуры.Упаковка.ЕдиницаИзмерения.Наименование КАК Наименование,
		                    |	ВЫБОР
		                    |		КОГДА ШтрихкодыНоменклатуры.Упаковка.Числитель = 0
		                    |			ТОГДА 1
		                    |		ИНАЧЕ ШтрихкодыНоменклатуры.Упаковка.Числитель
		                    |	КОНЕЦ / ВЫБОР
		                    |		КОГДА ШтрихкодыНоменклатуры.Упаковка.Знаменатель = 0
		                    |			ТОГДА 1
		                    |		ИНАЧЕ ШтрихкодыНоменклатуры.Упаковка.Знаменатель
		                    |	КОНЕЦ КАК Коэффициент
		                    |ПОМЕСТИТЬ ДоступныеТовары
		                    |ИЗ
		                    |	РегистрСведений.ШтрихкодыНоменклатуры КАК ШтрихкодыНоменклатуры
		                    |ГДЕ
		                    |	ШтрихкодыНоменклатуры.Штрихкод = &Штрихкод
		                    |
		                    |ОБЪЕДИНИТЬ
		                    |
		                    |ВЫБРАТЬ РАЗЛИЧНЫЕ
		                    |	ДатаМобайл_НовыеШтрихкоды.Номенклатура,
		                    |	ДатаМобайл_НовыеШтрихкоды.Характеристика,
		                    |	ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка),
		                    |	ДатаМобайл_НовыеШтрихкоды.ШтрихКод,
		                    |	ДатаМобайл_НовыеШтрихкоды.Наименование,
		                    |	ДатаМобайл_НовыеШтрихкоды.Коэффициент
		                    |ИЗ
		                    |	РегистрСведений.ДатаМобайл_НовыеШтрихкоды КАК ДатаМобайл_НовыеШтрихкоды
		                    |ГДЕ
		                    |	ДатаМобайл_НовыеШтрихкоды.ШтрихКод = &Штрихкод
		                    |;
		                    |
		                    |////////////////////////////////////////////////////////////////////////////////
		                    |ВЫБРАТЬ
		                    |	ДоступныеТовары.Номенклатура,
		                    |	ДоступныеТовары.Характеристика,
		                    |	ДоступныеТовары.Упаковка,
		                    |	СУММА(ВЫБОР
		                    |			КОГДА ДатаМобайл_ДокументыТСДСобранныеДанные.Ссылка.Шаблон.РезервироватьТовар
		                    |					И ДатаМобайл_ДокументыТСДСобранныеДанные.Ссылка <> &ИсходноеЗадание
		                    |				ТОГДА ЕСТЬNULL(ДатаМобайл_ДокументыТСДСобранныеДанные.Количество, 0)
		                    |			ИНАЧЕ 0
		                    |		КОНЕЦ) КАК ВРезервеТСД,
		                    |	СУММА(ВЫБОР
		                    |			КОГДА ДатаМобайл_ДокументыТСДСобранныеДанные.Ссылка = &ИсходноеЗадание
		                    |				ТОГДА ДатаМобайл_ДокументыТСДСобранныеДанные.Количество
		                    |			ИНАЧЕ 0
		                    |		КОНЕЦ) КАК СобраноТСД
		                    |ПОМЕСТИТЬ ТоварыСРезервамиТСД
		                    |ИЗ
		                    |	ДоступныеТовары КАК ДоступныеТовары
		                    |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ДатаМобайл_ДокументыТСД.СобранныеДанныеПодбор КАК ДатаМобайл_ДокументыТСДСобранныеДанные
		                    |		ПО ДоступныеТовары.Характеристика = ДатаМобайл_ДокументыТСДСобранныеДанные.ХарактеристикаНоменклатуры
		                    |			И ДоступныеТовары.Упаковка = ДатаМобайл_ДокументыТСДСобранныеДанные.ЕдиницаИзмерения
		                    |			И ДоступныеТовары.Номенклатура = ДатаМобайл_ДокументыТСДСобранныеДанные.Номенклатура
		                    |
		                    |СГРУППИРОВАТЬ ПО
		                    |	ДоступныеТовары.Упаковка,
		                    |	ДоступныеТовары.Характеристика,
		                    |	ДоступныеТовары.Номенклатура
		                    |;
		                    |
		                    |////////////////////////////////////////////////////////////////////////////////
		                    |ВЫБРАТЬ
		                    |	СУММА(ЕСТЬNULL(СвободныеОстаткиОстатки.ВНаличииОстаток, 0)) КАК ВНаличии,
		                    |	СУММА(ЕСТЬNULL(СвободныеОстаткиОстатки.КОтгрузкеОстаток, 0)) КАК ВРезерве,
		                    |	ДоступныеТовары.Номенклатура,
		                    |	ДоступныеТовары.Характеристика,
		                    |	ДоступныеТовары.Упаковка
		                    |ПОМЕСТИТЬ ТоварыСОстатками1С
		                    |ИЗ
		                    |	ДоступныеТовары КАК ДоступныеТовары
		                    |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ТоварыНаСкладах.Остатки(
		                    |				,
		                    |				&ВсеСклады
		                    |					ИЛИ Склад В (&Склады)
		                    |					ИЛИ Помещение В (&Склады)) КАК СвободныеОстаткиОстатки
		                    |		ПО ДоступныеТовары.Номенклатура = СвободныеОстаткиОстатки.Номенклатура
		                    |			И ДоступныеТовары.Характеристика = СвободныеОстаткиОстатки.Характеристика
		                    |
		                    |СГРУППИРОВАТЬ ПО
		                    |	ДоступныеТовары.Характеристика,
		                    |	ДоступныеТовары.Номенклатура,
		                    |	ДоступныеТовары.Упаковка
		                    |;
		                    |
		                    |////////////////////////////////////////////////////////////////////////////////
		                    |ВЫБРАТЬ
		                    |	ДоступныеТовары.Номенклатура,
		                    |	ДоступныеТовары.Характеристика,
		                    |	ДоступныеТовары.Упаковка,
		                    |	СУММА(ЕСТЬNULL(Документ1С.Количество, 0)) КАК ВЗадании
		                    |ПОМЕСТИТЬ ТоварыСЗаданием
		                    |ИЗ
		                    |	ДоступныеТовары КАК ДоступныеТовары
		                    |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПриобретениеТоваровУслуг.Товары КАК Документ1С
		                    |		ПО ДоступныеТовары.Номенклатура = Документ1С.Номенклатура
		                    |			И ДоступныеТовары.Характеристика = Документ1С.Характеристика
		                    |			И (ДоступныеТовары.Упаковка = Документ1С.Упаковка
		                    |				ИЛИ &ВсеУпаковки)
		                    |			И (Документ1С.Ссылка = &ИсходныйДокумент)
		                    |
		                    |СГРУППИРОВАТЬ ПО
		                    |	ДоступныеТовары.Номенклатура,
		                    |	ДоступныеТовары.Характеристика,
		                    |	ДоступныеТовары.Упаковка
		                    |;
		                    |
		                    |////////////////////////////////////////////////////////////////////////////////
		                    |ВЫБРАТЬ
		                    |	ДоступныеТовары.Номенклатура,
		                    |	ДоступныеТовары.Характеристика,
		                    |	ДоступныеТовары.Упаковка,
		                    |	МАКСИМУМ(ВЫРАЗИТЬ(ЕСТЬNULL(ЦеныНоменклатурыСрезПоследних.Цена, 0) / ВЫБОР
		                    |				КОГДА ЕСТЬNULL(Выбор когда ДоступныеТовары.Упаковка.Числитель = 0 Тогда 1 ИНАЧЕ ДоступныеТовары.Упаковка.Числитель КОНЕЦ  / Выбор Когда ДоступныеТовары.Упаковка.Знаменатель = 0 Тогда 1 ИНАЧЕ ДоступныеТовары.Упаковка.Знаменатель Конец, 0) = 0
		                    |					ТОГДА 1
		                    |				ИНАЧЕ Выбор когда ДоступныеТовары.Упаковка.Числитель = 0 Тогда 1 ИНАЧЕ ДоступныеТовары.Упаковка.Числитель КОНЕЦ / Выбор Когда ДоступныеТовары.Упаковка.Знаменатель = 0 Тогда 1 ИНАЧЕ ДоступныеТовары.Упаковка.Знаменатель Конец
		                    |			КОНЕЦ КАК ЧИСЛО(19, 2))) КАК Цена
		                    |ПОМЕСТИТЬ ТоварыСЦенами
		                    |ИЗ
		                    |	ДоступныеТовары КАК ДоступныеТовары
		                    |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныНоменклатуры.СрезПоследних(, ВидЦены = &ТипЦен) КАК ЦеныНоменклатурыСрезПоследних
		                    |		ПО ДоступныеТовары.Номенклатура = ЦеныНоменклатурыСрезПоследних.Номенклатура
		                    |			И ДоступныеТовары.Характеристика = ЦеныНоменклатурыСрезПоследних.Характеристика
		                    |			И (ДоступныеТовары.Номенклатура.ИспользоватьУпаковки
		                    |				ИЛИ ДоступныеТовары.Упаковка = ЦеныНоменклатурыСрезПоследних.Упаковка)
		                    |
		                    |СГРУППИРОВАТЬ ПО
		                    |	ДоступныеТовары.Номенклатура,
		                    |	ДоступныеТовары.Характеристика,
		                    |	ДоступныеТовары.Упаковка
		                    |;
		                    |
		                    |////////////////////////////////////////////////////////////////////////////////
		                    |ВЫБРАТЬ
		                    |	ДоступныеТовары.Номенклатура,
		                    |	ДоступныеТовары.Характеристика,
		                    |	ДоступныеТовары.Упаковка,
		                    |	ТоварыСЗаданием.ВЗадании,
		                    |	ТоварыСОстатками1С.ВНаличии,
		                    |	ТоварыСОстатками1С.ВРезерве,
		                    |	ТоварыСРезервамиТСД.ВРезервеТСД,
		                    |	ЕСТЬNULL(ТоварыСЦенами.Цена, 0) КАК Цена,
		                    |	ЕСТЬNULL(ДоступныеТовары.Наименование, ДоступныеТовары.Номенклатура.ЕдиницаИзмерения.Наименование) КАК НаименованиеУпаковки,
		                    |	ЕСТЬNULL(ДоступныеТовары.Коэффициент, 1) КАК Коэффициент,
		                    |	ВЫБОР
		                    |		КОГДА &ВключатьАртикул
		                    |				И ТИПЗНАЧЕНИЯ(ДоступныеТовары.Номенклатура) = ТИП(Справочник.Номенклатура)
		                    |			ТОГДА ДоступныеТовары.Номенклатура.Артикул + ""-""
		                    |		ИНАЧЕ """"
		                    |	КОНЕЦ + ДоступныеТовары.Номенклатура.Наименование + "" "" + ЕСТЬNULL(ДоступныеТовары.Характеристика.Наименование, """") КАК НаименованиеТовара,
		                    |	ТоварыСРезервамиТСД.СобраноТСД,
		                    |	ВЫБОР
		                    |		КОГДА ТИПЗНАЧЕНИЯ(ДоступныеТовары.Номенклатура) = ТИП(справочник.номенклатура)
		                    |			ТОГДА ЛОЖЬ
		                    |		ИНАЧЕ ИСТИНА
		                    |	КОНЕЦ КАК ЭтоНовыйТовар
		                    |ИЗ
		                    |	ДоступныеТовары КАК ДоступныеТовары
		                    |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТоварыСРезервамиТСД КАК ТоварыСРезервамиТСД
		                    |		ПО ДоступныеТовары.Характеристика = ТоварыСРезервамиТСД.Характеристика
		                    |			И ДоступныеТовары.Номенклатура = ТоварыСРезервамиТСД.Номенклатура
		                    |			И ДоступныеТовары.Упаковка = ТоварыСРезервамиТСД.Упаковка
		                    |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТоварыСОстатками1С КАК ТоварыСОстатками1С
		                    |		ПО ДоступныеТовары.Номенклатура = ТоварыСОстатками1С.Номенклатура
		                    |			И ДоступныеТовары.Характеристика = ТоварыСОстатками1С.Характеристика
		                    |			И ДоступныеТовары.Упаковка = ТоварыСОстатками1С.Упаковка
		                    |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТоварыСЗаданием КАК ТоварыСЗаданием
		                    |		ПО ДоступныеТовары.Номенклатура = ТоварыСЗаданием.Номенклатура
		                    |			И ДоступныеТовары.Характеристика = ТоварыСЗаданием.Характеристика
		                    |			И ДоступныеТовары.Упаковка = ТоварыСЗаданием.Упаковка
		                    |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТоварыСЦенами КАК ТоварыСЦенами
		                    |		ПО ДоступныеТовары.Номенклатура = ТоварыСЦенами.Номенклатура
		                    |			И ДоступныеТовары.Характеристика = ТоварыСЦенами.Характеристика
		                    |			И ДоступныеТовары.Упаковка = ТоварыСЦенами.Упаковка");
		
		Запрос.Текст=СтрЗаменить(Запрос.Текст,".ПриобретениеТоваровУслуг.","."+Шаблон.ВидДокумента+".");
		Запрос.Текст=СтрЗаменить(Запрос.Текст,".Товары КАК","."+Шаблон.ИмяТабличнойЧастиПодбор+" КАК");
		
		//Если ЕстьЦены тогда
		//	Запрос.Текст=СтрЗаменить(Запрос.Текст,"&УсловиеЦена","КоличествоУпаковок");
		//Иначе
		//	Запрос.Текст=СтрЗаменить(Запрос.Текст,"&УсловиеЦена","0");
		//КонецЕсли;
				
		Если УзелПО.ПоСвободнымОстаткам тогда
			Запрос.Текст=СтрЗаменить(Запрос.Текст,"РегистрНакопления.ТоварыНаСкладах.Остатки","РегистрНакопления.СвободныеОстатки.Остатки");
			Запрос.Текст=СтрЗаменить(Запрос.Текст,"СвободныеОстаткиОстатки.КОтгрузкеОстаток","СвободныеОстаткиОстатки.ВРезервеСоСкладаОстаток+СвободныеОстаткиОстатки.ВРезервеПодЗаказОстаток");
			Запрос.Текст=СтрЗаменить(Запрос.Текст,"ИЛИ Помещение В (&Склады)","");
		КонецЕсли;
		
	Иначе
		Запрос=Новый Запрос("ВЫБРАТЬ РАЗЛИЧНЫЕ
		                    |	ШтрихкодыНоменклатуры.Номенклатура,
		                    |	ШтрихкодыНоменклатуры.Характеристика,
		                    |	ШтрихкодыНоменклатуры.Упаковка,
		                    |	ШтрихкодыНоменклатуры.Штрихкод,
		                    |	ШтрихкодыНоменклатуры.Упаковка.ЕдиницаИзмерения.Наименование КАК Наименование,
		                    |	Выбор когда ШтрихкодыНоменклатуры.Упаковка.Числитель = 0 тогда 1 ИНАЧЕ ШтрихкодыНоменклатуры.Упаковка.Числитель КОНЕЦ / Выбор когда ШтрихкодыНоменклатуры.Упаковка.Знаменатель = 0 тогда 1 ИНАЧЕ ШтрихкодыНоменклатуры.Упаковка.Знаменатель КОНЕЦ  КАК Коэффициент
		                    |ПОМЕСТИТЬ ДоступныеТовары
		                    |ИЗ
		                    |	РегистрСведений.ШтрихкодыНоменклатуры КАК ШтрихкодыНоменклатуры
		                    |ГДЕ
		                    |	ШтрихкодыНоменклатуры.Штрихкод = &Штрихкод
		                    |
		                    |ОБЪЕДИНИТЬ ВСЕ
		                    |
		                    |ВЫБРАТЬ РАЗЛИЧНЫЕ
		                    |	ДатаМобайл_НовыеШтрихкоды.Номенклатура,
		                    |	ДатаМобайл_НовыеШтрихкоды.Характеристика,
		                    |	ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка),
		                    |	ДатаМобайл_НовыеШтрихкоды.ШтрихКод,
		                    |	ДатаМобайл_НовыеШтрихкоды.Наименование,
		                    |	ДатаМобайл_НовыеШтрихкоды.Коэффициент
		                    |ИЗ
		                    |	РегистрСведений.ДатаМобайл_НовыеШтрихкоды КАК ДатаМобайл_НовыеШтрихкоды
		                    |ГДЕ
		                    |	ДатаМобайл_НовыеШтрихкоды.ШтрихКод = &Штрихкод
		                    |;
		                    |
		                    |////////////////////////////////////////////////////////////////////////////////
		                    |ВЫБРАТЬ
		                    |	ДоступныеТовары.Номенклатура,
		                    |	ДоступныеТовары.Характеристика,
		                    |	ДоступныеТовары.Упаковка,
		                    |	СУММА(ВЫБОР
		                    |			КОГДА ДатаМобайл_ДокументыТСДСобранныеДанные.Ссылка.Шаблон.РезервироватьТовар
		                    |					И ДатаМобайл_ДокументыТСДСобранныеДанные.Ссылка <> &ИсходноеЗадание
		                    |				ТОГДА ЕСТЬNULL(ДатаМобайл_ДокументыТСДСобранныеДанные.Количество, 0)
		                    |			ИНАЧЕ 0
		                    |		КОНЕЦ) КАК ВРезервеТСД,
		                    |	СУММА(ВЫБОР
		                    |			КОГДА ДатаМобайл_ДокументыТСДСобранныеДанные.Ссылка = &ИсходноеЗадание
		                    |				ТОГДА ДатаМобайл_ДокументыТСДСобранныеДанные.Количество
		                    |			ИНАЧЕ 0
		                    |		КОНЕЦ) КАК СобраноТСД
		                    |ПОМЕСТИТЬ ТоварыСРезервамиТСД
		                    |ИЗ
		                    |	ДоступныеТовары КАК ДоступныеТовары
		                    |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ДатаМобайл_ДокументыТСД.СобранныеДанныеПодбор КАК ДатаМобайл_ДокументыТСДСобранныеДанные
		                    |		ПО ДоступныеТовары.Характеристика = ДатаМобайл_ДокументыТСДСобранныеДанные.ХарактеристикаНоменклатуры
		                    |			И ДоступныеТовары.Упаковка = ДатаМобайл_ДокументыТСДСобранныеДанные.ЕдиницаИзмерения
		                    |			И (ДатаМобайл_ДокументыТСДСобранныеДанные.Ссылка.Шаблон.РезервироватьТовар)
		                    |			И ДоступныеТовары.Номенклатура = ДатаМобайл_ДокументыТСДСобранныеДанные.Номенклатура
		                    |
		                    |СГРУППИРОВАТЬ ПО
		                    |	ДоступныеТовары.Упаковка,
		                    |	ДоступныеТовары.Характеристика,
		                    |	ДоступныеТовары.Номенклатура
		                    |;
		                    |
		                    |////////////////////////////////////////////////////////////////////////////////
		                    |ВЫБРАТЬ
		                    |	СУММА(ЕСТЬNULL(СвободныеОстаткиОстатки.ВНаличииОстаток, 0)) КАК ВНаличии,
		                    |	СУММА(ЕСТЬNULL(СвободныеОстаткиОстатки.КОтборуОстаток, 0)) КАК ВРезерве,
		                    |	ДоступныеТовары.Номенклатура,
		                    |	ДоступныеТовары.Характеристика,
		                    |	ДоступныеТовары.Упаковка
		                    |ПОМЕСТИТЬ ТоварыСОстатками1С
		                    |ИЗ
		                    |	ДоступныеТовары КАК ДоступныеТовары
		                    |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ТоварыВЯчейках.Остатки(
		                    |				,
		                    |				(&ВсеЯчейки
		                    |					ИЛИ Ячейка.Код = &Ячейка)
		                    |					И (&ВсеСклады
		                    |						ИЛИ Ячейка.Владелец В (&Склады)
		                    |						ИЛИ Ячейка.Помещение В (&Склады))) КАК СвободныеОстаткиОстатки
		                    |		ПО ДоступныеТовары.Номенклатура = СвободныеОстаткиОстатки.Номенклатура
		                    |			И ДоступныеТовары.Характеристика = СвободныеОстаткиОстатки.Характеристика
		                    |
		                    |СГРУППИРОВАТЬ ПО
		                    |	ДоступныеТовары.Характеристика,
		                    |	ДоступныеТовары.Номенклатура,
		                    |	ДоступныеТовары.Упаковка
		                    |;
		                    |
		                    |////////////////////////////////////////////////////////////////////////////////
		                    |ВЫБРАТЬ
		                    |	ДоступныеТовары.Номенклатура,
		                    |	ДоступныеТовары.Характеристика,
		                    |	ДоступныеТовары.Упаковка,
		                    |	СУММА(ЕСТЬNULL(Документ1С.Количество, 0)) КАК ВЗадании
		                    |ПОМЕСТИТЬ ТоварыСЗаданием
		                    |ИЗ
		                    |	ДоступныеТовары КАК ДоступныеТовары
		                    |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ОтборРазмещениеТоваров.ТоварыОтбор КАК Документ1С
		                    |		ПО ДоступныеТовары.Номенклатура = Документ1С.Номенклатура
		                    |			И ДоступныеТовары.Характеристика = Документ1С.Характеристика
		                    |			И (ДоступныеТовары.Упаковка = Документ1С.Упаковка
		                    |				ИЛИ &ВсеУпаковки)
		                    |			И (Документ1С.Ссылка = &ИсходныйДокумент)
		                    |			И (Документ1С.Ячейка.Код = &Ячейка
		                    |				ИЛИ &ВсеЯчейки)
		                    |
		                    |СГРУППИРОВАТЬ ПО
		                    |	ДоступныеТовары.Номенклатура,
		                    |	ДоступныеТовары.Характеристика,
		                    |	ДоступныеТовары.Упаковка
		                    |;
		                    |
		                    |////////////////////////////////////////////////////////////////////////////////
		                    |ВЫБРАТЬ
		                    |	ДоступныеТовары.Номенклатура,
		                    |	ДоступныеТовары.Характеристика,
		                    |	ДоступныеТовары.Упаковка,
		                    |	МАКСИМУМ(ВЫРАЗИТЬ(ЕСТЬNULL(ЦеныНоменклатурыСрезПоследних.Цена, 0) / ВЫБОР
		                    |				КОГДА ЕСТЬNULL(ДоступныеТовары.Упаковка.Числитель/ДоступныеТовары.Упаковка.Знаменатель, 0) = 0
		                    |					ТОГДА 1
		                    |				ИНАЧЕ Выбор когда ДоступныеТовары.Упаковка.Числитель = 0 Тогда 1 ИНАЧЕ ДоступныеТовары.Упаковка.Числитель КОНЕЦ / Выбор когда ДоступныеТовары.Упаковка.Знаменатель=0 Тогда 1 ИНАЧЕ ДоступныеТовары.Упаковка.Знаменатель КОНЕЦ 
		                    |			КОНЕЦ КАК ЧИСЛО(19, 2))) КАК Цена
		                    |ПОМЕСТИТЬ ТоварыСЦенами
		                    |ИЗ
		                    |	ДоступныеТовары КАК ДоступныеТовары
		                    |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныНоменклатуры.СрезПоследних(, ВидЦены = &ТипЦен) КАК ЦеныНоменклатурыСрезПоследних
		                    |		ПО ДоступныеТовары.Номенклатура = ЦеныНоменклатурыСрезПоследних.Номенклатура
		                    |			И ДоступныеТовары.Характеристика = ЦеныНоменклатурыСрезПоследних.Характеристика
		                    |			И (ДоступныеТовары.Номенклатура.ИспользоватьУпаковки
		                    |				ИЛИ ДоступныеТовары.Упаковка = ЦеныНоменклатурыСрезПоследних.Упаковка)
		                    |
		                    |СГРУППИРОВАТЬ ПО
		                    |	ДоступныеТовары.Номенклатура,
		                    |	ДоступныеТовары.Характеристика,
		                    |	ДоступныеТовары.Упаковка
		                    |;
		                    |
		                    |////////////////////////////////////////////////////////////////////////////////
		                    |ВЫБРАТЬ
		                    |	ДоступныеТовары.Номенклатура,
		                    |	ДоступныеТовары.Характеристика,
		                    |	ДоступныеТовары.Упаковка,
		                    |	ТоварыСЗаданием.ВЗадании,
		                    |	ТоварыСОстатками1С.ВНаличии,
		                    |	ТоварыСОстатками1С.ВРезерве,
		                    |	ТоварыСРезервамиТСД.ВРезервеТСД,
		                    |	ЕСТЬNULL(ТоварыСЦенами.Цена, 0) КАК Цена,
		                    |	ЕСТЬNULL(ДоступныеТовары.Наименование, ДоступныеТовары.Номенклатура.ЕдиницаИзмерения.Наименование) КАК НаименованиеУпаковки,
		                    |	ЕСТЬNULL(ДоступныеТовары.Коэффициент, 1) КАК Коэффициент,
		                    |	ВЫБОР
		                    |		КОГДА &ВключатьАртикул
		                    |				И ТИПЗНАЧЕНИЯ(ДоступныеТовары.Номенклатура) = ТИП(Справочник.Номенклатура)
		                    |			ТОГДА ДоступныеТовары.Номенклатура.Артикул + ""-""
		                    |		ИНАЧЕ """"
		                    |	КОНЕЦ + ДоступныеТовары.Номенклатура.Наименование + "" "" + ЕСТЬNULL(ДоступныеТовары.Характеристика.Наименование, """") КАК НаименованиеТовара,
		                    |	ТоварыСРезервамиТСД.СобраноТСД,
		                    |	ВЫБОР
		                    |		КОГДА ТИПЗНАЧЕНИЯ(ДоступныеТовары.Номенклатура) = ТИП(справочник.номенклатура)
		                    |			ТОГДА ЛОЖЬ
		                    |		ИНАЧЕ ИСТИНА
		                    |	КОНЕЦ КАК ЭтоНовыйТовар
		                    |ИЗ
		                    |	ДоступныеТовары КАК ДоступныеТовары
		                    |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТоварыСРезервамиТСД КАК ТоварыСРезервамиТСД
		                    |		ПО ДоступныеТовары.Характеристика = ТоварыСРезервамиТСД.Характеристика
		                    |			И ДоступныеТовары.Номенклатура = ТоварыСРезервамиТСД.Номенклатура
		                    |			И ДоступныеТовары.Упаковка = ТоварыСРезервамиТСД.Упаковка
		                    |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТоварыСОстатками1С КАК ТоварыСОстатками1С
		                    |		ПО ДоступныеТовары.Номенклатура = ТоварыСОстатками1С.Номенклатура
		                    |			И ДоступныеТовары.Характеристика = ТоварыСОстатками1С.Характеристика
		                    |			И ДоступныеТовары.Упаковка = ТоварыСОстатками1С.Упаковка
		                    |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТоварыСЗаданием КАК ТоварыСЗаданием
		                    |		ПО ДоступныеТовары.Номенклатура = ТоварыСЗаданием.Номенклатура
		                    |			И ДоступныеТовары.Характеристика = ТоварыСЗаданием.Характеристика
		                    |			И ДоступныеТовары.Упаковка = ТоварыСЗаданием.Упаковка
		                    |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТоварыСЦенами КАК ТоварыСЦенами
		                    |		ПО ДоступныеТовары.Номенклатура = ТоварыСЦенами.Номенклатура
		                    |			И ДоступныеТовары.Характеристика = ТоварыСЦенами.Характеристика
		                    |			И ДоступныеТовары.Упаковка = ТоварыСЦенами.Упаковка");
			Запрос.Текст=СтрЗаменить(Запрос.Текст,".ОтборРазмещениеТоваров.","."+Шаблон.ВидДокумента+".");
			Запрос.Текст=СтрЗаменить(Запрос.Текст,".ТоварыОтбор КАК","."+Шаблон.ИмяТабличнойЧастиПодбор+" КАК");

		ТекущаяЯчейкаСсылка = ?(УзелПО.ВыгружатьВКодЯчейки=0,Справочники.СкладскиеЯчейки.НайтиПоКоду(Ячейка), ДатаМобайл_ОбщийМодуль.ПолучитьЯчейкуПоШтрихкоду(Ячейка));	
		Запрос.УстановитьПараметр("Ячейка",ТекущаяЯчейкаСсылка.Код);

		Запрос.УстановитьПараметр("ВсеЯчейки",Ложь);
	КонецЕсли;
	КонецЕсли;

	Если Шаблон.ВидДокумента = "ОприходованиеИзлишковТоваров" Тогда
		Запрос.Текст=СтрЗаменить(Запрос.Текст,"ДоступныеТовары.Упаковка = Документ1С.Упаковка", "ИСТИНА");	
	КонецЕсли;	
	
	Запрос.Текст=СтрЗаменить(Запрос.Текст,".ПоступлениеТоваров.","."+Шаблон.ВидДокумента+".");
	Запрос.Текст=СтрЗаменить(Запрос.Текст,".Товары КАК","."+Шаблон.ИмяТабличнойЧастиПодбор+" КАК");
	
	Запрос.УстановитьПараметр("ТипЦен",ТипЦен);
	Запрос.УстановитьПараметр("ИсходныйДокумент",СсылкаНаДок.ИсходныйДокумент);
	Запрос.УстановитьПараметр("ИсходноеЗадание",СсылкаНаДок);
	             
	Если СтрДлина(ШК) = 5 Тогда
		ШК = "2_" + ШК + "00000_";			
	КонецЕсли;		
	Запрос.УстановитьПараметр("ШтрихКод",ШК);

	Запрос.УстановитьПараметр("ВсеУпаковки",Шаблон.ВсеШтрихкодыТовара);
	СписокСкладов=УзелПО.Склады.ВыгрузитьКолонку("Склад");
	Запрос.УстановитьПараметр("Склады",СписокСкладов);
	Запрос.УстановитьПараметр("ВсеСклады",СписокСкладов.Количество()=0);
	Запрос.УстановитьПараметр("ВключатьАртикул",ВключатьАртикул);
	
	
	Рез=Запрос.Выполнить().Выгрузить();
	Для Каждого СтрокаДока из Рез цикл
		СтрокаДока.Коэффициент=?(СтрокаДока.Коэффициент=0,1,СтрокаДока.Коэффициент);
		ОбъектТовара=ФабрикаXDTO.Создать(ФабрикаXDTO.Тип("http://www.data-mobile.ru","DMArtQueryItem"));
		Попытка 
			Если СтрокаДока.Номенклатура.АлкогольнаяПродукция тогда // Проверим наличие сопоставленной номенклатуры и организации
				КодЕГАИС = "";
				Товар=СтрокаДока.НаименованиеТовара;
				Запрос = Новый Запрос;
				Запрос.Текст = 
				"ВЫБРАТЬ
				|	СоответствиеНоменклатурыЕГАИС.АлкогольнаяПродукция КАК АлкогольнаяПродукция,
				|	СоответствиеНоменклатурыЕГАИС.Номенклатура КАК Номенклатура
				|ИЗ
				|	РегистрСведений.СоответствиеНоменклатурыЕГАИС КАК СоответствиеНоменклатурыЕГАИС
				|ГДЕ
				|	СоответствиеНоменклатурыЕГАИС.Номенклатура = &Номенклатура";
				Запрос.УстановитьПараметр("Номенклатура", СтрокаДока.Номенклатура);
				ТаблицаСоответствий =Запрос.Выполнить().Выбрать();
				Если ТаблицаСоответствий.Количество() = 1 тогда
					Пока ТаблицаСоответствий.Следующий() цикл
						Товар = ТаблицаСоответствий.АлкогольнаяПродукция.Наименование;
						КодЕГАИС = ТаблицаСоответствий.АлкогольнаяПродукция.Код; 
					Прервать;
					КонецЦикла;		
				КонецЕсли;
				ОбъектТовара.DMArtName=ЧистаяСтрока(Товар);					
			Иначе
				ОбъектТовара.DMArtName=ЧистаяСтрока(СокрП(СтрокаДока.НаименованиеТовара));
			КонецЕсли;	
		Исключение
			ОбъектТовара.DMArtName=ЧистаяСтрока(СокрП(СтрокаДока.НаименованиеТовара));
		КонецПопытки;
		
		ОбъектТовара.DMArtID=?(СтрокаДока.ЭтоНовыйТовар,"8n-"+СокрЛП(СтрокаДока.Номенклатура.УникальныйИдентификатор()),"8U-"+СокрЛП(СтрокаДока.Номенклатура.УникальныйИдентификатор())+СокрЛП(СтрокаДока.Характеристика.УникальныйИдентификатор()));
		ОбъектТовара.DMArtPrice=СтрокаДока.Цена;
		
		Атрибуты = ПолучитьАтрибуты(УзелПО);			
		Для сч=1 По 10 Цикл				
			ИмяАтрибута =  Атрибуты["ИмяАтрибута"+сч];
			Если СтрокаДока.ЭтоНовыйТовар Тогда
				ОбъектТовара["DMArtAttr"+сч] = "";
			ИначеЕсли СтрокаДока.Номенклатура.АлкогольнаяПродукция и сч=6 тогда  
				ОбъектТовара["DMArtAttr"+сч] = Строка(КодЕГАИС);
			ИначеЕсли СтрокаДока.Номенклатура.АлкогольнаяПродукция и сч=9 и ИмяАтрибута <> "" тогда
				Попытка
					ОбъектТовара["DMArtAttr"+сч] = ЧистаяСтрока(СтрокаДока.Номенклатура[ИмяАтрибута].Код + " " + СтрокаДока.Номенклатура[ИмяАтрибута].Наименование);
				Исключение
					ОбъектТовара["DMArtAttr"+сч] = "";
				КонецПопытки;	
			ИначеЕсли ИмяАтрибута ="!!! Ячейки !!!" Тогда
				ОбъектТовара["DMArtAttr"+сч] = ЧистаяСтрока(СтрокаДока.АдресХранения);
			ИначеЕсли ИмяАтрибута <> "" Тогда
				ОбъектТовара["DMArtAttr"+сч] = ЧистаяСтрока(СтрокаДока.Номенклатура[ИмяАтрибута]);							
			Иначе 
				ОбъектТовара["DMArtAttr"+сч] = "";
			КонецЕсли;	
		КонецЦикла;

		ОбъектТовара.DMMeasureName=СтрокаДока.НаименованиеУпаковки;
		ОбъектТовара.DMMeasureK=СтрокаДока.Коэффициент;
		//ОбъектТовара.DMTaskQnt=(СтрокаДока.ВЗадании)/СтрокаДока.Коэффициент;
		ОбъектТовара.DMTaskQnt=(СтрокаДока.ВЗадании);

		Если УзелПО.НеОтображатьОстатки тогда
			ОбъектТовара.DMLimitQnt="0";
		Иначе
			//ОбъектТовара.DMLimitQnt=(СтрокаДока.ВНаличии-СтрокаДока.ВРезерве-СтрокаДока.ВРезервеТСД)/СтрокаДока.Коэффициент;
			Итог = (СтрокаДока.ВНаличии-СтрокаДока.ВРезерве-СтрокаДока.ВРезервеТСД);			
			ОбъектТовара.DMLimitQnt=Итог;
		КонецЕсли;
				
		Попытка
			ОбъектТовара.DMUseSN = СтрокаДока.Номенклатура.ВидНоменклатуры.ИспользоватьСерии;
		Исключение
			ОбъектТовара.DMUseSN = Ложь;
		Конецпопытки;
		ОбъектТовара.DMBarcodeUseSN = 2;
		
		ОбъектСписка.DMArtQueryItem.Добавить(ОбъектТовара);
	КонецЦикла;

	
	//ЗАПИСЬ	
	Если НЕ Шаблон.ГрупповаяРабота Тогда
		//ОБЫЧНАЯ ЛОГИКА
		Попытка
			Об=СсылкаНаДок.ПолучитьОбъект();
		Исключение
		КонецПопытки;

		Если Об = неопределено тогда
			ВызватьИсключениеВС("OnArtScan. Не нашли документ. ");
			Возврат Ложь;
		КонецЕсли;
		
		Если Об.ДатаНачалаСбора=Дата(1,1,1) тогда
			Об.ДатаНачалаСбора=ТекущаяДата();
		КонецЕсли;
		
		Если Об.ТСД.Пустая() тогда
			Об.ТСД=УзелПО;
		КонецЕсли;
		
		Об.ОбменДанными.Получатели.АвтоЗаполнение = Ложь;
		Об.ОбменДанными.Получатели.Очистить();
		Об.ОбменДанными.Получатели.Заполнить();
	    Об.ОбменДанными.Получатели.Удалить(УзелПО);
		Об.ОбменДанными.Загрузка=Истина;
		
		Попытка
			Об.Записать();
		Исключение
			ВызватьИсключениеВС("OnArtScan. Не смогли записать документ. ");
			Возврат Ложь;
		КонецПопытки;

	Иначе
		//ГРУППОВОЙ ДОКУМЕНТ
		
		ДатаСбораПоТСД = ДатаМобайл_ОбщийМодуль.ПолучитьДатуГрупповогоДокумента(SN, СсылкаНаДок, "ДатаНачалаСбора");	
		Если (ДатаСбораПоТСД = Неопределено) ИЛИ (ДатаСбораПоТСД = Дата(1,1,1))  Тогда	
			ДатаМобайл_ОбщийМодуль.СоздатьНачальнуюЗаписьТСДГрупповыхДокументов(SN, СсылкаНаДок, UserName);		
		КонецЕсли;

		Попытка
			Об=СсылкаНаДок.ПолучитьОбъект();
			Если Об.ДатаНачалаСбора=Дата(1,1,1) тогда
				Об.ДатаНачалаСбора=ТекущаяДата();
			КонецЕсли;
			Об.ОбменДанными.Получатели.АвтоЗаполнение = Ложь;
			Об.ОбменДанными.Получатели.Очистить();
			Об.Записать();		
		Исключение
		КонецПопытки;	
	КонецЕсли;	
		
	Возврат ОбъектСписка;
КонецФункции
Функция OnArtScanInsert(SN,UserName,ШК, DocOutID,Ячейка)
	ОбъектСписка=ФабрикаXDTO.Создать(ФабрикаXDTO.Тип("http://www.data-mobile.ru","DMArtQueryInfo"));
	УзелПО=НайтиУзел(SN);
	Если УзелПО=Неопределено тогда
		УзелПО = NewTSD(SN, UserName);
	КонецЕсли;
	
	попытка
		СсылкаНаДок=Справочники.ДатаМобайл_ДокументыТСД.ПолучитьСсылку(Новый УникальныйИдентификатор(Сред(DocOutID,5)));
	Исключение	
		ВызватьИсключениеВС("OnArtScan. Не нашли документ. ");
		Возврат ОбъектСписка;
	КонецПопытки;	
	Если ссылканадок.ПолучитьОбъект()=неопределено тогда
		ВызватьИсключениеВС("OnArtScan. Не нашли документ. ");
		Возврат ОбъектСписка;
	КонецЕсли;	
	Если Не СсылкаНаДок.ТСД.Пустая() тогда
		Если СсылкаНаДок.ТСД<>УзелПО тогда
			ВызватьИсключениеВС("OnArtScan. Чужой документ. ");
			Возврат ОбъектСписка;
		КонецЕсли;	
	КонецЕсли;	
	Если СсылкаНаДок.ДатаЗавершенияСбора<>Дата(1,1,1) тогда
		ВызватьИсключениеВС("OnArtScan. Закрытый документ. ");
		Возврат ОбъектСписка;
	КонецЕсли;	
	Шаблон=СсылкаНаДок.Шаблон;
	Если не Шаблон.ИспользоватьПриемку тогда
		ВызватьИсключениеВС("OnArtScan. Шаблон запрещает использование приемки. ");
		Возврат ОбъектСписка;
	КонецЕсли;	
	//Если Шаблон.ПриемкаПоПодбору тогда
	//	ВызватьИсключениеВС("OnArtScan. Функционал онлайн приемки по результатам подбора еще в разработке. "+DocOutID+"("+СсылкаНаДок.ТСД.Код+"!="+SN+")");
	//	Возврат ОбъектСписка;
	//КонецЕсли;	
	ТипЦен=УзелПО.ТипЦен;
	ВключатьАртикул=УзелПО.ДобавлятьАртикулВНаименование;
	Запрос=Новый Запрос("ВЫБРАТЬ РАЗЛИЧНЫЕ
	                    |	ШтрихкодыНоменклатуры.Номенклатура,
	                    |	ШтрихкодыНоменклатуры.Характеристика,
	                    |	ШтрихкодыНоменклатуры.Упаковка,
	                    |	ШтрихкодыНоменклатуры.Штрихкод,
	                    |	ШтрихкодыНоменклатуры.Упаковка.ЕдиницаИзмерения.Наименование КАК Наименование,
	                    |	Выбор когда ШтрихкодыНоменклатуры.Упаковка.Числитель = 0 Тогда 1 ИНАЧЕ ШтрихкодыНоменклатуры.Упаковка.Числитель КОНЕЦ / Выбор Когда ШтрихкодыНоменклатуры.Упаковка.Знаменатель = 0 ТОГДА 1 ИНАЧЕ ШтрихкодыНоменклатуры.Упаковка.Знаменатель КОНЕЦ КАК Коэффициент
	                    |ПОМЕСТИТЬ ДоступныеТовары
	                    |ИЗ
	                    |	РегистрСведений.ШтрихкодыНоменклатуры КАК ШтрихкодыНоменклатуры
	                    |ГДЕ
	                    |	ШтрихкодыНоменклатуры.Штрихкод = &Штрихкод
	                    |
	                    |ОБЪЕДИНИТЬ
	                    |
	                    |ВЫБРАТЬ РАЗЛИЧНЫЕ
	                    |	ДатаМобайл_НовыеШтрихкоды.Номенклатура,
	                    |	ДатаМобайл_НовыеШтрихкоды.Характеристика,
	                    |	ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка),
	                    |	ДатаМобайл_НовыеШтрихкоды.ШтрихКод,
	                    |	ДатаМобайл_НовыеШтрихкоды.Наименование,
	                    |	ДатаМобайл_НовыеШтрихкоды.Коэффициент
	                    |ИЗ
	                    |	РегистрСведений.ДатаМобайл_НовыеШтрихкоды КАК ДатаМобайл_НовыеШтрихкоды
	                    |ГДЕ
	                    |	ДатаМобайл_НовыеШтрихкоды.ШтрихКод = &Штрихкод
	                    |;
	                    |
	                    |////////////////////////////////////////////////////////////////////////////////
	                    |ВЫБРАТЬ
	                    |	ДоступныеТовары.Номенклатура,
	                    |	ДоступныеТовары.Характеристика,
	                    |	ДоступныеТовары.Упаковка,
	                    |	СУММА(0) КАК ВРезервеТСД,
	                    |	СУММА(ВЫБОР
	                    |			КОГДА ДатаМобайл_ДокументыТСДСобранныеДанные.Ссылка = &ИсходноеЗадание
	                    |				ТОГДА ДатаМобайл_ДокументыТСДСобранныеДанные.Количество
	                    |			ИНАЧЕ 0
	                    |		КОНЕЦ) КАК СобраноТСД
	                    |ПОМЕСТИТЬ ТоварыСРезервамиТСД
	                    |ИЗ
	                    |	ДоступныеТовары КАК ДоступныеТовары
	                    |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ДатаМобайл_ДокументыТСД.СобранныеДанныеПриемка КАК ДатаМобайл_ДокументыТСДСобранныеДанные
	                    |		ПО ДоступныеТовары.Характеристика = ДатаМобайл_ДокументыТСДСобранныеДанные.ХарактеристикаНоменклатуры
	                    |			И ДоступныеТовары.Упаковка = ДатаМобайл_ДокументыТСДСобранныеДанные.ЕдиницаИзмерения
	                    |			И ДоступныеТовары.Номенклатура = ДатаМобайл_ДокументыТСДСобранныеДанные.Номенклатура
	                    |			И (&ВсеЯчейки
	                    |				ИЛИ ДатаМобайл_ДокументыТСДСобранныеДанные.Ячейка = &Ячейка)
	                    |
	                    |СГРУППИРОВАТЬ ПО
	                    |	ДоступныеТовары.Упаковка,
	                    |	ДоступныеТовары.Характеристика,
	                    |	ДоступныеТовары.Номенклатура
	                    |;
	                    |
	                    |////////////////////////////////////////////////////////////////////////////////
	                    |ВЫБРАТЬ
	                    |	СУММА(0) КАК ВРезерве,
	                    |	ДоступныеТовары.Номенклатура,
	                    |	ДоступныеТовары.Характеристика,
	                    |	ДоступныеТовары.Упаковка,
	                    |	СУММА(ЕСТЬNULL(ДатаМобайл_ДокументыТСДСобранныеДанные.Количество, 0)) КАК ВНаличии
	                    |ПОМЕСТИТЬ ТоварыСОстатками1С
	                    |ИЗ
	                    |	ДоступныеТовары КАК ДоступныеТовары
	                    |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ДатаМобайл_ДокументыТСД.СобранныеДанныеПодбор КАК ДатаМобайл_ДокументыТСДСобранныеДанные
	                    |		ПО ДоступныеТовары.Характеристика = ДатаМобайл_ДокументыТСДСобранныеДанные.ХарактеристикаНоменклатуры
	                    |			И (ДоступныеТовары.Упаковка = ДатаМобайл_ДокументыТСДСобранныеДанные.ЕдиницаИзмерения
	                    |				ИЛИ &ВсеУпаковки)
	                    |			И ДоступныеТовары.Номенклатура = ДатаМобайл_ДокументыТСДСобранныеДанные.Номенклатура
	                    |			И (&УсловиеПриемкиПоПодбору)
	                    |			И (ДатаМобайл_ДокументыТСДСобранныеДанные.Ссылка = &ИсходноеЗадание)
	                    |
	                    |СГРУППИРОВАТЬ ПО
	                    |	ДоступныеТовары.Характеристика,
	                    |	ДоступныеТовары.Номенклатура,
	                    |	ДоступныеТовары.Упаковка
	                    |;
	                    |
	                    |////////////////////////////////////////////////////////////////////////////////
	                    |ВЫБРАТЬ
	                    |	ДоступныеТовары.Номенклатура,
	                    |	ДоступныеТовары.Характеристика,
	                    |	ДоступныеТовары.Упаковка,
	                    |	СУММА(ЕСТЬNULL(Документ1СПриемка.Количество, 0)) КАК ВЗадании
	                    |ПОМЕСТИТЬ ТоварыСЗаданием
	                    |ИЗ
	                    |	ДоступныеТовары КАК ДоступныеТовары
	                    |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ОтборРазмещениеТоваров.ТоварыРазмещение КАК Документ1СПриемка
	                    |		ПО ДоступныеТовары.Номенклатура = Документ1СПриемка.Номенклатура
	                    |			И ДоступныеТовары.Характеристика = Документ1СПриемка.Характеристика
	                    |			И (ДоступныеТовары.Упаковка = Документ1СПриемка.Упаковка
	                    |				ИЛИ &ВсеУпаковки)
	                    |			И (Документ1СПриемка.Ссылка = &ИсходныйДокумент)
	                    |			И (Документ1СПриемка.Ячейка.Код = &Ячейка)
	                    |
	                    |СГРУППИРОВАТЬ ПО
	                    |	ДоступныеТовары.Номенклатура,
	                    |	ДоступныеТовары.Характеристика,
	                    |	ДоступныеТовары.Упаковка
	                    |;
	                    |
	                    |////////////////////////////////////////////////////////////////////////////////
	                    |ВЫБРАТЬ
	                    |	ДоступныеТовары.Номенклатура,
	                    |	ДоступныеТовары.Характеристика,
	                    |	ДоступныеТовары.Упаковка,
	                    |	МАКСИМУМ(ВЫРАЗИТЬ(ЕСТЬNULL(ЦеныНоменклатурыСрезПоследних.Цена, 0) / ВЫБОР
	                    |				КОГДА ЕСТЬNULL(Выбор когда ДоступныеТовары.Упаковка.Числитель = 0 ТОГДА 1 ИНАЧЕ ДоступныеТовары.Упаковка.Числитель КОНЕЦ / Выбор Когда ДоступныеТовары.Упаковка.Знаменатель = 0 Тогда 1 ИНАЧЕ ДоступныеТовары.Упаковка.Знаменатель КОНЕЦ , 0) = 0
	                    |					ТОГДА 1
	                    |				ИНАЧЕ Выбор когда ДоступныеТовары.Упаковка.Числитель = 0 ТОГДА 1 ИНАЧЕ ДоступныеТовары.Упаковка.Числитель КОНЕЦ / Выбор когда ДоступныеТовары.Упаковка.Знаменатель = 0 ТОГДА 1 ИНАЧЕ ДоступныеТовары.Упаковка.Знаменатель КОНЕЦ
	                    |			КОНЕЦ КАК ЧИСЛО(19, 2))) КАК Цена
	                    |ПОМЕСТИТЬ ТоварыСЦенами
	                    |ИЗ
	                    |	ДоступныеТовары КАК ДоступныеТовары
	                    |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныНоменклатуры.СрезПоследних(, ВидЦены = &ТипЦен) КАК ЦеныНоменклатурыСрезПоследних
	                    |		ПО ДоступныеТовары.Номенклатура = ЦеныНоменклатурыСрезПоследних.Номенклатура
	                    |			И ДоступныеТовары.Характеристика = ЦеныНоменклатурыСрезПоследних.Характеристика
	                    |			И (ДоступныеТовары.Номенклатура.ИспользоватьУпаковки
	                    |				ИЛИ ДоступныеТовары.Упаковка = ЦеныНоменклатурыСрезПоследних.Упаковка)
	                    |
	                    |СГРУППИРОВАТЬ ПО
	                    |	ДоступныеТовары.Номенклатура,
	                    |	ДоступныеТовары.Характеристика,
	                    |	ДоступныеТовары.Упаковка
	                    |;
	                    |
	                    |////////////////////////////////////////////////////////////////////////////////
	                    |ВЫБРАТЬ
	                    |	ДоступныеТовары.Номенклатура,
	                    |	ДоступныеТовары.Характеристика,
	                    |	ДоступныеТовары.Упаковка,
	                    |	ТоварыСЗаданием.ВЗадании,
	                    |	ТоварыСОстатками1С.ВРезерве,
	                    |	ТоварыСРезервамиТСД.ВРезервеТСД,
	                    |	ЕСТЬNULL(ТоварыСЦенами.Цена, 0) КАК Цена,
	                    |	ЕСТЬNULL(ДоступныеТовары.Наименование, ДоступныеТовары.Номенклатура.ЕдиницаИзмерения.Наименование) КАК НаименованиеУпаковки,
	                    |	ЕСТЬNULL(ДоступныеТовары.Коэффициент, 1) КАК Коэффициент,
	                    |	ВЫБОР
	                    |		КОГДА &ВключатьАртикул
	                    |				И ТИПЗНАЧЕНИЯ(ДоступныеТовары.Номенклатура) = ТИП(Справочник.Номенклатура)
	                    |			ТОГДА ДоступныеТовары.Номенклатура.Артикул + ""-""
	                    |		ИНАЧЕ """"
	                    |	КОНЕЦ + ДоступныеТовары.Номенклатура.Наименование + "" "" + ЕСТЬNULL(ДоступныеТовары.Характеристика.Наименование, """") КАК НаименованиеТовара,
	                    |	ТоварыСРезервамиТСД.СобраноТСД,
	                    |	ТоварыСОстатками1С.ВНаличии,
	                    |	ВЫБОР
	                    |		КОГДА ТИПЗНАЧЕНИЯ(ДоступныеТовары.Номенклатура) = ТИП(справочник.номенклатура)
	                    |			ТОГДА ЛОЖЬ
	                    |		ИНАЧЕ ИСТИНА
	                    |	КОНЕЦ КАК ЭтоНовыйТовар
	                    |ИЗ
	                    |	ДоступныеТовары КАК ДоступныеТовары
	                    |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТоварыСРезервамиТСД КАК ТоварыСРезервамиТСД
	                    |		ПО ДоступныеТовары.Характеристика = ТоварыСРезервамиТСД.Характеристика
	                    |			И ДоступныеТовары.Номенклатура = ТоварыСРезервамиТСД.Номенклатура
	                    |			И ДоступныеТовары.Упаковка = ТоварыСРезервамиТСД.Упаковка
	                    |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТоварыСОстатками1С КАК ТоварыСОстатками1С
	                    |		ПО ДоступныеТовары.Номенклатура = ТоварыСОстатками1С.Номенклатура
	                    |			И ДоступныеТовары.Характеристика = ТоварыСОстатками1С.Характеристика
	                    |			И ДоступныеТовары.Упаковка = ТоварыСОстатками1С.Упаковка
	                    |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТоварыСЗаданием КАК ТоварыСЗаданием
	                    |		ПО ДоступныеТовары.Номенклатура = ТоварыСЗаданием.Номенклатура
	                    |			И ДоступныеТовары.Характеристика = ТоварыСЗаданием.Характеристика
	                    |			И ДоступныеТовары.Упаковка = ТоварыСЗаданием.Упаковка
	                    |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТоварыСЦенами КАК ТоварыСЦенами
	                    |		ПО ДоступныеТовары.Номенклатура = ТоварыСЦенами.Номенклатура
	                    |			И ДоступныеТовары.Характеристика = ТоварыСЦенами.Характеристика
	                    |			И ДоступныеТовары.Упаковка = ТоварыСЦенами.Упаковка");
	
	Запрос.УстановитьПараметр("УсловиеПодбор",Ложь);
	Если Шаблон.ИспользоватьПодбор тогда					
		Запрос.Текст=СтрЗаменить(Запрос.Текст,"Документ.ОтборРазмещениеТоваров.ТоварыОтбор КАК Документ1СПодбор","Документ."+Шаблон.ВидДокумента+"."+Шаблон.ИмяТабличнойЧастиПодбор+" КАК Документ1СПодбор");
		Запрос.УстановитьПараметр("УсловиеПриемкиПоПодбору",?(Шаблон.ПриемкаПоПодбору,Истина,Ложь));
	Иначе
		Запрос.УстановитьПараметр("УсловиеПриемкиПоПодбору",Ложь);
	КонецЕсли;	
	
	ТекущаяЯчейкаСсылка = ?(УзелПО.ВыгружатьВКодЯчейки=0,Справочники.СкладскиеЯчейки.НайтиПоКоду(Ячейка), ДатаМобайл_ОбщийМодуль.ПолучитьЯчейкуПоШтрихкоду(Ячейка)); 		
	Запрос.УстановитьПараметр("Ячейка",ТекущаяЯчейкаСсылка.Код);
	
	Запрос.УстановитьПараметр("ВсеЯчейки",Истина);
	Если Шаблон.УчитыватьЯчеекВЗаданииПриемка тогда
		Запрос.УстановитьПараметр("ВсеЯчейки",Ложь);
	Иначе	
		Запрос.Текст=СтрЗаменить(Запрос.Текст,"Документ1СПодбор.Ячейка.Код = &Ячейка","Истина");
		Запрос.Текст=СтрЗаменить(Запрос.Текст,"Документ1СПриемка.Ячейка.Код = &Ячейка","Истина");
	КонецЕсли;	
	
	Запрос.Текст=СтрЗаменить(Запрос.Текст,"Документ.ОтборРазмещениеТоваров.ТоварыРазмещение КАК Документ1СПриемка","Документ."+Шаблон.ВидДокумента+"."+Шаблон.ИмяТабличнойЧастиПриемка+" КАК Документ1СПриемка");
	
	
	Запрос.УстановитьПараметр("ТипЦен",ТипЦен);
	Запрос.УстановитьПараметр("ИсходныйДокумент",СсылкаНаДок.ИсходныйДокумент);
	Запрос.УстановитьПараметр("ИсходноеЗадание",СсылкаНаДок);
	
	Если СтрДлина(ШК) = 5 Тогда
		
		ШК = "2_" + ШК + "00000_";
				
	КонецЕсли;			

	Запрос.УстановитьПараметр("ШтрихКод",ШК);
	Запрос.УстановитьПараметр("ВсеУпаковки",Шаблон.ВсеШтрихкодыТовара);
	Запрос.УстановитьПараметр("ВключатьАртикул",ВключатьАртикул);
	
	Рез=Запрос.Выполнить().Выгрузить();
	Для Каждого СтрокаДока из Рез цикл
		СтрокаДока.Коэффициент=?(СтрокаДока.Коэффициент=0,1,СтрокаДока.Коэффициент);
		ОбъектТовара=ФабрикаXDTO.Создать(ФабрикаXDTO.Тип("http://www.data-mobile.ru","DMArtQueryItem"));
		ОбъектТовара.DMArtName=ЧистаяСтрока(СтрокаДока.НаименованиеТовара);
		ОбъектТовара.DMArtID=?(СтрокаДока.ЭтоНовыйТовар,"8n-"+СокрЛП(СтрокаДока.Номенклатура.УникальныйИдентификатор()),"8U-"+СокрЛП(СтрокаДока.Номенклатура.УникальныйИдентификатор())+СокрЛП(СтрокаДока.Характеристика.УникальныйИдентификатор()));
		ОбъектТовара.DMArtPrice=СтрокаДока.Цена;
		   	Атрибуты = ПолучитьАтрибуты(УзелПО); //получаем структуру типа //"ИмяАтрибута5","ПроизводительИмпортер";			
		Для сч=1 По 10 Цикл				
			ИмяАтрибута =  Атрибуты["ИмяАтрибута"+сч];
			Если ИмяАтрибута ="!!! Ячейки !!!" Тогда
				ОбъектТовара["DMArtAttr"+сч] = ЧистаяСтрока(СтрокаДока.АдресХранения);
			ИначеЕсли ИмяАтрибута <> "" Тогда
				ОбъектТовара["DMArtAttr"+сч] = ЧистаяСтрока(СтрокаДока.Номенклатура[ИмяАтрибута]);
			Иначе 
				ОбъектТовара["DMArtAttr"+сч] = "";
			КонецЕсли;	
		КонецЦикла;
		ОбъектТовара.DMMeasureName=СтрокаДока.НаименованиеУпаковки;
		ОбъектТовара.DMMeasureK=СтрокаДока.Коэффициент;
		ОбъектТовара.DMTaskQnt=(СтрокаДока.ВЗадании);
		Если УзелПО.НеОтображатьОстатки тогда
			ОбъектТовара.DMLimitQnt=0;
		Иначе
			ОбъектТовара.DMLimitQnt=(СтрокаДока.ВНаличии-СтрокаДока.ВРезерве-СтрокаДока.ВРезервеТСД);
		КонецЕсли;
		
		Попытка
			ОбъектТовара.DMUseSN = СтрокаДока.Номенклатура.ВидНоменклатуры.ИспользоватьСерии;
		Исключение
			ОбъектТовара.DMUseSN = Ложь;
		Конецпопытки;
		ОбъектТовара.DMBarcodeUseSN = 2;

		ОбъектСписка.DMArtQueryItem.Добавить(ОбъектТовара);
	КонецЦикла;
	
	//ЗАПИСЬ	
	Если НЕ Шаблон.ГрупповаяРабота Тогда
		//ОБЫЧНАЯ ЛОГИКА
		Попытка
			Об=СсылкаНаДок.ПолучитьОбъект();
		Исключение
		КонецПопытки;

		Если Об = неопределено тогда
			ВызватьИсключениеВС("OnArtScan. Не нашли документ. ");
			Возврат Ложь;
		КонецЕсли;
		
		Если Об.ДатаНачалаСбора=Дата(1,1,1) тогда
			Об.ДатаНачалаСбора=ТекущаяДата();
		КонецЕсли;
		
		Если Об.ТСД.Пустая() тогда
			Об.ТСД=УзелПО;
		КонецЕсли;
		
		Об.ОбменДанными.Получатели.АвтоЗаполнение = Ложь;
		Об.ОбменДанными.Получатели.Очистить();
		Об.ОбменДанными.Получатели.Заполнить();
	    Об.ОбменДанными.Получатели.Удалить(УзелПО);
		Об.ОбменДанными.Загрузка=Истина;
		
		Попытка
			Об.Записать();
		Исключение
			ВызватьИсключениеВС("OnArtScan. Не смогли записать документ. ");
			Возврат Ложь;
		КонецПопытки;

	Иначе
		//ГРУППОВОЙ ДОКУМЕНТ
		
		ДатаСбораПоТСД = ДатаМобайл_ОбщийМодуль.ПолучитьДатуГрупповогоДокумента(SN, СсылкаНаДок, "ДатаНачалаСбора");	
		Если (ДатаСбораПоТСД = Неопределено) ИЛИ (ДатаСбораПоТСД = Дата(1,1,1))  Тогда	
			ДатаМобайл_ОбщийМодуль.СоздатьНачальнуюЗаписьТСДГрупповыхДокументов(SN, СсылкаНаДок, UserName);		
		КонецЕсли;

		Попытка
			Об=СсылкаНаДок.ПолучитьОбъект();
			Если Об.ДатаНачалаСбора=Дата(1,1,1) тогда
				Об.ДатаНачалаСбора=ТекущаяДата();
			КонецЕсли;
			Об.ОбменДанными.Получатели.АвтоЗаполнение = Ложь;
			Об.ОбменДанными.Получатели.Очистить();
			Об.Записать();		
		Исключение
		КонецПопытки;	
	КонецЕсли;
	
	Возврат ОбъектСписка;
КонецФункции
Функция OnCellScan(SN, UserName, Barcode, DocID)
КонецФункции
Функция OnNewPack(SN, UserName, DocID)
	УзелПО=НайтиУзел(SN);
	Если УзелПО=Неопределено тогда
		УзелПО = NewTSD(SN, UserName);
	КонецЕсли;
	
	попытка
		СсылкаНаДок=Справочники.ДатаМобайл_ДокументыТСД.ПолучитьСсылку(Новый УникальныйИдентификатор(Сред(DocID,5)));
	Исключение	
		ВызватьИсключениеВС("OnNewPack. Не нашли документ. ");
		Возврат ""; 
	КонецПопытки;	
	Шаблон=СсылкаНаДок.Шаблон;

	Если Шаблон.СоздаватьДокументыУпаковочныхЛистов тогда
		ДокументУпаковочногоЛиста=Документы.ДатаМобайл_УпаковочныйЛист.СоздатьДокумент();
		ДокументУпаковочногоЛиста.Дата = ТекущаяДата();
		ДокументУпаковочногоЛиста.Основание = СсылкаНаДок.ИсходныйДокумент;
		ДокументУпаковочногоЛиста.Ответственный = Справочники.Пользователи.НайтиПоНаименованию(UserName,Ложь);
		ДокументУпаковочногоЛиста.ТСД = УзелПО;
		ДокументУпаковочногоЛиста.Записать();
		
		Попытка
			Если Шаблон.ИспользоватьТиповыеУпаковочныеЛисты тогда
				ДокументУпаковочногоЛистаТиповой = Документы.УпаковочныйЛист.СоздатьДокумент();	
				ДокументУпаковочногоЛистаТиповой.Дата = ТекущаяДата();
				ДокументУпаковочногоЛистаТиповой.Вид = Перечисления.ВидыУпаковочныхЛистов.Исходящий;
				ДокументУпаковочногоЛистаТиповой.Код = ДокументУпаковочногоЛиста.Номер;
				ДокументУпаковочногоЛистаТиповой.Упаковал = ДокументУпаковочногоЛиста.Ответственный;
				ДокументУпаковочногоЛистаТиповой.СкладУпаковки = СсылкаНаДок.ИсходныйДокумент.Склад;
				ДокументУпаковочногоЛистаТиповой.Записать();	
				
				ДокументУпаковочногоЛиста.ТиповойУпаковочныйЛист = ДокументУпаковочногоЛистаТиповой.Ссылка;
				ДокументУпаковочногоЛиста.Записать();
			КонецЕсли;	
		Исключение
		КонецПопытки;
		
		Возврат "UPL"+ДокументУпаковочногоЛиста.Номер;
	Иначе		
		Узел=УзелПО.ПолучитьОбъект();
		Узел.ПоследнийПакЛист=Узел.ПоследнийПакЛист+1;
		Узел.Записать();		
		ГлавныйУзел = ПланыОбмена.ДатаМобайл_СписокТСД.НайтиПоКоду("").ПолучитьОбъект();
		ГлавныйУзел.ПоследнийПакЛист = ГлавныйУзел.ПоследнийПакЛист+1;
		ГлавныйУзел.Записать();		
		Возврат "UPL"+Формат(ГлавныйУзел.ПоследнийПакЛист, "ЧЦ=7; ЧВН=; ЧГ=");
	КонецЕсли;
	
КонецФункции
Функция OnArtEgaisScan(SN, UserName, ArtID, Barcode, PDFBarcode, DocOutID, Cell)
	
	
	ОбъектТовара=ФабрикаXDTO.Создать(ФабрикаXDTO.Тип("http://www.data-mobile.ru","DMArtEgais"));

	УзелПО=НайтиУзел(SN);
	Если УзелПО=Неопределено тогда
		NewTSD(SN, UserName);
		Возврат ОбъектТовара;
	КонецЕсли;
	
	Если стрДлина(PDFBarcode) = 68 Тогда 
		Если стрДлина(PDFBarcode)<>68 тогда
			Возврат ОбъектТовара;
		Иначе
			Алкокод=КодНоменклатурыЕГАИСПоPDF417(PDFBarcode);
		КонецЕсли;

		ЗапросЕГАИС = Новый Запрос(
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	ЕГАИС_Номенклатура.Ссылка КАК Ссылка,
		//|	ЕСТЬNULL(Товары.Номенклатура.Ссылка, ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)) КАК Ссылка,
		|	ЕСТЬNULL(ЕГАИС_Номенклатура.Наименование, """") КАК ArtName,
		|	ЕСТЬNULL(ЕГАИС_Номенклатура.Производитель.Наименование, """") КАК Manufacturer,
		|	ЕСТЬNULL(ЕГАИС_Номенклатура.Импортер.Наименование, """") КАК Importer,
		|	ЕСТЬNULL(ЕГАИС_Номенклатура.Объем, 0) КАК Capacity,
		|	ЕСТЬNULL(ЕГАИС_Номенклатура.Крепость, 0) КАК PercentAlco,
		|	ВЫБОР
		|		КОГДА НЕ ЕГАИС_Номенклатура.ВидПродукции.Код ЕСТЬ NULL
		|			ТОГДА ЕГАИС_Номенклатура.ВидПродукции.Код + "" ""+ЕГАИС_Номенклатура.ВидПродукции.Наименование
		|		ИНАЧЕ ЕСТЬNULL(ЕГАИС_Номенклатура.Ссылка.ВидПродукции.Код + "" "", """") + ЕСТЬNULL(ЕГАИС_Номенклатура.Ссылка.ВидПродукции.Наименование + "" "", """")
		|	КОНЕЦ КАК TypeAlco
		|ИЗ
		|	Справочник.КлассификаторАлкогольнойПродукцииЕГАИС КАК ЕГАИС_Номенклатура
		|ГДЕ
		|	ЕГАИС_Номенклатура.Код = &Код
		|	И НЕ ЕГАИС_Номенклатура.ПометкаУдаления");
		ЗапросЕГАИС.УстановитьПараметр("Код", Алкокод);

		ВыборкаЕГАИС = ЗапросЕГАИС.Выполнить().Выбрать();
		Пока ВыборкаЕГАИС.Следующий() Цикл
			ОбъектТовара.ARtID = "8"+"e-"+Строка(ВыборкаЕГАИС.ССылка.УникальныйИдентификатор());
			ЗаполнитьЗначенияСвойств(ОбъектТовара, ВыборкаЕгаис);
			ОбъектТовара.Barcode = ЧистаяСтрока(Алкокод);
			ОбъектТовара.ArtName = ЧистаяСтрока(Лев(ОбъектТовара.ArtName,100));
			ОбъектТовара.Manufacturer = ЧистаяСтрока(Лев(ОбъектТовара.Manufacturer,100)); 
			
			ОбъектТовара.DMIsCompared = ТоварСопоставленОдинКОдному(ВыборкаЕГАИС.ССылка); 
			ОбъектТовара.DMBoxKF = 0; //количество единиц в коробе
			ОбъектТовара.DMIsNeedBlankA = Истина; //требуется ввод справки А по товару
			ОбъектТовара.DMIsNeedBlankB = Истина; //требуется ввод справки Б по товару
			ОбъектТовара.DMIsNeedDateBottling = Истина; //требуется ввод даты розлива по товару
		КонецЦикла;
					
		Возврат ОбъектТовара;
		
	ИначеЕсли стрДлина(PDFBarcode) = 150 Тогда
		МаркаСсылка = Справочники.ШтрихкодыУпаковокТоваров.НайтиПоРеквизиту("ЗначениеШтрихкода",PDFBarcode);
		ЗапросЕГАИС = Новый Запрос(
			"ВЫБРАТЬ ПЕРВЫЕ 1
			|	ЕГАИС_РегистрМарок.АлкогольнаяПродукция.Ссылка КАК Ссылка,
			//|	ЕСТЬNULL(Товары.Номенклатура.Ссылка, ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)) КАК Ссылка,
			|	ЕСТЬNULL(ЕГАИС_РегистрМарок.АлкогольнаяПродукция.Наименование, """") КАК ArtName,
			|	ЕСТЬNULL(ЕГАИС_РегистрМарок.АлкогольнаяПродукция.Производитель.Наименование, """") КАК Manufacturer,
			|	ЕСТЬNULL(ЕГАИС_РегистрМарок.АлкогольнаяПродукция.Импортер.Наименование, """") КАК Importer,
			|	ЕСТЬNULL(ЕГАИС_РегистрМарок.АлкогольнаяПродукция.Объем, 0) КАК Capacity,
			|	ЕСТЬNULL(ЕГАИС_РегистрМарок.АлкогольнаяПродукция.Крепость, 0) КАК PercentAlco,
			|	ВЫБОР
			|		КОГДА НЕ ЕГАИС_РегистрМарок.АлкогольнаяПродукция.ВидПродукции.Код ЕСТЬ NULL
			|			ТОГДА ЕГАИС_РегистрМарок.АлкогольнаяПродукция.ВидПродукции.Код + "" ""+ЕГАИС_РегистрМарок.АлкогольнаяПродукция.ВидПродукции.Наименование
			|		ИНАЧЕ ЕСТЬNULL(ЕГАИС_РегистрМарок.АлкогольнаяПродукция.Ссылка.ВидПродукции.Код + "" "", """") + ЕСТЬNULL(ЕГАИС_РегистрМарок.АлкогольнаяПродукция.Ссылка.ВидПродукции.Наименование + "" "", """")
			|	КОНЕЦ КАК TypeAlco
			|ИЗ
			|	РегистрСведений.АкцизныеМаркиЕГАИС КАК ЕГАИС_РегистрМарок
			|ГДЕ
			|	ЕГАИС_РегистрМарок.АкцизнаяМарка = &ЕГАИС_Код
			|	И НЕ ЕГАИС_РегистрМарок.АлкогольнаяПродукция.ПометкаУдаления");
		ЗапросЕГАИС.УстановитьПараметр("ЕГАИС_Код", МаркаСсылка);

		ВыборкаЕГАИС = ЗапросЕГАИС.Выполнить().Выбрать();
		Пока ВыборкаЕГАИС.Следующий() Цикл
			ОбъектТовара.ARtID = "8"+"e-"+Строка(ВыборкаЕГАИС.Ссылка.УникальныйИдентификатор());
			ЗаполнитьЗначенияСвойств(ОбъектТовара, ВыборкаЕгаис);
			ОбъектТовара.Barcode = ВыборкаЕГАИС.Ссылка.Код;
			ОбъектТовара.ArtName = ЧистаяСтрока(Лев(ОбъектТовара.ArtName,100));
			ОбъектТовара.Manufacturer = ЧистаяСтрока(Лев(ОбъектТовара.Manufacturer,100)); 
			
			ОбъектТовара.DMIsCompared = ТоварСопоставленОдинКОдному(ВыборкаЕГАИС.Ссылка); 
			ОбъектТовара.DMBoxKF = 0; //количество единиц в коробе
			ОбъектТовара.DMIsNeedBlankA = Истина; //требуется ввод справки А по товару
			ОбъектТовара.DMIsNeedBlankB = Истина; //требуется ввод справки Б по товару
			ОбъектТовара.DMIsNeedDateBottling = Истина; //требуется ввод даты розлива по товару
		КонецЦикла;
					
		Возврат ОбъектТовара;
	Иначе
		Возврат ОбъектТовара;
	КонецЕсли;

КонецФункции
Функция КодНоменклатурыЕГАИСПоPDF417(PDFBarcode)
	
	Сч = 0;
	Значение=СокрЛП(PDFBarcode);
		
	Если Сред(Значение, 4, 5) = "00000" Тогда
		Значение = Сред(Значение, 9, 11);
		Сч = 11;
	Иначе
		Значение = Сред(Значение, 8, 12);
		Сч = 12;
	КонецЕсли;

	Результат = 0;

	Для Поз = 1 По Сч Цикл

		Множитель = 1;
		
		Для СчМ = 1 По Сч - Поз Цикл   
			Множитель = Множитель * 36;
		КонецЦикла;

		Результат = Результат + (Найти("0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ", Сред(Значение, Поз, 1)) - 1) * Множитель;

	КонецЦикла;

	Возврат Формат(Результат, "ЧЦ=19; ЧВН=; ЧГ=0");
	
КонецФункции
Функция OnCellScanInsert(SN, UserName, DocOutID, CellBC, ArtID, Barcode)
	
	ОбъектЯчейки=ФабрикаXDTO.Создать(ФабрикаXDTO.Тип("http://www.data-mobile.ru","DMCell"));
	
	УзелПО=НайтиУзел(SN);
	Если УзелПО=Неопределено тогда
		УзелПО = NewTSD(SN, UserName);
	КонецЕсли;
	
	Если УзелПО.ВыгружатьВКодЯчейки=0 тогда
		ТекущаяЯчейка = Справочники.СкладскиеЯчейки.НайтиПоКоду(CellBC);
	Иначе
		ТекущаяЯчейка = ДатаМобайл_ОбщийМодуль.ПолучитьЯчейкуПоШтрихкоду(CellBC);
	КонецЕсли;	

	попытка
		СсылкаНаДок=Справочники.ДатаМобайл_ДокументыТСД.ПолучитьСсылку(Новый УникальныйИдентификатор(Сред(DocOutID,5)));
		НашлиЗадание = Истина;
	Исключение	
		НашлиЗадание = Ложь;
	КонецПопытки;	
	
	попытка
	Если НашлиЗадание Тогда
		Если НЕ СсылкаНаДок.Шаблон.УчитыватьЯчеекВЗаданииПриемка Тогда
		
		ЗапросЗадания = Новый Запрос();
		Если Лев(ArtID,3)="8U-" тогда
			лТовар=Справочники.Номенклатура.ПолучитьСсылку(Новый УникальныйИдентификатор(Сред(ArtID,4,36)));
			ИДХК=Сред(ArtID,40,36);
			Если ИДХК<>"00000000-0000-0000-0000-000000000000" тогда
				лХарактеристикаНоменклатуры=Справочники.ХарактеристикиНоменклатуры.ПолучитьСсылку(Новый УникальныйИдентификатор(ИДХК));
				СХарактеристикой = Истина;
			КонецЕсли;	
		Иначе 
			лТовар=Справочники.ДатаМобайл_НовыеТовары.ПолучитьСсылку(Новый УникальныйИдентификатор(Сред(ArtID,4)));
			лХарактеристикаНоменклатуры = Неопределено;
			СХарактеристикой = Ложь;
		КонецЕсли;	
		
		ЗапросЗадания.УстановитьПараметр("Номенклатура", лТовар);
		ЗапросЗадания.УстановитьПараметр("ХарактеристикаНоменклатуры", лХарактеристикаНоменклатуры);
		ЗапросЗадания.УстановитьПараметр("СХарактеристикой", СХарактеристикой);
		ЗапросЗадания.УстановитьПараметр("ИсходныйДокумент", СсылкаНаДок.ИсходныйДокумент);

		ЗапросЗадания.Текст = "ВЫБРАТЬ
		                      |	СУММА(ЕСТЬNULL(ЗАДАНИЕ.КоличествоУпаковок, 0)) КАК Количество
		                      |ИЗ
		                      |	Документ.ПриобретениеТоваровУслуг.Товары КАК ЗАДАНИЕ
		                      |ГДЕ
							  | Задание.ССылка = &ИсходныйДокумент
		                      |	И ЗАДАНИЕ.Номенклатура = &Номенклатура
		                      |	И ВЫБОР
		                      |			КОГДА &СХарактеристикой
		                      |				ТОГДА ЗАДАНИЕ.Характеристика = &ХарактеристикаНоменклатуры
		                      |			ИНАЧЕ ИСТИНА
		                      |		КОНЕЦ";
		ЗапросЗадания.Текст = СтрЗаменить(ЗапросЗадания.Текст, "ПриобретениеТоваровУслуг", СсылкаНаДок.Шаблон.ВидДокумента);							  
		ЗапросЗадания.Текст = СтрЗаменить(ЗапросЗадания.Текст, ".Товары", "."+СсылкаНаДок.Шаблон.ИмяТабличнойЧастиПриемка);							  
		
		ВыборкаЗадания = ЗапросЗадания.Выполнить().Выбрать();
		Пока ВыборкаЗадания.Следующий() Цикл
			ОбъектЯчейки.DMTaskQnt = ВыборкаЗадания.Количество;		
		КонецЦикла;
		
		КонецЕсли;
	КонецЕсли;
	Исключение	
	КонецПопытки;
	
	
	Если не ТекущаяЯчейка.Пустая() тогда
		ОбъектЯчейки.DMBarcode = CellBC;
		ОбъектЯчейки.DMCellName = ?(УзелПО.ВыгружатьВНаименованиеЯчейки=0,ЧистаяСтрока(ТекущаяЯчейка.Наименование), ТекущаяЯчейка.Код); 
	Иначе		
		ОбъектЯчейки.DMBarcode = CellBC;
		ОбъектЯчейки.DMCellName = CellBC; 
	КонецЕсли;	
	
	Возврат ОбъектЯчейки;

КонецФункции
Функция OnCellScanSelect(SN, UserName, DocOutID, CellBC, ArtID, Barcode)
	
	ОбъектЯчейки=ФабрикаXDTO.Создать(ФабрикаXDTO.Тип("http://www.data-mobile.ru","DMCell"));
	
	УзелПО=НайтиУзел(SN);
	Если УзелПО=Неопределено тогда
		УзелПО = NewTSD(SN, UserName);
	КонецЕсли;
	
	Если УзелПО.ВыгружатьВКодЯчейки=0 тогда
		ТекущаяЯчейка = Справочники.СкладскиеЯчейки.НайтиПоКоду(CellBC);
	Иначе
		ТекущаяЯчейка = ДатаМобайл_ОбщийМодуль.ПолучитьЯчейкуПоШтрихкоду(CellBC);
	КонецЕсли;	

	
		попытка
		СсылкаНаДок=Справочники.ДатаМобайл_ДокументыТСД.ПолучитьСсылку(Новый УникальныйИдентификатор(Сред(DocOutID,5)));
		НашлиЗадание = Истина;
	Исключение	
		НашлиЗадание = Ложь;
	КонецПопытки;	

	попытка	
	Если НашлиЗадание Тогда
		Если НЕ СсылкаНаДок.Шаблон.УчитыватьЯчеекВЗаданииПодбор Тогда
		
		ЗапросЗадания = Новый Запрос();
		Если Лев(ArtID,3)="8U-" тогда
			лТовар=Справочники.Номенклатура.ПолучитьСсылку(Новый УникальныйИдентификатор(Сред(ArtID,4,36)));
			ИДХК=Сред(ArtID,40,36);
			Если ИДХК<>"00000000-0000-0000-0000-000000000000" тогда
				лХарактеристикаНоменклатуры=Справочники.ХарактеристикиНоменклатуры.ПолучитьСсылку(Новый УникальныйИдентификатор(ИДХК));
				СХарактеристикой = Истина;
			КонецЕсли;	
		Иначе 
			лТовар=Справочники.ДатаМобайл_НовыеТовары.ПолучитьСсылку(Новый УникальныйИдентификатор(Сред(ArtID,4)));
			лХарактеристикаНоменклатуры = Неопределено;
			СХарактеристикой = Ложь;
		КонецЕсли;	
		
		ЗапросЗадания.УстановитьПараметр("Номенклатура", лТовар);
		ЗапросЗадания.УстановитьПараметр("ХарактеристикаНоменклатуры", лХарактеристикаНоменклатуры);
		ЗапросЗадания.УстановитьПараметр("СХарактеристикой", СХарактеристикой);
		ЗапросЗадания.УстановитьПараметр("ИсходныйДокумент", СсылкаНаДок.ИсходныйДокумент);
		ЗапросЗадания.Текст = "ВЫБРАТЬ
		                      |	СУММА(ЕСТЬNULL(ЗАДАНИЕ.КоличествоУпаковок, 0)) КАК Количество
		                      |ИЗ
		                      |	Документ.ПриобретениеТоваровУслуг.Товары КАК ЗАДАНИЕ
		                      |ГДЕ
							  | Задание.ССылка = &ИсходныйДокумент
		                      |	И ЗАДАНИЕ.Номенклатура = &Номенклатура
		                      |	И ВЫБОР
		                      |			КОГДА &СХарактеристикой
		                      |				ТОГДА ЗАДАНИЕ.Характеристика = &ХарактеристикаНоменклатуры
		                      |			ИНАЧЕ ИСТИНА
		                      |		КОНЕЦ";
		ЗапросЗадания.Текст = СтрЗаменить(ЗапросЗадания.Текст, "ПриобретениеТоваровУслуг", СсылкаНаДок.Шаблон.ВидДокумента);							  
		ЗапросЗадания.Текст = СтрЗаменить(ЗапросЗадания.Текст, ".Товары", "."+СсылкаНаДок.Шаблон.ИмяТабличнойЧастиПодбор);							  
		
		ВыборкаЗадания = ЗапросЗадания.Выполнить().Выбрать();
		Пока ВыборкаЗадания.Следующий() Цикл
			ОбъектЯчейки.DMTaskQnt = ВыборкаЗадания.Количество;		
		КонецЦикла;
		
		КонецЕсли;
	КонецЕсли;
	Исключение	
	КонецПопытки;

	
	Если не ТекущаяЯчейка.Пустая() тогда
		ОбъектЯчейки.DMBarcode = CellBC;
		ОбъектЯчейки.DMCellName = ?(УзелПО.ВыгружатьВНаименованиеЯчейки=0,ЧистаяСтрока(ТекущаяЯчейка.Наименование), ТекущаяЯчейка.Код); 
	Иначе		
		ОбъектЯчейки.DMBarcode = CellBC;
		ОбъектЯчейки.DMCellName = CellBC; 
	КонецЕсли;	
	
	Возврат ОбъектЯчейки;

	
КонецФункции
Функция OnPalletScan(SN, UserName, Barcode, DocOutID, Cell) 
          
    ОбъектСписка=ФабрикаXDTO.Создать(ФабрикаXDTO.Тип("http://www.data-mobile.ru","DMArtQueryInfoUPL")); 
	 
	УзелПО=НайтиУзел(SN);
	Если УзелПО=Неопределено тогда
		УзелПО = NewTSD(SN, UserName);
	КонецЕсли;
	
	попытка
		СсылкаНаДок=Справочники.ДатаМобайл_ДокументыТСД.ПолучитьСсылку(Новый УникальныйИдентификатор(Сред(DocOutID,5)));
	Исключение	
		ВызватьИсключениеВС("OnPalletScan. Не нашли документ. ");
		Возврат ОбъектСписка;
	КонецПопытки;
	
	Если ссылканадок.ПолучитьОбъект()=неопределено тогда
		ВызватьИсключениеВС("OnPalletScan. Не нашли документ. ");
		Возврат ОбъектСписка;
	КонецЕсли;	
	
	Если Не СсылкаНаДок.ТСД.Пустая() тогда
		Если СсылкаНаДок.ТСД<>УзелПО тогда
			ВызватьИсключениеВС("OnPalletScan. Чужой документ. ");
			Возврат ОбъектСписка;
		КонецЕсли;	
	КонецЕсли;	
	
	Если СсылкаНаДок.ДатаЗавершенияСбора<>Дата(1,1,1) тогда
		ВызватьИсключениеВС("OnPalletScan. Закрытый документ. ");
		Возврат ОбъектСписка;
	КонецЕсли;
	
	Шаблон=СсылкаНаДок.Шаблон;		

	 Запрос = Новый Запрос; 	 
     Запрос.Текст = "ВЫБРАТЬ 
                    |     ДатаМобайл_УпаковочныйЛистТовары.Штрихкод, 
                    |     ДатаМобайл_УпаковочныйЛистТовары.Номенклатура,
					|     ДатаМобайл_УпаковочныйЛистТовары.Серия,
                    |     СУММА(ДатаМобайл_УпаковочныйЛистТовары.КоличествоУпаковок) КАК Количество 
                    |ИЗ 
                    |     Документ.ДатаМобайл_УпаковочныйЛист.Товары КАК ДатаМобайл_УпаковочныйЛистТовары 
                    |ГДЕ 
                    |     ДатаМобайл_УпаковочныйЛистТовары.Количество > 0 
                    |     И ДатаМобайл_УпаковочныйЛистТовары.Ссылка.Номер = &КодУпакЛиста 
                    | 
                    |СГРУППИРОВАТЬ ПО 
                    |     ДатаМобайл_УпаковочныйЛистТовары.Номенклатура, 
                    |     ДатаМобайл_УпаковочныйЛистТовары.Штрихкод,
					|     ДатаМобайл_УпаковочныйЛистТовары.Серия, 
                    |     ДатаМобайл_УпаковочныйЛистТовары.НомерСтроки
                    | 
                    |УПОРЯДОЧИТЬ ПО 
                    |     ДатаМобайл_УпаковочныйЛистТовары.НомерСтроки"; 
      
     Если Лев(Barcode,3) = "UPL" тогда 
           КодУпакЛиста = Прав(Barcode,СтрДлина(Barcode)-3); 
     Иначе     
          КодУпакЛиста = Barcode; 
     КонецЕсли; 
      
     Запрос.УстановитьПараметр("КодУпакЛиста", КодУпакЛиста); 
                        
     Рез = Запрос.Выполнить().Выгрузить(); 
      
     Для Каждого СтрокаДока ИЗ Рез Цикл 
          
          ОбъектТовара = ФабрикаXDTO.Создать(ФабрикаXDTO.Тип("http://www.data-mobile.ru","DMArtQueryItemUPL")); 
          ОбъектТовара.DMArt = ФабрикаXDTO.Создать(ФабрикаXDTO.Тип("http://www.data-mobile.ru","DMArt")); 
          ОбъектТовара.DMBarcode = ФабрикаXDTO.Создать(ФабрикаXDTO.Тип("http://www.data-mobile.ru","DMBarcode")); 

          ОбъектТовара.DMArt.DMArtName=ЧистаяСтрока(СтрокаДока.Номенклатура.Наименование); 
          ОбъектТовара.DMQty = СтрокаДока.Количество;   
          ОбъектТовара.DMBarcode.DMBarcode = ЧистаяСтрока(СтрокаДока.ШтрихКод);
		  
		  Если Шаблон.СерияПоДате тогда //04.08.18
			ОбъектТовара.DMSN = Формат(СтрокаДока.Серия.ГоденДо,"ДФ=dd.MM.yy");  
		  Иначе	  
          	ОбъектТовара.DMSN = СтрокаДока.Серия.Номер;
		  КонецЕсли;
		  
          ОбъектСписка.DMArtQueryItemUPL.Добавить(ОбъектТовара); 
 


	  КонецЦикла;
	  
	  
	  Возврат  ОбъектСписка;
КонецФункции
Функция OnEgaisPalletScan(SN, UserName, Barcode, DocOutID, Cell)
	
	ОбъектСписка=ФабрикаXDTO.Создать(ФабрикаXDTO.Тип("http://www.data-mobile.ru","DMArtQueryInfoUPL"));
	УзелПО=НайтиУзел(SN);
	Если УзелПО=Неопределено тогда
		NewTSD(SN, UserName);
		Возврат ОбъектСписка;
	КонецЕсли;	
	
	попытка
		СсылкаНаДок=Справочники.ДатаМобайл_ДокументыТСД.ПолучитьСсылку(Новый УникальныйИдентификатор(Сред(DocOutID,5)));
	Исключение	
		ВызватьИсключениеВС("OnEgaisPalletScan. Не нашли документ. ");
		Возврат ОбъектСписка;
	КонецПопытки;
	
	Шаблон = СсылкаНаДок.Шаблон;	
	ШаблонЕГАИС = Шаблон.ЕГАИС;	
		
	//во входящей ттн упаковки смотрим в самом доке	
	Если ШаблонЕГАИС и Шаблон.ВерсияЕГАИС = 1 и Шаблон.ВидДокумента = "ТТНВходящаяЕГАИС" Тогда
		
		ТЗМарок = ДатаМобайл_ОбщийМодуль.ПолучитьМаркиВходящейТТН_ЕГАИС(СсылкаНаДок.ИсходныйДокумент);
		
		//поиск палет
		СтруктураПоискаМарок = Новый Структура("Палета",Barcode);
		СтрокиПоискаМарок = ТЗМарок.НайтиСтроки(СтруктураПоискаМарок);	
		Для Каждого СтрокаДока ИЗ СтрокиПоискаМарок Цикл
			ОбъектТовара=ФабрикаXDTO.Создать(ФабрикаXDTO.Тип("http://www.data-mobile.ru","DMArtQueryItemUPL"));
			ОбъектТовара.DMArt = ФабрикаXDTO.Создать(ФабрикаXDTO.Тип("http://www.data-mobile.ru","DMArt"));
			ОбъектТовара.DMBarcode = ФабрикаXDTO.Создать(ФабрикаXDTO.Тип("http://www.data-mobile.ru","DMBarcode"));
			ОбъектТовара.DMArt.DMArtName=ЧистаяСтрока(СтрокаДока.АлкогольнаяПродукция.Наименование);
			ОбъектТовара.DMQty = 1;  
			ОбъектТовара.DMBarcode.DMBarcode = "";
			ОбъектТовара.DMPDFBarcode = СтрокаДока.Марка;		 
			ОбъектСписка.DMArtQueryItemUPL.Добавить(ОбъектТовара);
		КонецЦикла;

		//поиск коробов
		СтруктураПоискаМарок = Новый Структура("Короб",Barcode);
		СтрокиПоискаМарок = ТЗМарок.НайтиСтроки(СтруктураПоискаМарок);	
		Для Каждого СтрокаДока ИЗ СтрокиПоискаМарок Цикл
			ОбъектТовара=ФабрикаXDTO.Создать(ФабрикаXDTO.Тип("http://www.data-mobile.ru","DMArtQueryItemUPL"));
			ОбъектТовара.DMArt = ФабрикаXDTO.Создать(ФабрикаXDTO.Тип("http://www.data-mobile.ru","DMArt"));
			ОбъектТовара.DMBarcode = ФабрикаXDTO.Создать(ФабрикаXDTO.Тип("http://www.data-mobile.ru","DMBarcode"));
			ОбъектТовара.DMArt.DMArtName=ЧистаяСтрока(СтрокаДока.АлкогольнаяПродукция.Наименование);
			ОбъектТовара.DMQty = 1;  
			ОбъектТовара.DMBarcode.DMBarcode = "";
			ОбъектТовара.DMPDFBarcode = СтрокаДока.Марка;		 
			ОбъектСписка.DMArtQueryItemUPL.Добавить(ОбъектТовара);
		КонецЦикла;
	
	Иначе		
	КонецЕсли;
	
	Возврат ОбъектСписка;
КонецФункции
Функция OnDocScan(SN, UserName, Barcode)
	
	ОбъектСписка=ФабрикаXDTO.Создать(ФабрикаXDTO.Тип("http://www.data-mobile.ru","DMDocList"));
	Возврат ОбъектСписка;

	
КонецФункции
//////////////////////////////////////////////////////////////////////////////
Функция ПолучитьСтруктуруСтрокиДокумента (ИмяТаблицы,УзелПО,СсылкаНаДок,СтрокаДокумента,UserName)
	СтруктураСтроки = Новый Структура;
	СтруктураСтроки.Вставить("ДокументТСД", СсылкаНаДок);
	СтруктураСтроки.Вставить("ИмяТаблицы", ИмяТаблицы);	
	СтруктураСтроки.Вставить("ИдентификаторСтроки", Число(СтрокаДокумента.DMRowID));
	СтруктураСтроки.Вставить("Штрихкод",СтрокаДокумента.DMBarcode);
	СтруктураСтроки.Вставить("СерийныйНомер", СтрокаДокумента.DMSN);	
	СтруктураСтроки.Вставить("Уникальность", Новый УникальныйИдентификатор());	
	СтруктураСтроки.Вставить("Ячейка", СтрокаДокумента.DMCell);
	СтруктураСтроки.Вставить("КодТовара", СтрокаДокумента.DMArtID);
	СтруктураСтроки.Вставить("УпаковочныйЛист", СтрокаДокумента.DMPackID);
	СтруктураСтроки.Вставить("НазваниеТовара", СтрокаДокумента.DMArtName);
	СтруктураСтроки.Вставить("Количество", СтрокаДокумента.DMQuant);
	СтруктураСтроки.Вставить("Пользователь", UserName);
	СтруктураСтроки.Вставить("ТСД", УзелПО);
	СтруктураСтроки.Вставить("Дата", СтрокаДокумента.DMDate);	
	ТекущаяЯчейкаСсылка = ?(УзелПО.ВыгружатьВКодЯчейки=0,Справочники.СкладскиеЯчейки.НайтиПоКоду(СтрокаДокумента.DMCell), ДатаМобайл_ОбщийМодуль.ПолучитьЯчейкуПоШтрихкоду(СтрокаДокумента.DMCell));
	СтруктураСтроки.Вставить("ЯчейкаСсылка", ТекущаяЯчейкаСсылка);
	СтруктураСтроки.Вставить("Номенклатура", Справочники.Номенклатура.ПустаяСсылка());
	СтруктураСтроки.Вставить("ХарактеристикаНоменклатуры", Справочники.ХарактеристикиНоменклатуры.ПустаяСсылка());
	Попытка
		Если Лев(СтрокаДокумента.DMArtID,3)="8U-" тогда
			СтруктураСтроки.Номенклатура=Справочники.Номенклатура.ПолучитьСсылку(Новый УникальныйИдентификатор(Сред(СтрокаДокумента.DMArtID,4,36)));
			ИДХК=Сред(СтрокаДокумента.DMArtID,40,36);
			Если ИДХК<>"00000000-0000-0000-0000-000000000000" тогда
				СтруктураСтроки.ХарактеристикаНоменклатуры=Справочники.ХарактеристикиНоменклатуры.ПолучитьСсылку(Новый УникальныйИдентификатор(ИДХК));
			КонецЕсли;	
		КонецЕсли;	
	Исключение	
	КонецПопытки;
	СтруктураСтроки.Вставить("ЕдиницаИзмерения", Справочники.УпаковкиЕдиницыИзмерения.ПустаяСсылка());
	УстановитьЕдиницу(СтруктураСтроки);
	
	Если СсылкаНаДок.Шаблон.ЕГАИС Тогда
		СтруктураСтроки.Вставить("КодТовара", СтрокаДокумента.DMArtEgaisID);
		СтруктураСтроки.Вставить("НоменклатураЕГАИС", Справочники.КлассификаторАлкогольнойПродукцииЕГАИС.ПустаяСсылка());
		Попытка
			СтруктураСтроки.НоменклатураЕГАИС=Справочники.КлассификаторАлкогольнойПродукцииЕГАИС.ПолучитьСсылку(Новый УникальныйИдентификатор(Сред(СтрокаДокумента.DMArtEgaisID,4,36)));
		Исключение
			СтруктураСтроки.НоменклатураЕГАИС=Справочники.КлассификаторАлкогольнойПродукцииЕГАИС.НайтиПоКоду(СокрЛП(СтрокаДокумента.DMDecodedPDFBarcode));
		КонецПопытки;
		СтруктураСтроки.Вставить("PDF", СтрокаДокумента.DMDecodedPDFBarcode);		
			
		Если СтруктураСтроки.Номенклатура.Пустая() И НЕ СтруктураСтроки.НоменклатураЕГАИС.Пустая() тогда
			СтруктураСтроки.Номенклатура = ДатаМобайл_ОбщийМодуль.ПолучитьНоменклатуруПоЕГАИС(СтруктураСтроки.НоменклатураЕГАИС);
		КонецЕсли;
		
		Если СтруктураСтроки.НоменклатураЕГАИС.Пустая() И НЕ СтруктураСтроки.Номенклатура.Пустая() тогда
			СтруктураСтроки.НоменклатураЕГАИС = ДатаМобайл_ОбщийМодуль.ПолучитьЕГАИСПоНоменклатуре(СтруктураСтроки.Номенклатура);
		КонецЕсли;
		
		
		Если СтрокаДокумента.DMDateBottling <> "" И СтрокаДокумента.DMDateBottling <> "1/1/00 12:00:00 AM" И СтрокаДокумента.DMDateBottling <> "01.01.00 12:00:00 AM" И СтрокаДокумента.DMDateBottling <> "010100" Тогда    			
			ДатаРозливаГод = Строка(Строка("20")+Строка(Сред(СтрокаДокумента.DMDateBottling,5,2)));
			ДатаРозливаМесяц = Сред(СтрокаДокумента.DMDateBottling,3,2);
			ДатаРозливаДень = ЛЕВ(СтрокаДокумента.DMDateBottling,2);
			ДатаРозлива = Дата(Число(ДатаРозливаГод), Число(ДатаРозливаМесяц), Число(ДатаРозливаДень));
			СтруктураСтроки.Вставить("ЕгаисДатаРозлива", ДатаРозлива);
		КонецЕсли; 
		СтруктураСтроки.Вставить("ЕгаисМарка", ЧистаяСтрока(СтрокаДокумента.DMDataMatrixBarcode));
		СтруктураСтроки.Вставить("ЕгаисПолныйКод", ЧистаяСтрока(СтрокаДокумента.DMPDFBarcode));
	КонецЕсли;

	СтруктураСтроки.Вставить("СерияСсылка", Справочники.СерииНоменклатуры.ПустаяСсылка());	
	Попытка
		Если СтрокаДокумента.DMSN<>"" Тогда
			
			СтрокаСерии = СтрокаДокумента.DMSN;
			ДатаСерии = Дата(1,1,1);
			
			Если Найти(СтрокаСерии,"[")>0 тогда //серии GS1-128 //[10]12345678[11]040818		
				СтрокиGS1 = СтрЗаменить(СтрокаСерии,"[",Символы.ПС);			
				СтрокаGS1 = СтрПолучитьСтроку(СтрокиGS1,2); //По-умолчанию одна строка для определения серии
				
				СтрокаСерии = Сред(СтрокаGS1,4);
			
				Если СсылкаНаДок.Шаблон.СерияПоДате Тогда //040818   			
					ДатаСерияГод = Строка(Строка("20")+Строка(Сред(СтрокаСерии,5,2)));
					ДатаСерияМесяц = Сред(СтрокаСерии,3,2);
					ДатаСерияДень = Лев(СтрокаСерии,2);
					ДатаСерии= Дата(Число(ДатаСерияГод), Число(ДатаСерияМесяц), Число(ДатаСерияДень));
				КонецЕсли; 
				
			Иначе
				Если СсылкаНаДок.Шаблон.СерияПоДате Тогда //04.08.18 			
					ДатаСерияГод = Строка(Строка("20")+Строка(Сред(СтрокаСерии,7,2)));
					ДатаСерияМесяц = Сред(СтрокаСерии,4,2);
					ДатаСерияДень = Лев(СтрокаСерии,2);
					ДатаСерии= Дата(Число(ДатаСерияГод), Число(ДатаСерияМесяц), Число(ДатаСерияДень));
				КонецЕсли; 		
			КонецЕсли;
						
			

			
			ТоварПоиска = СтруктураСтроки.Номенклатура;		
			Если НЕ ТоварПоиска.ВладелецСерий.Пустая() тогда
				ВидНоменклатурыПоиск = ТоварПоиска.ВладелецСерий;
			Иначе
				ВидНоменклатурыПоиск = ТоварПоиска.ВидНоменклатуры;
			КонецЕсли;

			ЗапросСерий = Новый Запрос;
			ЗапросСерий.Текст =  "ВЫБРАТЬ
			                     |	СерииНоменклатуры.Ссылка КАК Серия
			                     |ИЗ
			                     |	Справочник.СерииНоменклатуры КАК СерииНоменклатуры
			                     |ГДЕ
			                     |	(СерииНоменклатуры.Номер = &ШК ИЛИ СерииНоменклатуры.ГоденДо = &ГоденДо)
			                     |	И СерииНоменклатуры.ВидНоменклатуры = &ВидНоменклатурыПоиск";
			
			Если СсылкаНаДок.Шаблон.СерияПоДате тогда 
				ЗапросСерий.Текст = СтрЗаменить(ЗапросСерий.Текст,"СерииНоменклатуры.Номер = &ШК ИЛИ СерииНоменклатуры.ГоденДо = &ГоденДо","СерииНоменклатуры.ГоденДо = &ГоденДо");
				ЗапросСерий.УстановитьПараметр("ГоденДо",ДатаСерии);
			Иначе
				ЗапросСерий.Текст = СтрЗаменить(ЗапросСерий.Текст,"СерииНоменклатуры.Номер = &ШК ИЛИ СерииНоменклатуры.ГоденДо = &ГоденДо","СерииНоменклатуры.Номер = &ШК");
				ЗапросСерий.УстановитьПараметр("ШК",СтрокаСерии);
			КонецЕсли;	
			
			ЗапросСерий.УстановитьПараметр("ВидНоменклатурыПоиск",ВидНоменклатурыПоиск); 

			РезультатСерий = ЗапросСерий.Выполнить();
			Если РезультатСерий.Пустой() тогда
				Если СсылкаНаДок.Шаблон.СоздаватьСерииЕслиНеНайдены тогда
					НоваяСерия = Справочники.СерииНоменклатуры.СоздатьЭлемент();
					НоваяСерия.ВидНоменклатуры = ВидНоменклатурыПоиск;
					Если СсылкаНаДок.Шаблон.СерияПоДате Тогда
						НоваяСерия.ГоденДо = ДатаСерии;
					Иначе
						НоваяСерия.Номер = СтрокаСерии;
					КонецЕсли;
					НоваяСерия.Записать();
					СтруктураСтроки.СерияСсылка = НоваяСерия.Ссылка;
				КонецЕсли;	
			Иначе 
				ВыборкаСерий = РезультатСерий.Выбрать();
				Пока ВыборкаСерий.Следующий() цикл
				  СтруктураСтроки.СерияСсылка = ВыборкаСерий.Серия;
				  Прервать;
				КонецЦикла; 
			КонецЕсли;	
		КонецЕсли;
	Исключение	
	КонецПопытки;

	Возврат СтруктураСтроки;	
КонецФункции
Функция ПроверитьЗаписи (ИмяТаблицы,УзелПО,СсылкаНаДок,СтрокаДокумента,Объект=Неопределено)
	
	Шаблон=СсылкаНаДок.Шаблон;
	
		ЗапросСтрок = Новый Запрос;
		ЗапросСтрок.УстановитьПараметр("ТСД", УзелПО);
		ЗапросСтрок.УстановитьПараметр("ДокументТСД", СсылкаНаДок);
		ЗапросСтрок.УстановитьПараметр("ИдентификаторСтроки", Число(СтрокаДокумента.DMRowID));
		ЗапросСтрок.Текст = "ВЫБРАТЬ
		|	ИСТИНА КАК Выгружен
		|ИЗ
		|	Справочник.ДатаМобайл_ДокументыТСД.СобранныеДанныеПодбор КАК ДатаМобайл_СтрокиДокументов
		|ГДЕ
		|	ДатаМобайл_СтрокиДокументов.ТСД = &ТСД
		|	И ДатаМобайл_СтрокиДокументов.ссылка = &ДокументТСД
		|	И ДатаМобайл_СтрокиДокументов.ИдентификаторСтроки = &ИдентификаторСтроки
		|	И 1=1
		|	И ДатаМобайл_СтрокиДокументов.Количество > 0";
		
		Если СтрокаДокумента.DMQuant < 0 Тогда
			ЗапросСтрок.Текст = СтрЗаменить(ЗапросСтрок.Текст,"Количество > 0","Количество < 0");
		КонецЕсли;

		Если Шаблон.ГрупповаяРабота тогда
			ЗапросСтрок.Текст = СтрЗаменить(ЗапросСтрок.Текст,"Справочник.ДатаМобайл_ДокументыТСД.СобранныеДанныеПодбор","РегистрСведений.ДатаМобайл_СтрокиГрупповыхДокументов");
			ЗапросСтрок.Текст = СтрЗаменить(ЗапросСтрок.Текст,"ДатаМобайл_СтрокиДокументов.ссылка","ДатаМобайл_СтрокиДокументов.ДокументТСД");
			ЗапросСтрок.Текст = СтрЗаменить(ЗапросСтрок.Текст,"1=1","ДатаМобайл_СтрокиДокументов.ИмяТаблицы = &ИмяТаблицы");
			ЗапросСтрок.УстановитьПараметр("ИмяТаблицы", ИмяТаблицы);
		Иначе
			Если ИмяТаблицы = "Insert" Тогда
				ЗапросСтрок.Текст = СтрЗаменить(ЗапросСтрок.Текст,"Подбор","Приемка");
			КонецЕсли;
		КонецЕсли;
		
	
	Если НЕ ЗапросСтрок.Выполнить().Пустой() Тогда
		
		//ОБНОВЛЕНИЕ ЗНАЧЕНИЙ ВВОДИМЫХ ПОСЛЕ ЗАПИСИ СТРОКИ
		Если (СтрокаДокумента.DMChangedPrice>0 или СтрокаДокумента.DMPackID<>"") и Объект<>Неопределено Тогда
			Если Шаблон.ГрупповаяРабота тогда
			Иначе
				СтруктураПоиска = Новый Структура("ИдентификаторСтроки,ТСД", Число(СтрокаДокумента.DMRowID),УзелПО);
				Если ИмяТаблицы = "Insert" Тогда
					СтрокиПодбора = Объект.СобранныеДанныеПриемка.НайтиСтроки(СтруктураПоиска);
				Иначе	
					СтрокиПодбора = Объект.СобранныеДанныеПодбор.НайтиСтроки(СтруктураПоиска);
				КонецЕсли;	
				Если СтрокиПодбора.Количество() > 0 Тогда
					Для Каждого СтрокаПодбора ИЗ СтрокиПодбора Цикл
						СтрокаПодбора.НоваяЦена = СтрокаДокумента.DMChangedPrice;
						СтрокаПодбора.УпаковочныйЛист = СтрокаДокумента.DMPackID;
					КонецЦикла;
					Объект.Записать();
				КонецЕсли;
			КонецЕсли;	
		КонецЕсли;
		
		Возврат Истина;
	КонецЕсли;

	Возврат Ложь;
КонецФункции	
Функция ПроверитьПревышениеГрупповогоЗадания (ИмяТаблицы,УзелПО,СсылкаНаДок,СтрокаДокумента,СтруктураСтроки)
	
	Шаблон=СсылкаНаДок.Шаблон;

		ЗапросПревышения = Новый Запрос;
		ЗапросПревышения.Текст = "ВЫБРАТЬ
		|	ЕстьNull(СУММА(ЕстьNull(ТаблицаТоваровВДокументе.Количество,0)),0) КАК КоличествоЗадание,
		|	0 КАК КоличествоПодбор
		|ПОМЕСТИТЬ ВременныеДанные
		|ИЗ
		|	Документ.ПриходныйОрдерНаТовары.Товары КАК ТаблицаТоваровВДокументе
		|ГДЕ
		|	ТаблицаТоваровВДокументе.Ссылка = &ИсходныйДокумент 
		|	И ТаблицаТоваровВДокументе.Номенклатура = &Номенклатура
		|	И ТаблицаТоваровВДокументе.Характеристика = &Характеристика
		|
		|ОБЪЕДИНИТЬ
		|	ВЫБРАТЬ
		|	0,
		|   ЕстьNull(СУММА(ЕстьNull(ТаблицаТоваровВРегистре.Количество,0)),0)
		|ИЗ
		|	РегистрСведений.ДатаМобайл_СтрокиГрупповыхДокументов КАК ТаблицаТоваровВРегистре
		|ГДЕ
		|	ТаблицаТоваровВРегистре.ДокументТСД = &ДокументТСД
		|	И ТаблицаТоваровВРегистре.Номенклатура = &Номенклатура
		|	И ТаблицаТоваровВРегистре.ХарактеристикаНоменклатуры = &Характеристика
		|	И ТаблицаТоваровВРегистре.ИмяТаблицы = &ИмяТаблицы
		|	И НЕ ТаблицаТоваровВРегистре.ДляОбмена
		|;
		|ВЫБРАТЬ 
		|ЕстьNull(СУММА(ЕстьNull(ВременныеДанные.КоличествоЗадание,0)),0) КАК КоличествоЗадание,
		|ЕстьNull(СУММА(ЕстьNull(ВременныеДанные.КоличествоПодбор,0)),0)  КАК КоличествоПодбор
		|
		|ИЗ ВременныеДанные КАК ВременныеДанные";
		
		ЗапросПревышения.УстановитьПараметр("ДокументТСД",СсылкаНаДок);
		ЗапросПревышения.УстановитьПараметр("ИсходныйДокумент",СсылкаНаДок.ИсходныйДокумент);
		ЗапросПревышения.УстановитьПараметр("Номенклатура",СтруктураСтроки.Номенклатура);
		ЗапросПревышения.УстановитьПараметр("Характеристика",СтруктураСтроки.ХарактеристикаНоменклатуры);
		ЗапросПревышения.УстановитьПараметр("ИмяТаблицы",ИмяТаблицы);
		ЗапросПревышения.Текст=СтрЗаменить(ЗапросПревышения.Текст,".ПриходныйОрдерНаТовары.","."+Шаблон.ВидДокумента+".");
		Если ИмяТаблицы = "Select" тогда
			ЗапросПревышения.Текст=СтрЗаменить(ЗапросПревышения.Текст,".Товары КАК ","."+Шаблон.ИмяТабличнойЧастиПодбор+" КАК ");
		Иначе
			ЗапросПревышения.Текст=СтрЗаменить(ЗапросПревышения.Текст,".Товары КАК ","."+Шаблон.ИмяТабличнойЧастиПриемка+" КАК ");
		КонецЕсли;

		ВыборкаПревышения = ЗапросПревышения.Выполнить().Выбрать();
		Пока ВыборкаПревышения.Следующий() цикл
			Если ВыборкаПревышения.КоличествоПодбор + СтрокаДокумента.DMQuant > ВыборкаПревышения.КоличествоЗадание Тогда
				Возврат Истина;
			КонецЕсли;
			Прервать;
		КонецЦикла;	
		
		Возврат Ложь;	
КонецФункции	
Функция ReplaceDocRow(SN, UserName, DocOutID, DMDocRec)
	
	ОбъектСтроки=ФабрикаXDTO.Создать(ФабрикаXDTO.Тип("http://www.data-mobile.ru","DMDocRec"));
	
	Возврат ОбъектСтроки;
	
КонецФункции
Функция WriteDoc(SN, UserName, DocHead, DocRowsSelect,DocRowsInsert)
	УзелПО=НайтиУзел(SN);
	Если УзелПО=Неопределено тогда
		УзелПО = NewTSD(SN, UserName);
	КонецЕсли;
	
	попытка
		СсылкаНаДок=Справочники.ДатаМобайл_ДокументыТСД.ПолучитьСсылку(Новый УникальныйИдентификатор(Сред(DocHead.DMDocOutID,5)));
	Исключение	
		ВызватьИсключениеВС("WriteDoc. Не найден документ. ");
		Возврат Ложь;//документа нету
	КонецПопытки;
	
	Если СсылкаНаДок.ДатаНачалаСбора=Дата(1,1,1) Тогда 
		ДокОбъект = СсылкаНаДок.ПолучитьОбъект();
		
		Для Каждого СтрокаДокумента из DocRowsSelect.DMDocRow цикл  
			ДокОбъект.ДатаНачалаСбора = СтрокаДокумента.DMDate;
			ДокОбъект.Записать();
			Прервать;
		КонецЦикла;
		
	КонецЕсли;

	Если ссылканадок.ПолучитьОбъект()=неопределено тогда
		ВызватьИсключениеВС("WriteDoc. Не найден документ "+DocHead.DMDocOutID);
		Возврат Ложь;
	КонецЕсли;	
	Если Не СсылкаНаДок.ТСД.Пустая() тогда
		Если СсылкаНаДок.ТСД<>УзелПО тогда
			ВызватьИсключениеВС("WriteDoc. Чужой документ. ");
			Возврат Ложь;//не смогли
		КонецЕсли;	
	КонецЕсли;	
	Если СсылкаНаДок.ДатаПриемкиОператором<>Дата(1,1,1) тогда
		ВызватьИсключениеВС("WriteDoc. Закрытый документ. ");
		Возврат Ложь;
	КонецЕсли;	
	
	Шаблон=СсылкаНаДок.Шаблон;

	Если НЕ Шаблон.ГрупповаяРабота Тогда
		Попытка
			Объект=СсылкаНаДок.ПолучитьОбъект();
		Исключение
		КонецПопытки;
		
		Если Объект = неопределено тогда
			ВызватьИсключениеВС("WriteDoc. Не нашли документ. ");
			Возврат Ложь;
		КонецЕсли;
	Иначе
		Объект = Неопределено;
	КонецЕсли;	
	
		Для Каждого СтрокаДокумента из DocRowsSelect.DMDocRow цикл   
									
			//СТРУКТУРА СТРОКИ
			СтруктураСтроки = ПолучитьСтруктуруСтрокиДокумента("Select",УзелПО,СсылкаНаДок,СтрокаДокумента,UserName);
			
			//ПРОВЕРКА ДУБЛЕЙ
			Если ПроверитьЗаписи ("Select",УзелПО,СсылкаНаДок,СтрокаДокумента,Объект) тогда
				Продолжить;
			КонецЕсли;
					
			//ПРЕВЫШЕНИЕ ПРИ ГРУППОВОЙ РАБОТЕ
			Если Шаблон.ГрупповаяРабота И Шаблон.ПриПревышенииЗаданияПодбор = 2 Тогда	
				Если ПроверитьПревышениеГрупповогоЗадания("Select",УзелПО,СсылкаНаДок,СтрокаДокумента,СтруктураСтроки) тогда
					ВызватьИсключениеВС("OnWriteRec. Превышено задание по данной номенклатуре. ");
					Возврат Ложь;
				КонецЕсли;	
			КонецЕсли;

			//ЗАПИСЬ
			Если НЕ Шаблон.ГрупповаяРабота Тогда
				НоваяСтрока=Объект.СобранныеДанныеПодбор.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока,СтруктураСтроки);
			Иначе 
				ДатаМобайл_ОбщийМодуль.СоздатьЗаписиГрупповогоДокумента(СтруктураСтроки);
			КонецЕсли;
				//ЗАПИСЬ МАРОК
			Если Шаблон.ЕГАИС Тогда
				Если СтрокаДокумента.DMDecodedPDFBarcode <> "" Тогда
					Если НЕ МаркаСерияУжеЕсть(СтрокаДокумента.DMDecodedPDFBarcode, СсылкаНаДок, Ложь) Тогда
						МенеджерЗаписиМарки = РегистрыСведений.ДатаМобайл_МаркиДляПроверки.СоздатьМенеджерЗаписи();
						МенеджерЗаписиМарки.Марка = СокрЛП(СтрокаДокумента.DMPDFBarcode);
						МенеджерЗаписиМарки.ЗаданиеТСД = СсылкаНаДок;
						МенеджерЗаписиМарки.Статус = Перечисления.ДатаМобайл_СтатусыПроверкиМарок.ОжидаетОтправки;
						МенеджерЗаписиМарки.Серия = СокрЛП(СтрокаДокумента.DMDataMatrixBarcode);
						Попытка МенеджерЗаписиМарки.НомерТТН = Объект.ИсходныйДокумент.Номер; Исключение КонецПопытки;
						Попытка МенеджерЗаписиМарки.УТМ = Объект.ИсходныйДокумент.УТМ; Исключение КонецПопытки;
						МенеджерЗаписиМарки.Завершен = Истина;
						МенеджерЗаписиМарки.Записать(Истина);
					Иначе
						НаборЗаписиМарок = РегистрыСведений.ДатаМобайл_МаркиДляПроверки.СоздатьНаборЗаписей();
						ЭлементОтбораЗадание = НаборЗаписиМарок.Отбор.Найти("ЗаданиеТСД");
						ЭлементОтбораЗадание.Использование = Истина;
						ЭлементОтбораЗадание.Значение = СсылкаНаДок;
						ЭлементОтбораЗадание.ВидСравнения = ВидСравнения.Равно;
						ЭлементОтбораМарка = НаборЗаписиМарок.Отбор.Найти("Марка");
						ЭлементОтбораМарка.Использование = Истина;
						ЭлементОтбораМарка.Значение = СокрЛП(СтрокаДокумента.DMPDFBarcode);
						ЭлементОтбораСтатус = НаборЗаписиМарок.Отбор.Найти("Статус");
						ЭлементОтбораСтатус.Использование = Истина;
						ЭлементОтбораСтатус.Значение = Перечисления.ДатаМобайл_СтатусыПроверкиМарок.ОжидаетОтправки;
						НаборЗаписиМарок.Прочитать();
						Для Каждого СтрокаНабораЗаписи ИЗ НаборЗаписиМарок Цикл
							Попытка СтрокаНабораЗаписи.НомерТТН = Объект.ИсходныйДокумент.Номер; Исключение КонецПопытки;
							Попытка СтрокаНабораЗаписи.УТМ = Объект.ИсходныйДокумент.УТМ; Исключение КонецПопытки;
							СтрокаНабораЗаписи.Завершен = Истина;
						КонецЦикла;
						НаборЗаписиМарок.Записать(Истина);
					КонецЕсли;
				КонецЕсли;	
			КонецЕсли;

			
		КонецЦикла;	
		
		
		Для Каждого СтрокаДокумента из DocRowsInsert.DMDocRow цикл
		
			//СТРУКТУРА СТРОКИ
			СтруктураСтроки = ПолучитьСтруктуруСтрокиДокумента("Insert",УзелПО,СсылкаНаДок,СтрокаДокумента,UserName);
			
			//ПРОВЕРКА ДУБЛЕЙ
			Если ПроверитьЗаписи ("Insert",УзелПО,СсылкаНаДок,СтрокаДокумента,Объект) тогда
				Продолжить;
			КонецЕсли;
					
			//ПРЕВЫШЕНИЕ ПРИ ГРУППОВОЙ РАБОТЕ
			Если Шаблон.ГрупповаяРабота И Шаблон.ПриПревышенииЗаданияПодбор = 2 Тогда	
				Если ПроверитьПревышениеГрупповогоЗадания("Insert",УзелПО,СсылкаНаДок,СтрокаДокумента,СтруктураСтроки) тогда
					ВызватьИсключениеВС("OnWriteRec. Превышено задание по данной номенклатуре. ");
					Возврат Ложь;
				КонецЕсли;	
			КонецЕсли;
			
			//ЗАПИСЬ
			Если НЕ Шаблон.ГрупповаяРабота Тогда
				НоваяСтрока=Объект.СобранныеДанныеПриемка.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока,СтруктураСтроки);
			Иначе 
				ДатаМобайл_ОбщийМодуль.СоздатьЗаписиГрупповогоДокумента(СтруктураСтроки);
			КонецЕсли;

		КонецЦикла;	
		
		
	Если НЕ Шаблон.ГрупповаяРабота Тогда
		
		Объект.ДатаЗавершенияСбора=ТекущаяДата();
		Объект.ТСД=УзелПО;
		Объект.Номер=DocHead.DMNumber;
		Объект.Дата=DocHead.DMDate;
		Объект.Комментарий=DocHead.DMComment;
		Объект.ДатаИзмененияКлиента=DocHead.DMClientSelectDate;
		Если Объект.ДатаИзмененияКлиента<>Дата(1,1,1) тогда
			попытка
				Объект.Клиент=Справочники.Партнеры.ПолучитьСсылку(Новый УникальныйИдентификатор(Сред(DocHead.DMClient.DMClientID,4)));
			исключение
			конецпопытки;	
		КонецЕсли;
		Объект.ОбменДанными.Получатели.АвтоЗаполнение = Ложь;
		Объект.ОбменДанными.Получатели.Очистить();
		Попытка 		
			Объект.Записать();
		Исключение	
			ВызватьИсключениеВС("WriteDoc. Ошибка записи. "+ОписаниеОшибки());
			Возврат Ложь;//не смогли
		КонецПопытки;	
	Иначе
		ДатаЗавершенияПоТСД = ДатаМобайл_ОбщийМодуль.ПолучитьДатуГрупповогоДокумента(SN, СсылкаНаДок, "ДатаЗавершенияСбора");
		Если (ДатаЗавершенияПоТСД = Неопределено) ИЛИ (ДатаЗавершенияПоТСД = Дата(1,1,1)) Тогда
			ДатаМобайл_ОбщийМодуль.ОбновитьЗаписьТСДГрупповогоДокумента(SN,СсылкаНаДок,ТекущаяДата());	
		КонецЕсли;

		Если ДатаМобайл_ОбщийМодуль.ПроверитьЗавершенностьГрупповогоДокумента(СсылкаНаДок) Тогда
			Попытка
				Объект=СсылкаНаДок.ПолучитьОбъект();
				Объект.ДатаЗавершенияСбора=ТекущаяДата();
				Объект.ОбменДанными.Получатели.АвтоЗаполнение = Ложь;
				Объект.ОбменДанными.Получатели.Очистить();
				Объект.Записать();
			Исключение	
				ВызватьИсключениеВС("WriteDoc. Ошибка записи. "+ОписаниеОшибки());
				Возврат Ложь;//не смогли
			КонецПопытки;
		КонецЕсли;

	КонецЕсли;	
			
	Возврат Истина;
КонецФункции
Функция OnWriteRecSelect(SN,UserName,DocOutID,СтрокаДокумента)
	УзелПО=НайтиУзел(SN);
	Если УзелПО=Неопределено тогда
		УзелПО = NewTSD(SN, UserName);
	КонецЕсли;

	попытка
		СсылкаНаДок=Справочники.ДатаМобайл_ДокументыТСД.ПолучитьСсылку(Новый УникальныйИдентификатор(Сред(DocOutID,5)));
	Исключение	
		ВызватьИсключениеВС("OnWriteRec. Не найден документ. ");
		Возврат Ложь;
	КонецПопытки;
	
	Если Не СсылкаНаДок.ТСД.Пустая() тогда
		Если СсылкаНаДок.ТСД<>УзелПО тогда
			ВызватьИсключениеВС("OnWriteRec. Чужой документ. ");
			Возврат Ложь;
		КонецЕсли;	
	КонецЕсли;	
	Если СсылкаНаДок.ДатаЗавершенияСбора<>Дата(1,1,1) тогда
		Возврат Ложь;
	КонецЕсли;	
	
	Шаблон=СсылкаНаДок.Шаблон;
	
	//ЗАПИСЬ	
	Если НЕ Шаблон.ГрупповаяРабота Тогда
		//ОБЫЧНАЯ ЛОГИКА
		Попытка
			Объект=СсылкаНаДок.ПолучитьОбъект();
		Исключение
		КонецПопытки;
		
		Если Объект = неопределено тогда
			ВызватьИсключениеВС("OnWriteRec. Не нашли документ. ");
			Возврат Ложь;
		КонецЕсли;
	Иначе
		Объект = Неопределено;	
	КонецЕсли;
		
	//СТРУКТУРА СТРОКИ
	СтруктураСтроки = ПолучитьСтруктуруСтрокиДокумента("Select",УзелПО,СсылкаНаДок,СтрокаДокумента,UserName);
	
	//ПРОВЕРКА ДУБЛЕЙ
	Если ПроверитьЗаписи ("Select",УзелПО,СсылкаНаДок,СтрокаДокумента,Объект) тогда
		Возврат Истина;
	КонецЕсли;
			
	//ПРЕВЫШЕНИЕ ПРИ ГРУППОВОЙ РАБОТЕ
	Если Шаблон.ГрупповаяРабота И Шаблон.ПриПревышенииЗаданияПодбор = 2 Тогда	
		Если ПроверитьПревышениеГрупповогоЗадания("Select",УзелПО,СсылкаНаДок,СтрокаДокумента,СтруктураСтроки) тогда
			ВызватьИсключениеВС("OnWriteRec. Превышено задание по данной номенклатуре. ");
			Возврат Ложь;
		КонецЕсли;	
	КонецЕсли;

	//ЗАПИСЬ МАРОК
	Если Шаблон.ЕГАИС Тогда
		Если СтрокаДокумента.DMDecodedPDFBarcode <> "" Тогда
			Если НЕ МаркаСерияУжеЕсть(СтрокаДокумента.DMDecodedPDFBarcode, СсылкаНаДок, Ложь) Тогда
				МенеджерЗаписиМарки = РегистрыСведений.ДатаМобайл_МаркиДляПроверки.СоздатьМенеджерЗаписи();
				МенеджерЗаписиМарки.Марка = СокрЛП(СтрокаДокумента.DMPDFBarcode);
				МенеджерЗаписиМарки.ЗаданиеТСД = СсылкаНаДок;
				МенеджерЗаписиМарки.Статус = Перечисления.ДатаМобайл_СтатусыПроверкиМарок.ОжидаетОтправки;
				МенеджерЗаписиМарки.Серия = ЧистаяСтрока(СтрокаДокумента.DMDataMatrixBarcode);	
				Попытка МенеджерЗаписиМарки.НомерТТН = СсылкаНаДок.ИсходныйДокумент.Номер; Исключение КонецПопытки;
				Попытка МенеджерЗаписиМарки.УТМ = СсылкаНаДок.ИсходныйДокумент.УТМ; Исключение КонецПопытки;
				МенеджерЗаписиМарки.Записать(Истина);
			КонецЕсли;
		КонецЕсли;	
	КонецЕсли;
	
	//ЗАПИСЬ	
	Если НЕ Шаблон.ГрупповаяРабота Тогда
				
		Если Объект.ДатаНачалаСбора=Дата(1,1,1) тогда
			Объект.ДатаНачалаСбора=ТекущаяДата();
		КонецЕсли;
		
		Если Объект.ТСД.Пустая() тогда
			Объект.ТСД=УзелПО;
		КонецЕсли;

		НоваяСтрока=Объект.СобранныеДанныеПодбор.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока,СтруктураСтроки);
		
		Объект.ОбменДанными.Получатели.АвтоЗаполнение = Ложь;
		Объект.ОбменДанными.Получатели.Очистить();
		Объект.ОбменДанными.Получатели.Заполнить();
	    Объект.ОбменДанными.Получатели.Удалить(УзелПО);
		Объект.ОбменДанными.Загрузка=Истина;
		
		Попытка
			Объект.Записать();
		Исключение
			ВызватьИсключениеВС("OnWriteRec. Не смогли записать документ. ");
			Возврат Ложь;
		КонецПопытки;

	Иначе
		//ГРУППОВОЙ ДОКУМЕНТ
		ДатаМобайл_ОбщийМодуль.СоздатьЗаписиГрупповогоДокумента(СтруктураСтроки);
		
		ДатаСбораПоТСД = ДатаМобайл_ОбщийМодуль.ПолучитьДатуГрупповогоДокумента(SN, СсылкаНаДок, "ДатаНачалаСбора");	
		Если (ДатаСбораПоТСД = Неопределено) ИЛИ (ДатаСбораПоТСД = Дата(1,1,1))  Тогда	
			ДатаМобайл_ОбщийМодуль.СоздатьНачальнуюЗаписьТСДГрупповыхДокументов(SN, СсылкаНаДок, UserName);		
		КонецЕсли;

		Попытка
			Объект=СсылкаНаДок.ПолучитьОбъект();
			Если Объект.ДатаНачалаСбора=Дата(1,1,1) тогда
				Объект.ДатаНачалаСбора=ТекущаяДата();
			КонецЕсли;
			Объект.ОбменДанными.Получатели.АвтоЗаполнение = Ложь;
			Объект.ОбменДанными.Получатели.Очистить();
			Объект.Записать();		
		Исключение
		КонецПопытки;	
	КонецЕсли;	
		
	Возврат Истина;
КонецФункции
Функция OnWriteRecInsert(SN,UserName,DocOutID,СтрокаДокумента)
	УзелПО=НайтиУзел(SN);
	Если УзелПО=Неопределено тогда
		УзелПО = NewTSD(SN, UserName);
	КонецЕсли;
	
	попытка
		СсылкаНаДок=Справочники.ДатаМобайл_ДокументыТСД.ПолучитьСсылку(Новый УникальныйИдентификатор(Сред(DocOutID,5)));
	Исключение	
		ВызватьИсключениеВС("OnWriteRec. Не найден документ. ");
		Возврат Ложь;
	КонецПопытки;
	
	Если Не СсылкаНаДок.ТСД.Пустая() тогда
		Если СсылкаНаДок.ТСД<>УзелПО тогда
			ВызватьИсключениеВС("OnWriteRec. Чужой документ. ");
			Возврат Ложь;
		КонецЕсли;	
	КонецЕсли;	
	Если СсылкаНаДок.ДатаЗавершенияСбора<>Дата(1,1,1) тогда
		Возврат Ложь;
	КонецЕсли;	
	
	Шаблон=СсылкаНаДок.Шаблон;

	//ЗАПИСЬ	
	Если НЕ Шаблон.ГрупповаяРабота Тогда
		//ОБЫЧНАЯ ЛОГИКА
		Попытка
			Объект=СсылкаНаДок.ПолучитьОбъект();
		Исключение
		КонецПопытки;
		
		Если Объект = неопределено тогда
			ВызватьИсключениеВС("OnWriteRec. Не нашли документ. ");
			Возврат Ложь;
		КонецЕсли;
	Иначе
		Объект = Неопределено;	
	КонецЕсли;

	//СТРУКТУРА СТРОКИ
	СтруктураСтроки = ПолучитьСтруктуруСтрокиДокумента("Insert",УзелПО,СсылкаНаДок,СтрокаДокумента,UserName);
	
	//ПРОВЕРКА ДУБЛЕЙ
	Если ПроверитьЗаписи ("Insert",УзелПО,СсылкаНаДок,СтрокаДокумента,Объект) тогда
		Возврат Истина;
	КонецЕсли;
			
	//ПРЕВЫШЕНИЕ ПРИ ГРУППОВОЙ РАБОТЕ
	Если Шаблон.ГрупповаяРабота И Шаблон.ПриПревышенииЗаданияПодбор = 2 Тогда	
		Если ПроверитьПревышениеГрупповогоЗадания("Insert",УзелПО,СсылкаНаДок,СтрокаДокумента,СтруктураСтроки) тогда
			ВызватьИсключениеВС("OnWriteRec. Превышено задание по данной номенклатуре. ");
			Возврат Ложь;
		КонецЕсли;	
	КонецЕсли;

	//ЗАПИСЬ	
	Если НЕ Шаблон.ГрупповаяРабота Тогда
		//ОБЫЧНАЯ ЛОГИКА
		Попытка
			Объект=СсылкаНаДок.ПолучитьОбъект();
		Исключение
		КонецПопытки;
		
		Если Объект = неопределено тогда
			ВызватьИсключениеВС("OnWriteRec. Не нашли документ. ");
			Возврат Ложь;
		КонецЕсли;
		
		Если Объект.ДатаНачалаСбора=Дата(1,1,1) тогда
			Объект.ДатаНачалаСбора=ТекущаяДата();
		КонецЕсли;
		
		Если Объект.ТСД.Пустая() тогда
			Объект.ТСД=УзелПО;
		КонецЕсли;

		НоваяСтрока=Объект.СобранныеДанныеПриемка.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока,СтруктураСтроки);
		
		Объект.ОбменДанными.Получатели.АвтоЗаполнение = Ложь;
		Объект.ОбменДанными.Получатели.Очистить();
		Объект.ОбменДанными.Получатели.Заполнить();
	    Объект.ОбменДанными.Получатели.Удалить(УзелПО);
		Объект.ОбменДанными.Загрузка=Истина;
		
		Попытка
			Объект.Записать();
		Исключение
			ВызватьИсключениеВС("OnWriteRec. Не смогли записать документ. ");
			Возврат Ложь;
		КонецПопытки;

	Иначе
		//ГРУППОВОЙ ДОКУМЕНТ
		ДатаМобайл_ОбщийМодуль.СоздатьЗаписиГрупповогоДокумента(СтруктураСтроки);
		
		ДатаСбораПоТСД = ДатаМобайл_ОбщийМодуль.ПолучитьДатуГрупповогоДокумента(SN, СсылкаНаДок, "ДатаНачалаСбора");	
		Если (ДатаСбораПоТСД = Неопределено) ИЛИ (ДатаСбораПоТСД = Дата(1,1,1))  Тогда	
			ДатаМобайл_ОбщийМодуль.СоздатьНачальнуюЗаписьТСДГрупповыхДокументов(SN, СсылкаНаДок, UserName);		
		КонецЕсли;

		Попытка
			Объект=СсылкаНаДок.ПолучитьОбъект();
			Если Объект.ДатаНачалаСбора=Дата(1,1,1) тогда
				Объект.ДатаНачалаСбора=ТекущаяДата();
			КонецЕсли;
			Объект.ОбменДанными.Получатели.АвтоЗаполнение = Ложь;
			Объект.ОбменДанными.Получатели.Очистить();
			Объект.Записать();		
		Исключение
		КонецПопытки;	
	КонецЕсли;	
			
	Возврат Истина;
КонецФункции
Функция OnCommitAutoInsertOnSelect(SN, UserName, Barcode, DocOutID)
	УзелПО=НайтиУзел(SN);
	Если УзелПО=Неопределено тогда
		УзелПО = NewTSD(SN, UserName);
	КонецЕсли;
	
	попытка
		СсылкаНаДок=Справочники.ДатаМобайл_ДокументыТСД.ПолучитьСсылку(Новый УникальныйИдентификатор(Сред(DocOutID,5)));
	Исключение	
		ВызватьИсключениеВС("OnWriteRec. Не найден документ. ");
		Возврат Ложь;
	КонецПопытки;	
	Если ссылканадок.ПолучитьОбъект()=неопределено тогда
		ВызватьИсключениеВС("OnWriteRec. Не нашли документ. ");
		Возврат Ложь;
	КонецЕсли;	
	Если Не СсылкаНаДок.ТСД.Пустая() тогда
		Если СсылкаНаДок.ТСД<>УзелПО тогда
			ВызватьИсключениеВС("OnWriteRec. Чужой документ. ");
			Возврат Ложь;
		КонецЕсли;	
	КонецЕсли;	
	Если СсылкаНаДок.ДатаЗавершенияСбора<>Дата(1,1,1) тогда
		Возврат Ложь;
	КонецЕсли;	
	Об=СсылкаНаДок.ПолучитьОбъект();
	Если Об.ДатаНачалаСбора=Дата(1,1,1) тогда
		Об.ДатаНачалаСбора=ТекущаяДата();
	КонецЕсли;	
	Запрос=Новый Запрос("ВЫБРАТЬ
	                    |	ВложенныйЗапрос.ШтрихКод,
	                    |	ВложенныйЗапрос.СерийныйНомер,
	                    |	ВложенныйЗапрос.КодТовара,
	                    |	ВложенныйЗапрос.УпаковочныйЛист,
	                    |	СУММА(ВложенныйЗапрос.Собрано - ВложенныйЗапрос.Размещено) КАК Количество,
	                    |	ВложенныйЗапрос.НазваниеТовара
	                    |ИЗ
	                    |	(ВЫБРАТЬ
	                    |		ДатаМобайл_ДокументыТСДСобранныеДанныеПодбор.ШтрихКод КАК ШтрихКод,
	                    |		ДатаМобайл_ДокументыТСДСобранныеДанныеПодбор.СерийныйНомер КАК СерийныйНомер,
	                    |		ДатаМобайл_ДокументыТСДСобранныеДанныеПодбор.КодТовара КАК КодТовара,
	                    |		ДатаМобайл_ДокументыТСДСобранныеДанныеПодбор.УпаковочныйЛист КАК УпаковочныйЛист,
	                    |		ДатаМобайл_ДокументыТСДСобранныеДанныеПодбор.Количество КАК Собрано,
	                    |		0 КАК Размещено,
	                    |		ДатаМобайл_ДокументыТСДСобранныеДанныеПодбор.НазваниеТовара КАК НазваниеТовара
	                    |	ИЗ
	                    |		Справочник.ДатаМобайл_ДокументыТСД.СобранныеДанныеПодбор КАК ДатаМобайл_ДокументыТСДСобранныеДанныеПодбор
	                    |	ГДЕ
	                    |		ДатаМобайл_ДокументыТСДСобранныеДанныеПодбор.Ссылка = &Ссылка
	                    |	
	                    |	ОБЪЕДИНИТЬ ВСЕ
	                    |	
	                    |	ВЫБРАТЬ
	                    |		ДатаМобайл_ДокументыТСДСобранныеДанныеПриемка.ШтрихКод,
	                    |		ДатаМобайл_ДокументыТСДСобранныеДанныеПриемка.СерийныйНомер,
	                    |		ДатаМобайл_ДокументыТСДСобранныеДанныеПриемка.КодТовара,
	                    |		ДатаМобайл_ДокументыТСДСобранныеДанныеПриемка.УпаковочныйЛист,
	                    |		0,
	                    |		ДатаМобайл_ДокументыТСДСобранныеДанныеПриемка.Количество,
	                    |		ДатаМобайл_ДокументыТСДСобранныеДанныеПриемка.НазваниеТовара
	                    |	ИЗ
	                    |		Справочник.ДатаМобайл_ДокументыТСД.СобранныеДанныеПриемка КАК ДатаМобайл_ДокументыТСДСобранныеДанныеПриемка
	                    |	ГДЕ
	                    |		ДатаМобайл_ДокументыТСДСобранныеДанныеПриемка.Ссылка = &Ссылка) КАК ВложенныйЗапрос
	                    |
	                    |СГРУППИРОВАТЬ ПО
	                    |	ВложенныйЗапрос.ШтрихКод,
	                    |	ВложенныйЗапрос.СерийныйНомер,
	                    |	ВложенныйЗапрос.КодТовара,
	                    |	ВложенныйЗапрос.УпаковочныйЛист,
	                    |	ВложенныйЗапрос.НазваниеТовара
	                    |
	                    |ИМЕЮЩИЕ
	                    |	СУММА(ВложенныйЗапрос.Собрано - ВложенныйЗапрос.Размещено) > 0");
	Запрос.УстановитьПараметр("Ссылка",ссылканадок);
	Рез=Запрос.Выполнить().Выбрать();
	Пока Рез.Следующий() цикл
		НоваяСтрока=Об.СобранныеДанныеПриемка.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока,Рез);
		НоваяСтрока.Ячейка=Barcode;
		НоваяСтрока.ЯчейкаСсылка=Справочники.СкладскиеЯчейки.НайтиПоКоду(НоваяСтрока.Ячейка);
		НоваяСтрока.Пользователь=UserName;
		Попытка
			Если Лев(НоваяСтрока.КодТовара,3)="8U-" тогда
				НоваяСтрока.Номенклатура=Справочники.Номенклатура.ПолучитьСсылку(Новый УникальныйИдентификатор(Сред(НоваяСтрока.КодТовара,4,36)));
				ИДХК=Сред(НоваяСтрока.КодТовара,40,36);
				Если ИДХК<>"00000000-0000-0000-0000-000000000000" тогда
					НоваяСтрока.ХарактеристикаНоменклатуры=Справочники.ХарактеристикиНоменклатуры.ПолучитьСсылку(Новый УникальныйИдентификатор(ИДХК));
				КонецЕсли;	
			КонецЕсли;	
		Исключение	
		КонецПопытки;	
		УстановитьЕдиницу(НоваяСтрока);
	КонецЦикла;	
	Об.ТСД=УзелПО;
	Об.ОбменДанными.Получатели.АвтоЗаполнение = Ложь;
	Об.ОбменДанными.Получатели.Очистить();
	Если СсылкаНаДок.ТСД.Пустая() тогда
		Об.ОбменДанными.Получатели.Заполнить();
	КонецЕсли;	
	Об.ОбменДанными.Получатели.Удалить(УзелПО);
	Об.ОбменДанными.Загрузка=Истина;
	Попытка
		Об.Записать();
	Исключение	
		ВызватьИсключениеВС("OnWriteRec. Не смогли записать документ. ");
		Возврат Ложь;
	КонецПопытки;	
	Возврат Истина;
КонецФункции
//////////////////////////////////////////////////////////////////////////////
Функция DeleteDoc(SN, UserName, DocOutID)
	УзелПО=НайтиУзел(SN);
	Если УзелПО=Неопределено тогда
		УзелПО = NewTSD(SN, UserName);
	КонецЕсли;
	
	попытка
		СсылкаНаДок=Справочники.ДатаМобайл_ДокументыТСД.ПолучитьСсылку(Новый УникальныйИдентификатор(Сред(DocOutID,5)));
	Исключение	
		Возврат Истина;//документа и так нету
	КонецПопытки;	
	Если ссылканадок.ПолучитьОбъект()=неопределено тогда
		Возврат Истина;//документа и так нету
	КонецЕсли;	
	Если Не СсылкаНаДок.ТСД.Пустая() тогда
		Если СсылкаНаДок.ТСД<>УзелПО тогда
			ВызватьИсключениеВС("DeleteDoc. Чужой документ. ");
			Возврат Ложь; //не смогли
		КонецЕсли;	
	КонецЕсли;	
	Если СсылкаНаДок.ДатаЗавершения=Дата(1,1,1) тогда
		ВызватьИсключениеВС("DeleteDoc. Удалить можно только завершенный документ. ");
		Возврат Ложь;
	КонецЕслИ;	
	Возврат Истина;
КонецФункции
Функция ClearDoc(SN, UserName, DocOutID)
	УзелПО=НайтиУзел(SN);
	Если УзелПО=Неопределено тогда
		УзелПО = NewTSD(SN, UserName);
	КонецЕсли;
	
	попытка
		СсылкаНаДок=Справочники.ДатаМобайл_ДокументыТСД.ПолучитьСсылку(Новый УникальныйИдентификатор(Сред(DocOutID,5)));
	Исключение	
		Возврат Истина;//документа и так нету
	КонецПопытки;	
	Если СсылкаНаДок.Шаблон.ГрупповаяРабота Тогда
		ВызватьИсключениеВС("ClearDoc. Групповой документ не поддерживает очистку. ");
		Возврат Ложь;
	КонецЕсли;
	Если ссылканадок.ПолучитьОбъект()=неопределено тогда
		Возврат Истина;//документа и так нету
	КонецЕсли;	
	
	Если Не СсылкаНаДок.ТСД.Пустая() тогда
		Если СсылкаНаДок.ТСД<>УзелПО тогда
			ВызватьИсключениеВС("ClearDoc. Чужой документ. ");
			Возврат Ложь;
		КонецЕсли;	
	КонецЕсли;	

	Если СсылкаНаДок.ДатаЗавершенияСбора<>Дата(1,1,1) тогда
		ВызватьИсключениеВС("ClearDoc. Закрытый документ. ");
		Возврат Ложь;
	КонецЕслИ;	
	
	попытка
		объект=СсылкаНаДок.ПолучитьОбъект();
		Объект.ТСД="";
		Объект.ДатаНачалаСбора="";
		Объект.ДатаЗавершенияСбора="";
		Объект.СобранныеДанныеПодбор.Очистить();
		Объект.СобранныеДанныеПриемка.Очистить();
		Объект.ОбменДанными.Получатели.АвтоЗаполнение = Ложь;
		Объект.ОбменДанными.Получатели.Очистить();
		Объект.ОбменДанными.Получатели.Заполнить();
		Объект.ОбменДанными.Получатели.Удалить(УзелПО);
		Объект.Записать();
		
		//ДатаМобайл_ОбщийМодуль.ОчиститьЗаписиТСДГрупповогоДокумента(СсылкаНаДок, УзелПО);
		
	Исключение	
		ВызватьИсключениеВС("ClearDoc. Ошибка очистки. "+ОписаниеОшибки());
		Возврат Ложь;//не смогли
	КонецПопытки;	
	Возврат Истина;
КонецФункции
Функция ReopenDoc(SN, UserName, DocOutID)
	УзелПО=НайтиУзел(SN);
	Если УзелПО=Неопределено тогда
		УзелПО = NewTSD(SN, UserName);
	КонецЕсли;
	
	попытка
		СсылкаНаДок=Справочники.ДатаМобайл_ДокументыТСД.ПолучитьСсылку(Новый УникальныйИдентификатор(Сред(DocOutID,5)));
	Исключение	
		Возврат Истина;//документа и так нету
	КонецПопытки;	
	Если ссылканадок.ПолучитьОбъект()=неопределено тогда
		Возврат Истина;//документа и так нету
	КонецЕсли;	
	Если Не СсылкаНаДок.ТСД.Пустая() тогда
		Если СсылкаНаДок.ТСД<>УзелПО тогда
			ВызватьИсключениеВС("ReopenDoc. Чужой документ. ");
			Возврат Ложь;//не смогли
		КонецЕслИ;	
	КонецЕсли;	
	Если СсылкаНаДок.ДатаПриемкиОператором<>Дата(1,1,1) тогда
		ВызватьИсключениеВС("ReopenDoc. Закрытый документ. ");
		Возврат Ложь;//уже
	КонецЕслИ;	
	
	Если СсылкаНаДок.ДатаЗавершенияСбора=Дата(1,1,1) И СсылкаНаДок.Шаблон.ГрупповаяРабота тогда
		ДатаМобайл_ОбщийМодуль.ОбновитьЗаписьТСДГрупповогоДокумента(SN,СсылкаНаДок, Дата(1,1,1));
		Возврат Истина;//уже
	КонецЕслИ;
	
	попытка
		Объект=СсылкаНаДок.ПолучитьОбъект();
		
		Если Объект.ТСД.Пустая() И НЕ(СсылкаНаДок.Шаблон.ГрупповаяРабота) тогда
			Объект.ТСД=УзелПО;
		КонецЕсли;

		Объект.ДатаЗавершенияСбора="";
		Объект.ОбменДанными.Получатели.АвтоЗаполнение = Ложь;
		Объект.ОбменДанными.Получатели.Очистить();
		Если СсылкаНаДок.Шаблон.ГрупповаяРабота тогда
			Объект.ОбменДанными.Получатели.Заполнить();
		КонецЕсли;	
		Объект.ОбменДанными.Получатели.Удалить(УзелПО);
		Объект.Записать();
		
		ДатаМобайл_ОбщийМодуль.ОбновитьЗаписьТСДГрупповогоДокумента(SN,СсылкаНаДок, Дата(1,1,1));
		
	Исключение	
		Возврат Ложь;//не смогли
	КонецПопытки;	
	Возврат Истина;
КонецФункции
Функция CreateDoc(SN, UserName, DocOutID,TemplateID)
	ОбъектДока=ФабрикаXDTO.Создать(ФабрикаXDTO.Тип("http://www.data-mobile.ru","DMDocHead"));
	УзелПО=НайтиУзел(SN);
	Если УзелПО=Неопределено тогда
		УзелПО = NewTSD(SN, UserName);
	КонецЕсли;
	
	ОбъектШаблона=ФабрикаXDTO.Создать(ФабрикаXDTO.Тип("http://www.data-mobile.ru","DMTemplate"));
	Запрос=Новый Запрос("ВЫБРАТЬ
	                    |	ДатаМобайл_ШаблоныДокументов.Ссылка.Код КАК DMTemplateID,
	                    |	ДатаМобайл_ШаблоныДокументов.Ссылка.Наименование КАК DMTemplateName,
	                    |	ДатаМобайл_ШаблоныДокументов.Ссылка.ВсеШтрихкодыТовара КАК DMuseAllBarcode,
	                    |	ЛОЖЬ КАК DMEnableNew,
	                    |	ДатаМобайл_ШаблоныДокументов.Ссылка.ОбновлятьПриКаждомОткрытии КАК DMLoadRowsOnOpen,
	                    |	ДатаМобайл_ШаблоныДокументов.Ссылка.ОбновлятьТоварыСДокументом КАК DMLoadArtsWithRows,
	                    |	ДатаМобайл_ШаблоныДокументов.Ссылка.ЗапретитьРучноеИзменениеКлиента КАК DMDisableManualChangeClient,
	                    |	ДатаМобайл_ШаблоныДокументов.Ссылка.ЗапретитьИзменениеКлиентаКардРидером КАК DMDisableReaderChangeClient,
	                    |	ДатаМобайл_ШаблоныДокументов.Ссылка.КардРидер_Трек1 КАК DMreaderTrack1Use,
	                    |	ДатаМобайл_ШаблоныДокументов.Ссылка.КардРидер_Трек2 КАК DMreaderTrack2Use,
	                    |	ДатаМобайл_ШаблоныДокументов.Ссылка.КардРидер_Трек3 КАК DMreaderTrack3Use,
	                    |	ДатаМобайл_ШаблоныДокументов.Ссылка.ГенерацияПаклистаНаСервере КАК DMnewPackOnWS,
	                    |	ДатаМобайл_ШаблоныДокументов.Ссылка.ШтрихкодыТолькоПоШаблонам КАК DMuseBCTemplates,
	                    |	ДатаМобайл_ШаблоныДокументов.Ссылка.ИспользоватьПодбор КАК DMuse_Select,
	                    |	ДатаМобайл_ШаблоныДокументов.Ссылка.ИспользоватьПриемку КАК DMuse_Insert,
	                    |	ДатаМобайл_ШаблоныДокументов.Ссылка.ПриемкаПоПодбору КАК DMuseSelectLogAsInsertTask,
	                    |	ДатаМобайл_ШаблоныДокументов.Ссылка.ПриПриемкеЗапрашиватьТовар КАК DMuseArt_Insert,
	                    |	ДатаМобайл_ШаблоныДокументов.Ссылка.РазрешитьВыгрузкуНеполногоДокумента КАК DMonUploadIncorrectDoc,
	                    |	ДатаМобайл_ШаблоныДокументов.Ссылка.ПриСканированииТовараПодбор КАК DMonArtScan_Select,
	                    |	ДатаМобайл_ШаблоныДокументов.Ссылка.ПриСканированииТовараПриемка КАК DMonArtScan_Insert,
	                    |	ДатаМобайл_ШаблоныДокументов.Ссылка.ПриПревышенииЗаданияПодбор КАК DMonTaskQty_Select,
	                    |	ДатаМобайл_ШаблоныДокументов.Ссылка.ПриПревышенииЗаданияПриемка КАК DMonTaskQty_Insert,
	                    |	ДатаМобайл_ШаблоныДокументов.Ссылка.ПриПревышенииЛимитаПодбор КАК DMonLimitQty_Select,
	                    |	ДатаМобайл_ШаблоныДокументов.Ссылка.ПриПревышенииЛимитаПриемка КАК DMonLimitQty_Insert,
	                    |	ДатаМобайл_ШаблоныДокументов.Ссылка.ИспользованиеЯчеекПодбор КАК DMuseCell_Select,
	                    |	ДатаМобайл_ШаблоныДокументов.Ссылка.ИспользованиеЯчеекПриемка КАК DMuseCell_Insert,
	                    |	ДатаМобайл_ШаблоныДокументов.Ссылка.ИспользованиеУпаковочныхЛистовПодбор КАК DMusePack_Select,
	                    |	ДатаМобайл_ШаблоныДокументов.Ссылка.ИспользованиеУпаковочныхЛистовПриемка КАК DMusePack_Insert,
	                    |	ДатаМобайл_ШаблоныДокументов.Ссылка.УчитыватьЯчеекВЗаданииПодбор КАК DMuseCellOnTask_Select,
	                    |	ДатаМобайл_ШаблоныДокументов.Ссылка.УчитыватьЯчеекВЗаданииПриемка КАК DMuseCellOnTask_Insert,
	                    |	ДатаМобайл_ШаблоныДокументов.Ссылка.УчитыватьСерийниковВЗаданииПодбор КАК DMuseSNOnTask_Select,
	                    |	ДатаМобайл_ШаблоныДокументов.Ссылка.УчитыватьСерийниковВЗаданииПриемка КАК DMuseSNOnTask_Insert,
	                    |	ДатаМобайл_ШаблоныДокументов.Ссылка.РучнойВводКоличестваПодбор КАК DMquantEnable_Select,
	                    |	ДатаМобайл_ШаблоныДокументов.Ссылка.РучнойВводКоличестваПриемка КАК DMquantEnable_Insert,
	                    |	ДатаМобайл_ШаблоныДокументов.Ссылка.ПодтверждатьЭнтеромПодбор КАК DMenterToCommit_Select,
	                    |	ДатаМобайл_ШаблоныДокументов.Ссылка.ПодтверждатьЭнтеромПриемка КАК DMenterToCommit_Insert,
	                    |	ДатаМобайл_ШаблоныДокументов.Ссылка.ОтсылатьГотовуюЗаписьНаСерверПодбор КАК DMwriteRecordToWS_Select,
	                    |	ДатаМобайл_ШаблоныДокументов.Ссылка.ОтсылатьГотовуюЗаписьНаСерверПриемка КАК DMwriteRecordToWS_Insert,
	                    |	ДатаМобайл_ШаблоныДокументов.Ссылка.ПечатьЭтикеткиПриПриемке КАК DMPrintLabel_Insert,
	                    |	ДатаМобайл_ШаблоныДокументов.Ссылка.ПечатьЭтикеткиПриПодборе КАК DMPrintLabel_Select,
	                    |	ДатаМобайл_ШаблоныДокументов.Ссылка.ИспользованиеСерийниковПодбор КАК DMuseSN_Select,
	                    |	ДатаМобайл_ШаблоныДокументов.Ссылка.ИспользованиеСерийниковПриемка КАК DMuseSN_Insert,
						|	ДатаМобайл_ШаблоныДокументов.Ссылка.ПоштучноеПеремещение КАК DMoneArtReplaceMode,
	                    |	ДатаМобайл_ШаблоныДокументов.Ссылка.ПриСканированииНовогоТовара КАК DMonNewArt,
						|	ДатаМобайл_ШаблоныДокументов.Ссылка.УникальныеШтрихкодыНоменклатурыВДокументе КАК DMuniquebarcodedoc,
	                    |	ДатаМобайл_ШаблоныДокументов.Ссылка,
						|	ДатаМобайл_ШаблоныДокументов.Ссылка.ГрупповаяРабота КАК DMMultiDoc,
	                    |	ДатаМобайл_ШаблоныДокументов.Ссылка.ГрупповаяРаботаЗвуковоеОповещение КАК DMMultiDocSound,
	                    |	ДатаМобайл_ШаблоныДокументов.Ссылка.ГрупповаяРаботаИнтервалОпроса КАК DMMultiDocTimeout,
						|	ДатаМобайл_ШаблоныДокументов.Ссылка.ВыгрузкаЯчеекПодбор КАК DMEnterCell_Select,
	                    |	ДатаМобайл_ШаблоныДокументов.Ссылка.ВыгрузкаЯчеекПриемка КАК DMEnterCell_Insert,
						|	ДатаМобайл_ШаблоныДокументов.Ссылка.ЕГАИС КАК DMUseEgais,
						|	ДатаМобайл_ШаблоныДокументов.Ссылка.ЕГАИСИспользоватьДатуРозлива КАК DMUseDateBottling,
						|	ДатаМобайл_ШаблоныДокументов.Ссылка.ЕгаисИспользоватьМарку КАК DMUseDataMatrixBarcode,
						|	ДатаМобайл_ШаблоныДокументов.Ссылка.ЕГАИСРежимВВодаPDF417 КАК DMEnterPDF417Barcode,
						|	ДатаМобайл_ШаблоныДокументов.Ссылка.СопоставлениеЕГАИС КАК DMEgaisCompare,
						|	ДатаМобайл_ШаблоныДокументов.Ссылка.ЕГАИСИспользоватьСправкуА КАК DMUseBlankA,
						|	ДатаМобайл_ШаблоныДокументов.Ссылка.ЕГАИСИспользоватьСправкуБ КАК DMUseBlankB,
						|	ДатаМобайл_ШаблоныДокументов.Ссылка.ЕГАИСИспользоватьПроверкуМарок КАК DMUseCheckMark,
						|	ДатаМобайл_ШаблоныДокументов.Ссылка.ЗагружатьCписокЯчеекССервераПодбор  КАК DMGetCellsListFromServerSelect,
						|	ДатаМобайл_ШаблоныДокументов.Ссылка.ЗагружатьCписокЯчеекССервераПриемка КАК DMGetCellsListFromServerInsert,
						|	ДатаМобайл_ШаблоныДокументов.Ссылка.УникальныеСерийныеНомераПодбор КАК DMIsUniqueSNSelect,
	                    |	ДатаМобайл_ШаблоныДокументов.Ссылка.УникальныеСерийныеНомераПриемка КАК DMIsUniqueSNInsert,
						|	ДатаМобайл_ШаблоныДокументов.Ссылка.ВерсияЕГАИС КАК DMEgaisVersion,
						|	ДатаМобайл_ШаблоныДокументов.Ссылка.ИспользоватьСервисRateGoods КАК DMUseOnlineArtsCatalog,
						|	ДатаМобайл_ШаблоныДокументов.Ссылка.ЕГАИСЗагружатьСписокДатРозлива КАК DMGetDateBottlingFromServer
						|ИЗ
	                    |	Справочник.ДатаМобайл_ШаблоныДокументов КАК ДатаМобайл_ШаблоныДокументов
	                    |ГДЕ
	                    |	ДатаМобайл_ШаблоныДокументов.Код = &ИД");
	Запрос.УстановитьПараметр("ИД",TemplateID);
	Рез=Запрос.Выполнить().Выбрать();
	Если Рез.Следующий() тогда
		ЗаполнитьЗначенияСвойств(ОбъектШаблона,Рез);
		Док=Справочники.ДатаМобайл_ДокументыТСД.СоздатьЭлемент();
		Док.УстановитьНовыйКод();
		Док.Шаблон=Рез.Ссылка;
		Док.ДатаСоздания=ТекущаяДата();
		Док.ДатаНачалаСбора=ТекущаяДата();
		
		Если НЕ (Док.Шаблон.ГрупповаяРабота) Тогда
		Док.ТСД=УзелПО;
		КонецЕсли;
	
		Док.Дата=ТекущаяДата();
		Док.Номер="DMO-"+Формат(Док.код,"ЧГ=0");
		Док.Комментарий=DocOutID;
		Док.ОбменДанными.Получатели.АвтоЗаполнение = Ложь;
		Док.ОбменДанными.Получатели.Очистить();
		Если Док.Шаблон.ГрупповаяРабота Тогда
			Док.ОбменДанными.Получатели.Заполнить();
		КонецЕсли;
		Док.ОбменДанными.Получатели.Удалить(УзелПО);
		Док.Записать();
		ОбъектДока.DMDocOutID="d82-"+Строка(Док.Ссылка.УникальныйИдентификатор());
		ОбъектДока.DMisMark=Ложь;
		ОбъектДока.DMTemplate=ОбъектШаблона;
		ОбъектДока.DMNumber=Док.Номер;
		ОбъектДока.DMDate=Док.Дата;
		ОбъектДока.DMBarcode=Док.Номер;
		ОбъектДока.DMComment="";
		Возврат ОбъектДока;
	Иначе	
		ВызватьИсключениеВС("CreateDoc. Не найден шаблон. ");
		Возврат ОбъектДока;
	КонецЕсли;	
КонецФункции
//////////////////////////////////////////////////////////////////////////////
Функция SetDocComment(SN, UserName, DocOutID, Comment)
	УзелПО=НайтиУзел(SN);
	Если УзелПО=Неопределено тогда
		УзелПО = NewTSD(SN, UserName);
	КонецЕсли;
	
	попытка
		СсылкаНаДок=Справочники.ДатаМобайл_ДокументыТСД.ПолучитьСсылку(Новый УникальныйИдентификатор(Сред(DocOutID,5)));
	Исключение	
		ВызватьИсключениеВС("SetDocComment. Не найден документ. ");
		Возврат Ложь;
	КонецПопытки;	
	Если ссылканадок.ПолучитьОбъект()=неопределено тогда
		ВызватьИсключениеВС("SetDocComment. Не найден документ. ");
		Возврат Ложь;
	КонецЕсли;	
	Если Не СсылкаНаДок.ТСД.Пустая() тогда
		Если СсылкаНаДок.ТСД<>УзелПО тогда
			ВызватьИсключениеВС("SetDocComment. Чужой документ. ");
			Возврат Ложь;//не смогли
		КонецЕслИ;	
	КонецЕсли;
	
	Если ССылкаНаДок.Шаблон.ЗапретитьРучноеИзменениеКомментария Тогда
			ВызватьИсключениеВС("SetDocComment. Изменение комментария запрещено шаблоном. ");
			Возврат Ложь;
	КонецЕсли;
	
	Если СсылкаНаДок.ДатаЗавершенияСбора<>Дата(1,1,1) тогда
		Возврат Ложь;
	КонецЕсли;	
	Об=СсылкаНаДок.ПолучитьОбъект();
	Если Об.ДатаНачалаСбора=Дата(1,1,1) тогда
		Об.ДатаНачалаСбора=ТекущаяДата();
	КонецЕсли;	
	Об.Комментарий=Comment;
	
	Если Об.ТСД.Пустая() И НЕ(СсылкаНаДок.Шаблон.ГрупповаяРабота) тогда
		Об.ТСД=УзелПО;
	КонецЕсли;

	Об.ОбменДанными.Получатели.АвтоЗаполнение = Ложь;
	Об.ОбменДанными.Получатели.Очистить();
	Если ссылкаНАДок.Шаблон.ГрупповаяРабота тогда
		Об.ОбменДанными.Получатели.Заполнить();
	КонецЕсли;	
	Об.ОбменДанными.Получатели.Удалить(УзелПО);
	Попытка
		Об.Записать();
	Исключение	
		ВызватьИсключениеВС("SetDocComment. Не смогли записать документ. ");
		Возврат Ложь;
	КонецПопытки;	
	Возврат Истина;
КонецФункции
Функция SetDocNumber(SN, UserName, DocOutID, Number)
	УзелПО=НайтиУзел(SN);
	Если УзелПО=Неопределено тогда
		УзелПО = NewTSD(SN, UserName);
	КонецЕсли;
	
	попытка
		СсылкаНаДок=Справочники.ДатаМобайл_ДокументыТСД.ПолучитьСсылку(Новый УникальныйИдентификатор(Сред(DocOutID,5)));
	Исключение	
		ВызватьИсключениеВС("SetDocNumber. Не найден документ. ");
		Возврат Ложь;
	КонецПопытки;	
	Если ссылканадок.ПолучитьОбъект()=неопределено тогда
		ВызватьИсключениеВС("SetDocNumber. Не найден документ. ");
		Возврат Ложь;
	КонецЕсли;	
	Если Не СсылкаНаДок.ТСД.Пустая() тогда
		Если СсылкаНаДок.ТСД<>УзелПО тогда
			ВызватьИсключениеВС("SetDocNumber. Чужой документ. ");
			Возврат Ложь;//не смогли
		КонецЕслИ;	
	КонецЕсли;	
	Если СсылкаНаДок.ДатаЗавершенияСбора<>Дата(1,1,1) тогда
		Возврат Ложь;
	КонецЕсли;	
	Об=СсылкаНаДок.ПолучитьОбъект();
	Если Об.ДатаНачалаСбора=Дата(1,1,1) тогда
		Об.ДатаНачалаСбора=ТекущаяДата();
	КонецЕсли;	
	Об.Номер=Number;
	
	Если Об.ТСД.Пустая() И НЕ(СсылкаНаДок.Шаблон.ГрупповаяРабота) тогда
		Об.ТСД=УзелПО;
	КонецЕсли;

	Об.ОбменДанными.Получатели.АвтоЗаполнение = Ложь;
	Об.ОбменДанными.Получатели.Очистить();
	Если СсылкаНаДок.Шаблон.ГрупповаяРабота тогда
		Об.ОбменДанными.Получатели.Заполнить();
	КонецЕсли;	
	Об.ОбменДанными.Получатели.Удалить(УзелПО);
	Попытка
		Об.Записать();
	Исключение	
		ВызватьИсключениеВС("SetDocNumber. Не смогли записать документ. ");
		Возврат Ложь;
	КонецПопытки;	
	Возврат Истина;
КонецФункции
Функция SetDocClient(SN, UserName, DocOutID, ClientID)
	УзелПО=НайтиУзел(SN);
	Если УзелПО=Неопределено тогда
		УзелПО = NewTSD(SN, UserName);
	КонецЕсли;

	попытка
		СсылкаНаДок=Справочники.ДатаМобайл_ДокументыТСД.ПолучитьСсылку(Новый УникальныйИдентификатор(Сред(DocOutID,5)));
	Исключение	
		ВызватьИсключениеВС("SetDocClient. Не найден документ. ");
		Возврат Ложь;
	КонецПопытки;	
	Если ссылканадок.ПолучитьОбъект()=неопределено тогда
		ВызватьИсключениеВС("SetDocClient. Не найден документ. ");
		Возврат Ложь;
	КонецЕсли;	
	Если Не СсылкаНаДок.ТСД.Пустая() тогда
		Если СсылкаНаДок.ТСД<>УзелПО тогда
			ВызватьИсключениеВС("SetDocClient. Чужой документ. ");
			Возврат Ложь;
		КонецЕсли;	
	КонецЕсли;	
	Если СсылкаНаДок.ДатаЗавершенияСбора<>Дата(1,1,1) тогда
		Возврат Ложь;
	КонецЕсли;	
	Об=СсылкаНаДок.ПолучитьОбъект();
	Если Об.ДатаНачалаСбора=Дата(1,1,1) тогда
		Об.ДатаНачалаСбора=ТекущаяДата();
	КонецЕсли;	
	Об.ДатаИзмененияКлиента=ТекущаяДата();
	попытка
		Об.Клиент=Справочники.Партнеры.ПолучитьСсылку(Новый УникальныйИдентификатор(Сред(ClientID,4)));
	Исключение	
		ВызватьИсключениеВС("SetDocClient. Не найден клиент. ");
		Возврат Ложь;
	КонецПопытки;	
	Если НЕ (Об.Шаблон.ГрупповаяРабота) Тогда
		Об.ТСД=УзелПО;	
	КонецЕсли;
	Об.ОбменДанными.Получатели.АвтоЗаполнение = Ложь;
	Об.ОбменДанными.Получатели.Очистить();
	Если СсылкаНаДок.ТСД.Пустая() ИЛИ (СсылкаНаДок.Шаблон.ГрупповаяРабота) тогда
		Об.ОбменДанными.Получатели.Заполнить();
	КонецЕсли;	
	Об.ОбменДанными.Получатели.Удалить(УзелПО);
	Попытка
		Об.Записать();
	Исключение	
		ВызватьИсключениеВС("SetDocClient. Не смогли записать документ. ");
		Возврат Ложь;
	КонецПопытки;	
	Возврат Истина;
КонецФункции
//////////////////////////////////////////////////////////////////////////////
Функция IsNewData(SN, UserName)
	ОбъектОтвета=ФабрикаXDTO.Создать(ФабрикаXDTO.Тип("http://www.data-mobile.ru","DMNewDataStruct"));
	УзелПО=НайтиУзел(SN);
	Если УзелПО=Неопределено тогда
		УзелПО = NewTSD(SN, UserName);
	КонецЕсли;
	
	Запрос=Новый Запрос("ВЫБРАТЬ
	|	МАКСИМУМ(ВложенныйЗапрос.DMNewTemplates) КАК DMNewTemplates,
	|	МАКСИМУМ(ВложенныйЗапрос.DMNewCells) КАК DMNewCells,
	|	МАКСИМУМ(ВложенныйЗапрос.DMNewDocs) КАК DMNewDocs,
	|	МАКСИМУМ(ВложенныйЗапрос.DMNewUsers) КАК DMNewUsers,
	|	МАКСИМУМ(ВложенныйЗапрос.DMNewArts) КАК DMNewArts,
	|	МАКСИМУМ(ВложенныйЗапрос.DMNewClients) КАК DMNewClients,
	|	МАКСИМУМ(ВложенныйЗапрос.DMNewUnits) КАК DMNewUnits,
	|	МАКСИМУМ(ВложенныйЗапрос.DMClearArts) КАК DMClearArts,
	|	МАКСИМУМ(ВложенныйЗапрос.DMClearCells) КАК DMClearCells,
	|	МАКСИМУМ(ВложенныйЗапрос.DMClearTemplates) КАК DMClearTemplates,
	|	МАКСИМУМ(ВложенныйЗапрос.DMClearDocs) КАК DMClearDocs,
	|	МАКСИМУМ(ВложенныйЗапрос.DMClearUsers) КАК DMClearUsers,
	|	МАКСИМУМ(ВложенныйЗапрос.DMClearClients) КАК DMClearClients,
	|	МАКСИМУМ(ВложенныйЗапрос.DMClearUnits) КАК DMClearUnits
	|ИЗ
	|	(ВЫБРАТЬ РАЗЛИЧНЫЕ ПЕРВЫЕ 1
	|		ИСТИНА КАК DMNewTemplates,
	|		ЛОЖЬ КАК DMNewCells,
	|		ЛОЖЬ КАК DMNewDocs,
	|		ЛОЖЬ КАК DMNewUsers,
	|		ЛОЖЬ КАК DMNewArts,
	|		ЛОЖЬ КАК DMNewClients,
	|		ЛОЖЬ КАК DMNewUnits,
	|		ЛОЖЬ КАК DMClearArts,
	|		ЛОЖЬ КАК DMClearCells,
	|		ЛОЖЬ КАК DMClearTemplates,
	|		ЛОЖЬ КАК DMClearDocs,
	|		ЛОЖЬ КАК DMClearUsers,
	|		ЛОЖЬ КАК DMClearClients,
	|		ЛОЖЬ КАК DMClearUnits 
	|	ИЗ
	|		Справочник.ДатаМобайл_ШаблоныДокументов.Изменения КАК ДатаМобайл_ШаблоныДокументовИзменения
	|	ГДЕ
	|		НЕ ДатаМобайл_ШаблоныДокументовИзменения.Ссылка.ПометкаУдаления
	|		И ДатаМобайл_ШаблоныДокументовИзменения.Узел = &Узел
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ РАЗЛИЧНЫЕ ПЕРВЫЕ 1
	|		ЛОЖЬ,
	|		ИСТИНА,
	|		ЛОЖЬ,
	|		ЛОЖЬ,
	|		ЛОЖЬ,
	|		ЛОЖЬ,
	|		ЛОЖЬ,
	|		ЛОЖЬ,
	|		ЛОЖЬ,
	|		ЛОЖЬ,
	|		ЛОЖЬ,
	|		ЛОЖЬ,
	|		ЛОЖЬ,
	|		ЛОЖЬ
	|	ИЗ
    |		Справочник.СкладскиеЯчейки.Изменения КАК МестаХраненияИзменения
	|	ГДЕ
	|		НЕ МестаХраненияИзменения.Ссылка.ПометкаУдаления
	|		И МестаХраненияИзменения.Узел = &Узел
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ РАЗЛИЧНЫЕ ПЕРВЫЕ 1
	|		ЛОЖЬ,
	|		ЛОЖЬ,
	|		ИСТИНА,
	|		ЛОЖЬ,
	|		ЛОЖЬ,
	|		ЛОЖЬ,
	|		ЛОЖЬ,
	|		ЛОЖЬ,
	|		ЛОЖЬ,
	|		ЛОЖЬ,
	|		ЛОЖЬ,
	|		ЛОЖЬ,
	|		ЛОЖЬ,
	|		ЛОЖЬ
	|	ИЗ
	|		Справочник.ДатаМобайл_ДокументыТСД.Изменения КАК ДатаМобайл_ДокументыТСДИзменения
	|	ГДЕ
	|		НЕ ДатаМобайл_ДокументыТСДИзменения.Ссылка.ПометкаУдаления
	|		И ДатаМобайл_ДокументыТСДИзменения.Узел = &Узел
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ РАЗЛИЧНЫЕ ПЕРВЫЕ 1
	|		ЛОЖЬ,
	|		ЛОЖЬ,
	|		ЛОЖЬ,
	|		ИСТИНА,
	|		ЛОЖЬ,
	|		ЛОЖЬ,
	|		ЛОЖЬ,
	|		ЛОЖЬ,
	|		ЛОЖЬ,
	|		ЛОЖЬ,
	|		ЛОЖЬ,
	|		ЛОЖЬ,
	|		ЛОЖЬ,
	|		ЛОЖЬ
	|	ИЗ
	|		Справочник.Пользователи.Изменения КАК ПользователиИзменения
	|	ГДЕ
	|		НЕ ПользователиИзменения.Ссылка.ПометкаУдаления
	|		И ПользователиИзменения.Узел = &Узел
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ РАЗЛИЧНЫЕ ПЕРВЫЕ 1
	|		ЛОЖЬ,
	|		ЛОЖЬ,
	|		ЛОЖЬ,
	|		ЛОЖЬ,
	|		ИСТИНА,
	|		ЛОЖЬ,
	|		ЛОЖЬ,
	|		ЛОЖЬ,
	|		ЛОЖЬ,
	|		ЛОЖЬ,
	|		ЛОЖЬ,
	|		ЛОЖЬ,
	|		ЛОЖЬ,
	|		ЛОЖЬ
	|	ИЗ
	|		Справочник.Номенклатура.Изменения КАК НоменклатураИзменения
	|	ГДЕ
	|		НЕ НоменклатураИзменения.Ссылка.ПометкаУдаления
	|		И НоменклатураИзменения.Узел = &Узел
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ РАЗЛИЧНЫЕ ПЕРВЫЕ 1
	|		ЛОЖЬ,
	|		ЛОЖЬ,
	|		ЛОЖЬ,
	|		ЛОЖЬ,
	|		ИСТИНА,
	|		ЛОЖЬ,
	|		ЛОЖЬ,
	|		ЛОЖЬ,
	|		ЛОЖЬ,
	|		ЛОЖЬ,
	|		ЛОЖЬ,
	|		ЛОЖЬ,
	|		ЛОЖЬ,
	|		ЛОЖЬ
	|	ИЗ
	|		Справочник.ХарактеристикиНоменклатуры.Изменения КАК ХарактеристикиНоменклатурыИзменения
	|	ГДЕ
	|		НЕ ХарактеристикиНоменклатурыИзменения.Ссылка.ПометкаУдаления
	|		И ХарактеристикиНоменклатурыИзменения.Узел = &Узел
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ РАЗЛИЧНЫЕ ПЕРВЫЕ 1
	|		ЛОЖЬ,
	|		ЛОЖЬ,
	|		ЛОЖЬ,
	|		ЛОЖЬ,
	|		ИСТИНА,
	|		ЛОЖЬ,
	|		ЛОЖЬ,
	|		ЛОЖЬ,
	|		ЛОЖЬ,
	|		ЛОЖЬ,
	|		ЛОЖЬ,
	|		ЛОЖЬ,
	|		ЛОЖЬ,
	|		ЛОЖЬ
	|	ИЗ
	|		РегистрСведений.ШтрихкодыНоменклатуры.Изменения КАК ШтрихкодыНоменклатурыИзменения
	|	ГДЕ
	|		ШтрихкодыНоменклатурыИзменения.Узел = &Узел
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ РАЗЛИЧНЫЕ ПЕРВЫЕ 1
	|		ЛОЖЬ,
	|		ЛОЖЬ,
	|		ЛОЖЬ,
	|		ЛОЖЬ,
	|		ИСТИНА,
	|		ЛОЖЬ,
	|		ЛОЖЬ,
	|		ЛОЖЬ,
	|		ЛОЖЬ,
	|		ЛОЖЬ,
	|		ЛОЖЬ,
	|		ЛОЖЬ,
	|		ЛОЖЬ,
	|		ЛОЖЬ
	|	ИЗ
	|		Справочник.ДатаМобайл_НовыеТовары.Изменения КАК ДатаМобайл_НовыеТоварыИзменения
	|	ГДЕ
	|		ДатаМобайл_НовыеТоварыИзменения.Узел = &Узел
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ РАЗЛИЧНЫЕ ПЕРВЫЕ 1
	|		ЛОЖЬ,
	|		ЛОЖЬ,
	|		ЛОЖЬ,
	|		ЛОЖЬ,
	|		ИСТИНА,
	|		ЛОЖЬ,
	|		ЛОЖЬ,
	|		ЛОЖЬ,
	|		ЛОЖЬ,
	|		ЛОЖЬ,
	|		ЛОЖЬ,
	|		ЛОЖЬ,
	|		ЛОЖЬ,
	|		ЛОЖЬ
	|	ИЗ
	|		РегистрСведений.ДатаМобайл_НовыеШтрихкоды.Изменения КАК ДатаМобайл_НовыеШтрихкодыИзменения
	|	ГДЕ
	|		ДатаМобайл_НовыеШтрихкодыИзменения.Узел = &Узел
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ РАЗЛИЧНЫЕ ПЕРВЫЕ 1
	|		ЛОЖЬ,
	|		ЛОЖЬ,
	|		ЛОЖЬ,
	|		ЛОЖЬ,
	|		ЛОЖЬ,
	|		ИСТИНА,
	|		ЛОЖЬ,
	|		ЛОЖЬ,
	|		ЛОЖЬ,
	|		ЛОЖЬ,
	|		ЛОЖЬ,
	|		ЛОЖЬ,
	|		ЛОЖЬ,
	|		ЛОЖЬ
	|	ИЗ
	|		Справочник.Партнеры.Изменения КАК ПартнерыИзменения
	|	ГДЕ
	|		НЕ ПартнерыИзменения.Ссылка.ПометкаУдаления
	|		И ПартнерыИзменения.Узел = &Узел
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ РАЗЛИЧНЫЕ ПЕРВЫЕ 1
	|		ЛОЖЬ,
	|		ЛОЖЬ,
	|		ЛОЖЬ,
	|		ЛОЖЬ,
	|		ЛОЖЬ,
	|		ЛОЖЬ,
	|		ИСТИНА,
	|		ЛОЖЬ,
	|		ЛОЖЬ,
	|		ЛОЖЬ,
	|		ЛОЖЬ,
	|		ЛОЖЬ,
	|		ЛОЖЬ,
	|		ЛОЖЬ
	|	ИЗ
	|		Справочник.УпаковкиЕдиницыИзмерения.Изменения КАК УпаковкиЕдиницыИзмерения
	|	ГДЕ
	|		НЕ УпаковкиЕдиницыИзмерения.Ссылка.ПометкаУдаления
	|		И УпаковкиЕдиницыИзмерения.Узел = &Узел
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ЛОЖЬ,
	|		ЛОЖЬ,
	|		ЛОЖЬ,
	|		ЛОЖЬ,
	|		ДатаМобайл_СписокТСД.ОчиститьТовары,
	|		ЛОЖЬ,
	|		ДатаМобайл_СписокТСД.ОчиститьЕдиницыИзмерения,
	|		ДатаМобайл_СписокТСД.ОчиститьТовары,
	|		ДатаМобайл_СписокТСД.ОчиститьЯчейки,
	|		ДатаМобайл_СписокТСД.ОчиститьШаблоны,
	|		ДатаМобайл_СписокТСД.ОчиститьДокументы,
	|		ДатаМобайл_СписокТСД.ОчиститьПользователей,
	|		ДатаМобайл_СписокТСД.ОчиститьКлиентов,
	|		ДатаМобайл_СписокТСД.ОчиститьЕдиницыИзмерения
	|	ИЗ
	|		ПланОбмена.ДатаМобайл_СписокТСД КАК ДатаМобайл_СписокТСД
	|	ГДЕ
	|		ДатаМобайл_СписокТСД.Ссылка = &Узел) КАК ВложенныйЗапрос");
	Запрос.УстановитьПараметр("Узел",УзелПО.Ссылка);
	Рез=Запрос.Выполнить().Выбрать();
	Если Рез.Следующий() тогда
		ЗаполнитьЗначенияСвойств(ОбъектОтвета,Рез);
	КонецЕсли;	
	Возврат ОбъектОтвета;
КонецФункции
Функция IsNewDocs(SN, UserName)
	УзелПО=НайтиУзел(SN);
	Если УзелПО=Неопределено тогда
		УзелПО = NewTSD(SN, UserName);
	КонецЕсли;

	Запрос=Новый Запрос("ВЫБРАТЬ
	                    |	МАКСИМУМ(ВложенныйЗапрос.DMNewDocs) КАК DMNewDocs
	                    |ИЗ
	                    |	(ВЫБРАТЬ РАЗЛИЧНЫЕ ПЕРВЫЕ 1
	                    |		ИСТИНА КАК DMNewDocs
	                    |	ИЗ
	                    |		Справочник.ДатаМобайл_ДокументыТСД.Изменения КАК ДатаМобайл_ДокументыТСДИзменения
	                    |	ГДЕ
	                    |		ДатаМобайл_ДокументыТСДИзменения.Узел = &Узел
	                    |	
	                    |	ОБЪЕДИНИТЬ ВСЕ
	                    |	
	                    |	ВЫБРАТЬ
	                    |		ДатаМобайл_СписокТСД.ОчиститьДокументы
	                    |	ИЗ
	                    |		ПланОбмена.ДатаМобайл_СписокТСД КАК ДатаМобайл_СписокТСД
	                    |	ГДЕ
	                    |		ДатаМобайл_СписокТСД.Ссылка = &Узел
	                    |	
	                    |	ОБЪЕДИНИТЬ ВСЕ
	                    |	
	                    |	ВЫБРАТЬ РАЗЛИЧНЫЕ ПЕРВЫЕ 1
	                    |		ИСТИНА
	                    |	ИЗ
	                    |		Справочник.ДатаМобайл_НовыеТовары.Изменения КАК ДатаМобайл_НовыеТоварыИзменения
	                    |	ГДЕ
	                    |		ДатаМобайл_НовыеТоварыИзменения.Узел = &Узел
	                    |	
	                    |	ОБЪЕДИНИТЬ ВСЕ
	                    |	
	                    |	ВЫБРАТЬ РАЗЛИЧНЫЕ ПЕРВЫЕ 1
	                    |		ИСТИНА
	                    |	ИЗ
	                    |		РегистрСведений.ДатаМобайл_НовыеШтрихкоды.Изменения КАК ДатаМобайл_НовыеШтрихкодыИзменения
	                    |	ГДЕ
	                    |		ДатаМобайл_НовыеШтрихкодыИзменения.Узел = &Узел) КАК ВложенныйЗапрос");
	Запрос.УстановитьПараметр("Узел",УзелПО.Ссылка);
	Рез=Запрос.Выполнить().Выбрать();
	Если Рез.Следующий() тогда
		Возврат Рез.DMNewDocs;
	КонецЕсли;	
	Возврат Ложь;
КонецФункции
//////////////////////////////////////////////////////////////////////////////
Функция ПолучитьИнфо(УзелПО, Barcode)
	
	СтрокаВозврата = "";
	
	//Сначала ищем ячейку...
	Если УзелПО.ВыгружатьВКодЯчейки=0 тогда
		ТекущаяЯчейка = Справочники.СкладскиеЯчейки.НайтиПоКоду(Barcode);
	Иначе
		ТекущаяЯчейка = ДатаМобайл_ОбщийМодуль.ПолучитьЯчейкуПоШтрихкоду(Barcode);
	КонецЕсли;	
		
	ЗапросПоискЯчейки=Новый Запрос;
	ЗапросПоискЯчейки.УстановитьПараметр("ТекущаяЯчейка", ТекущаяЯчейка);	
	ЗапросПоискЯчейки.Текст="ВЫБРАТЬ ПЕРВЫЕ 1
	|	СкладскиеЯчейки.Ссылка КАК Ячейка
	|ИЗ
	|	Справочник.СкладскиеЯчейки КАК СкладскиеЯчейки
	|ГДЕ
	|	СкладскиеЯчейки.Ссылка = &ТекущаяЯчейка";
	 
	ВыборкаРезультатПоискаЯчейки=ЗапросПоискЯчейки.Выполнить().Выбрать();
	Если ВыборкаРезультатПоискаЯчейки.Следующий() Тогда
		ИмяЯчейки = "Ячейка: " + ТекущаяЯчейка.Код + Символы.ПС + Символы.ПС;
		
		ЗапросОстатков = Новый Запрос;
		ЗапросОстатков.УстановитьПараметр("ТекущаяЯчейка", ТекущаяЯчейка);
		ЗапросОстатков.Текст="ВЫБРАТЬ
		|	ТоварыВЯчейкахОстатки.Номенклатура,
		|	ТоварыВЯчейкахОстатки.Характеристика,		
		|	ТоварыВЯчейкахОстатки.Упаковка,
		|	ТоварыВЯчейкахОстатки.Ячейка,
		|	СУММА(ТоварыВЯчейкахОстатки.ВНаличииОстаток) КАК КоличествоОстаток
		|ИЗ
		|	РегистрНакопления.ТоварыВЯчейках.Остатки(,Ячейка=&ТекущаяЯчейка) КАК ТоварыВЯчейкахОстатки
		|СГРУППИРОВАТЬ ПО
		|	ТоварыВЯчейкахОстатки.Номенклатура,
		|	ТоварыВЯчейкахОстатки.Характеристика,		
		|	ТоварыВЯчейкахОстатки.Упаковка,
		|	ТоварыВЯчейкахОстатки.Ячейка";
		
		ВыборкаРезультатЗапросаОстатков=ЗапросОстатков.Выполнить().Выбрать();
		Если ВыборкаРезультатЗапросаОстатков.Количество()> 0 Тогда
			Пока ВыборкаРезультатЗапросаОстатков.Следующий() Цикл
				СтрокаВозврата = СтрокаВозврата + ВыборкаРезультатЗапросаОстатков.Номенклатура + " " 
												+ ВыборкаРезультатЗапросаОстатков.Характеристика + "; "
												+ ВыборкаРезультатЗапросаОстатков.КоличествоОстаток + " "
												+ ВыборкаРезультатЗапросаОстатков.Упаковка + ";" + Символы.ПС;		
			КонецЦикла;
		Иначе 
			СтрокаВозврата =  "Товаров не числится...";
		КонецЕсли;
		
		Возврат ИмяЯчейки + СтрокаВозврата;		
	КонецЕсли;
	
	//Если ячейки нет, то ищем товар...	
	ЗапросПоискТовара = Новый Запрос;
	ЗапросПоискТовара.УстановитьПараметр("Barcode", Barcode);
	ЗапросПоискТовара.Текст = "ВЫБРАТЬ
	|	ШтрихкодыНоменклатуры.Номенклатура КАК Номенклатура,
	|	ШтрихкодыНоменклатуры.Характеристика КАК Характеристика
	|ИЗ
	|	РегистрСведений.ШтрихкодыНоменклатуры КАК ШтрихкодыНоменклатуры
	|ГДЕ
	|	ШтрихкодыНоменклатуры.Штрихкод = &Barcode
	|	И ШтрихкодыНоменклатуры.Номенклатура Ссылка Справочник.Номенклатура";
	
    ВыборкаРезультатПоискаТовара = ЗапросПоискТовара.Выполнить().Выбрать();
	Если ВыборкаРезультатПоискаТовара.Количество()>0 Тогда		
		Пока ВыборкаРезультатПоискаТовара.Следующий() Цикл
			ИмяТовара = "Товар: " + ВыборкаРезультатПоискаТовара.Номенклатура + " " + ВыборкаРезультатПоискаТовара.Характеристика + Символы.ПС + Символы.ПС;
			ИнфоТовар = "";
			
			//Сначала ищем остатки по адресному регистру...
			ЗапросОстатков =Новый Запрос;
			ЗапросОстатков.УстановитьПараметр("ТекущаяНоменклатура", ВыборкаРезультатПоискаТовара.Номенклатура);
			ЗапросОстатков.УстановитьПараметр("ТекущаяХарактеристика", ВыборкаРезультатПоискаТовара.Характеристика);
			ЗапросОстатков.Текст = "ВЫБРАТЬ
			|	ТоварыВЯчейкахОстатки.Номенклатура,
			|	ТоварыВЯчейкахОстатки.Характеристика,		
			|	ТоварыВЯчейкахОстатки.Упаковка,
			|	ТоварыВЯчейкахОстатки.Ячейка,
			|	СУММА(ТоварыВЯчейкахОстатки.ВНаличииОстаток) КАК КоличествоОстаток
			|ИЗ
			|	РегистрНакопления.ТоварыВЯчейках.Остатки(,Номенклатура=&ТекущаяНоменклатура И Характеристика=&ТекущаяХарактеристика) КАК ТоварыВЯчейкахОстатки
			|СГРУППИРОВАТЬ ПО
			|	ТоварыВЯчейкахОстатки.Номенклатура,
			|	ТоварыВЯчейкахОстатки.Характеристика,		
			|	ТоварыВЯчейкахОстатки.Упаковка,
			|	ТоварыВЯчейкахОстатки.Ячейка";
			
			ВыборкаРезультатЗапросаОстатков=ЗапросОстатков.Выполнить().Выбрать();
			Если ВыборкаРезультатЗапросаОстатков.Количество()> 0 Тогда
				Пока ВыборкаРезультатЗапросаОстатков.Следующий() Цикл
					ИнфоТовар = ИнфоТовар + ВыборкаРезультатЗапросаОстатков.Ячейка.Код + "; " 
										  + ВыборкаРезультатЗапросаОстатков.КоличествоОстаток + " "
										  + ВыборкаРезультатЗапросаОстатков.Упаковка + ";" + Символы.ПС;		
				КонецЦикла;
			Иначе 
				//Если по адресному остатков нет, то ищем по обычному...
				ЗапросОстатков =Новый Запрос;
				ЗапросОстатков.УстановитьПараметр("ТекущаяНоменклатура", ВыборкаРезультатПоискаТовара.Номенклатура);
				ЗапросОстатков.УстановитьПараметр("ТекущаяХарактеристика", ВыборкаРезультатПоискаТовара.Характеристика);
				ЗапросОстатков.Текст = "ВЫБРАТЬ
				|	ТоварыНаСкладахОстатки.Номенклатура,
				|	ТоварыНаСкладахОстатки.Характеристика,
				|	ТоварыНаСкладахОстатки.Склад,
				|	СУММА(ТоварыНаСкладахОстатки.ВНаличииОстаток) КАК КоличествоОстаток
				|ИЗ
				|	РегистрНакопления.ТоварыНаСкладах.Остатки(,Номенклатура=&ТекущаяНоменклатура И Характеристика=&ТекущаяХарактеристика) КАК ТоварыНаСкладахОстатки
				|СГРУППИРОВАТЬ ПО
				|	ТоварыНаСкладахОстатки.Номенклатура,
				|	ТоварыНаСкладахОстатки.Характеристика,
				|	ТоварыНаСкладахОстатки.Склад";
				
				ВыборкаРезультатЗапросаОстатков=ЗапросОстатков.Выполнить().Выбрать();
				Если ВыборкаРезультатЗапросаОстатков.Количество()> 0 Тогда
					Пока ВыборкаРезультатЗапросаОстатков.Следующий() Цикл
						ИнфоТовар = ИнфоТовар + ВыборкаРезультатЗапросаОстатков.Склад + "; "
											  + ВыборкаРезультатЗапросаОстатков.КоличествоОстаток + Символы.ПС;		
					КонецЦикла;

				Иначе
					//Нет остатков...
					ИнфоТовар =  "Остатков не числится...";
				КонецЕсли;
			КонецЕсли;					
			
			СтрокаВозврата = ИмяТовара + ИнфоТовар + Символы.ПС + Символы.ПС + Символы.ПС;
		КонецЦикла;
		
		Возврат СтрокаВозврата;
		
	Иначе 
		Возврат "По штрихкоду данных не найдено...";
	КонецЕсли;	
	
КонецФункции	
Функция GetBalance(SN, UserName, ArtID)
	УзелПО=НайтиУзел(SN);
	Если УзелПО=Неопределено тогда
		ВызватьИсключениеВС("GetBalance. Не найден ТСД "+SN+".");
		Возврат 0;
	КонецЕсли;	
	Если Лев(ArtID,3)="8U-" тогда
		Попытка
			Товар=Справочники.Номенклатура.ПолучитьСсылку(Новый УникальныйИдентификатор(Сред(ArtID,4,36)));
		Исключение
			Возврат 0;
		КонецПопытки;	
		ИДХК=Сред(ArtID,40,36);
		Если ИДХК="00000000-0000-0000-0000-000000000000" тогда
			ХК=Справочники.ХарактеристикиНоменклатуры.ПустаяСсылка();
		Иначе	
			ХК=Справочники.ХарактеристикиНоменклатуры.ПолучитьСсылку(Новый УникальныйИдентификатор(ИДХК));
		КонецЕсли;	
		Товар=Справочники.Номенклатура.ПолучитьСсылку(Новый УникальныйИдентификатор(Сред(ArtID,4)));
	ИначеЕсли Лев(ArtID,3)="8n-" тогда
		Возврат 0;
	КонецЕсли;	
	
	//Scanport 19.05.14 уберем отображение остатков если не нужны
	Если УзелПО.НеОтображатьОстатки тогда
		Возврат 0;
	Иначе	
	Запрос=Новый Запрос("ВЫБРАТЬ
	|	СУММА(РезервТСД.Количество) КАК РезервТСД,
	|	0 КАК Резерв,
	|	0 КАК Остаток
	|ПОМЕСТИТЬ РазныеДанные
	|ИЗ
	|	(ВЫБРАТЬ
	|		ДатаМобайл_ДокументыТСДСобранныеДанные.Номенклатура КАК Номенклатура,
	|		ДатаМобайл_ДокументыТСДСобранныеДанные.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
	|		СУММА(ДатаМобайл_ДокументыТСДСобранныеДанные.Количество) КАК Количество
	|	ИЗ
	|		Справочник.ДатаМобайл_ДокументыТСД.СобранныеДанныеПодбор КАК ДатаМобайл_ДокументыТСДСобранныеДанные
	|	ГДЕ
	|		ДатаМобайл_ДокументыТСДСобранныеДанные.Ссылка.ДатаЗавершения = ДАТАВРЕМЯ(1, 1, 1)
	|		И ДатаМобайл_ДокументыТСДСобранныеДанные.Номенклатура = &Номенклатура
	|		И ДатаМобайл_ДокументыТСДСобранныеДанные.Ссылка.Шаблон.РезервироватьТовар
	|		И ДатаМобайл_ДокументыТСДСобранныеДанные.Ссылка.ДатаЗавершения = ДАТАВРЕМЯ(1, 1, 1)
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ДатаМобайл_ДокументыТСДСобранныеДанные.Номенклатура,
	|		ДатаМобайл_ДокументыТСДСобранныеДанные.ХарактеристикаНоменклатуры) КАК РезервТСД
	|ГДЕ
	|	РезервТСД.Номенклатура = &Номенклатура
	|	И РезервТСД.ХарактеристикаНоменклатуры = &ХК
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	0,
	|	СУММА(ТоварыВРезервеНаСкладахОстатки.КОтгрузкеОстаток),
	|	СУММА(ТоварыВРезервеНаСкладахОстатки.ВНаличииОстаток)
	|ИЗ
	|	РегистрНакопления.ТоварыНаСкладах.Остатки(
	|			,
	|			Номенклатура = &Номенклатура
	|				И (&ВсеСклады
	|					ИЛИ Склад В (&Склады)
	|					ИЛИ Помещение В (&Склады))) КАК ТоварыВРезервеНаСкладахОстатки
	|ГДЕ
	|	ТоварыВРезервеНаСкладахОстатки.Номенклатура = &Номенклатура
	|	И ТоварыВРезервеНаСкладахОстатки.Характеристика = &ХК
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СУММА(ЕСТЬNULL(РазныеДанные.РезервТСД, 0)) КАК РезервТСД,
	|	СУММА(ЕСТЬNULL(РазныеДанные.Резерв, 0)) КАК Резерв,
	|	СУММА(ЕСТЬNULL(РазныеДанные.Остаток, 0)) КАК Остаток
	|ИЗ
	|	РазныеДанные КАК РазныеДанные");
	Запрос.УстановитьПараметр("Номенклатура",Товар);
	Запрос.УстановитьПараметр("ХК",ХК);
	СписокСкладов=УзелПО.Склады.ВыгрузитьКолонку("Склад");
	Запрос.УстановитьПараметр("Склады",СписокСкладов);
	Запрос.УстановитьПараметр("ВсеСклады",СписокСкладов.Количество()=0);
	Если УзелПО.ПоСвободнымОстаткам тогда
		Запрос.Текст=СтрЗаменить(Запрос.Текст,"РегистрНакопления.ТоварыНаСкладах.Остатки","РегистрНакопления.СвободныеОстатки.Остатки");
		Запрос.Текст=СтрЗаменить(Запрос.Текст,"ТоварыВРезервеНаСкладахОстатки.КОтгрузкеОстаток","ТоварыВРезервеНаСкладахОстатки.ВРезервеСоСкладаОстаток+ТоварыВРезервеНаСкладахОстатки.ВРезервеПодЗаказОстаток");	
		Запрос.Текст=СтрЗаменить(Запрос.Текст,"ИЛИ Помещение В (&Склады)","");
	КонецЕсли;	
	Рез=Запрос.Выполнить().Выгрузить();
	Количество = Рез.Итог("Остаток")-Рез.Итог("Резерв")-Рез.Итог("РезервТСД");
	Возврат "Пример! Остаток: " + Количество;
	КонецЕсли;
КонецФункции
Функция CountDiscount(SN, UserName, Barcode, DocOutID)
	Возврат "Пример! 999, 99 руб";
КонецФункции
Функция FastAccessDoc(SN, UserName, DocID, Barcode)
	
	Если Barcode = "" Тогда
		Возврат "Отсканируйте штрихкод ";
	Иначе
		Возврат FastAccess(SN, UserName, Barcode);
	КонецЕсли;

КонецФункции
Функция FastAccess(SN, UserName, Barcode)
	
	УзелПО=НайтиУзел(SN);
	Если УзелПО=Неопределено тогда
		УзелПО = NewTSD(SN, UserName);
	КонецЕсли;
	

 СтрокаИнфо = ПолучитьИнфо(УзелПО, Barcode);
  Возврат СтрокаИнфо;

КонецФункции
//////////////////////////////////////////////////////////////////////////////
Функция GetPicture(ArtID)
	
	Возврат ДатаМобайл_ОбщийМодуль.ПолучитьДвоичныеДанныеКартинки(ArtID);	
	
КонецФункции
Функция SetRowPhoto(SN, UserName, DocID, ArtID, Barcode, Byte)
	
	УзелПО=НайтиУзел(SN);
	Если УзелПО=Неопределено тогда
		УзелПО = NewTSD(SN, UserName);
	КонецЕсли;
	
	
	Попытка
		СсылкаНаДок=Справочники.ДатаМобайл_ДокументыТСД.ПолучитьСсылку(Новый УникальныйИдентификатор(Сред(DocID,5)));
	Исключение
		Возврат ЛОЖЬ;
	КонецПопытки;
		
	Шаблон = ССылкаНаДок.Шаблон;
	
	СтруктураПоиска = новый Структура("КодТовара, Штрихкод", СокрЛП(ArtID), СокрЛП(Barcode));
	
Если Шаблон.ИспользоватьФотофиксациюПодбор Тогда
		ДокументОбъект = СсылкаНаДок.ПолучитьОбъект();
		СтрокиПодбор = ДокументОбъект.СобранныеДанныеПодбор.НайтиСтроки(СтруктураПоиска);
		
	Если СтрокиПодбор.Количество() > 0 Тогда
			
	ИмяПапки = ДокументОбъект.Номер+ЛЕВ(СтрЗаменить(ДокументОбъект.Дата,".",""),8);

	Папка = (Шаблон.ПутьВыгрузкиИзображенияПодбор+ИмяПапки+"\");
	
	Если НайтиФайлы(Папка).Количество() = 0 Тогда
		СоздатьКаталог(Папка);
	КонецЕсли;
	ПутьСохранения = Папка;
	
		Изображение = Новый Картинка(Byte);		
		
			Изображение = Новый Картинка(Byte);
			
			ПутьКФайлу = ПутьСохранения+Barcode+"_"+СтрЗаменить(Формат(ТекущаяДата(),"ДЛФ=T"),":","")+".jpg";				

			//ПутьКФайлу = СокрЛП(Шаблон.ПутьВыгрузкиИзображенияПодбор)+ArtId+".jpg";
		Попытка
			Изображение.Записать(ПутьКФайлу);
		Исключение
			Возврат ЛОЖЬ;
		КонецПопытки;
		
			Для Н=0 По СтрокиПодбор.Количество() - 1 Цикл
				СтрокиПодбор[Н].СсылкаНаИзображение = Строка(ПутьКФайлу);	
			КонецЦикла;
			
	КонецЕсли;
КонецЕсли;

Если Шаблон.ИспользоватьФотофиксациюПриемка Тогда
		
	СтрокиПриемка = ДокументОбъект.СобранныеДанныеПриемка.НайтиСтроки(СтруктураПоиска);
		
	Если СтрокиПриемка.Количество() > 0 Тогда
			
		Папка = (Шаблон.ПутьВыгрузкиИзображенияПриемка+ИмяПапки+"\");
		
		Если НайтиФайлы(Папка).Количество() = 0 Тогда
			СоздатьКаталог(Папка);
		КонецЕсли;
		ПутьСохранения = Папка;

			Изображение = Новый Картинка(Byte);
			ПутьКФайлу = ПутьСохранения+Barcode+"_"+СтрЗаменить(Формат(ТекущаяДата(),"ДЛФ=T"),":","")+".jpg";				
			Попытка
				Изображение.Записать(ПутьКФайлу);
			Исключение
				Возврат ЛОЖЬ;
			КонецПопытки;
		
			Для Н=0 По СтрокиПриемка.Количество() - 1 Цикл
				СтрокиПриемка[Н].СсылкаНаИзображение = ПутьКФайлу;	
			КонецЦикла;		
		
	КонецЕсли;
КонецЕсли;

	ДокументОбъект.Записать();
	
	Return True;

КонецФункции
Функция SetDocPhoto(SN, UserName, DocID, Byte)
	
	УзелПО=НайтиУзел(SN);
	Если УзелПО=Неопределено тогда
		УзелПО = NewTSD(SN, UserName);
	КонецЕсли;

	
	Попытка
		СсылкаНаДок=Справочники.ДатаМобайл_ДокументыТСД.ПолучитьСсылку(Новый УникальныйИдентификатор(Сред(DocID,5)));
	Исключение
		Возврат ЛОЖЬ;
	КонецПопытки;
	
	ДокументОбъект = ССылкаНаДок.ПолучитьОбъект();
	
	Шаблон = СсылкаНаДок.Шаблон;
	
	
	ИмяПапки = ДокументОбъект.Номер+ЛЕВ(СтрЗаменить(ДокументОбъект.Дата,".",""),8);
	
	Папка = (Шаблон.ПутьВыгрузкиИзображения+ИмяПапки+"\");
	
	Если НайтиФайлы(Папка).Количество() = 0 Тогда
		СоздатьКаталог(Папка);
	КонецЕсли;
		ПутьСохранения = Папка;
		
		Изображение = Новый Картинка(Byte);
		Файлы = НайтиФайлы(ПутьСохранения, DocID+"??.jpg",);
		Если Файлы.Количество() > 0 Тогда
			ПутьКФайлу = ПутьСохранения+DocID+"_"+Файлы.Количество()+".jpg";				
		Иначе
			ПутьКФайлу = ПутьСохранения+DocID+".jpg";
		КонецЕсли;
		
		Попытка
			Изображение.Записать(ПутьКФайлу);
		Исключение
			Возврат ЛОЖЬ;
		КонецПопытки;
		ДокументОбъект.СсылкаНаИзображение = Строка(ПутьКФайлу);
		
		ДокументОбъект.Записать();
		Return true;
		
КонецФункции
//////////////////////////////////////////////////////////////////////////////
Функция ПолучитьЦенуТовара(Номенклатура, ХарактеристикаНоменклатуры, ТипЦен)
		
	лТекущаяЦена=0;
	
		Запрос=Новый Запрос("ВЫБРАТЬ ПЕРВЫЕ 1
	                     |	ЦеныНоменклатурыСрезПоследних.Цена
	                     |ИЗ
	                     |	РегистрСведений.ЦеныНоменклатуры.СрезПоследних(, ВидЦены = &ТипЦен И Номенклатура = &Номенклатура И Характеристика = &ХарактеристикаНоменклатуры) КАК ЦеныНоменклатурыСрезПоследних");
		
		Запрос.УстановитьПараметр("ТипЦен",ТипЦен);
		Запрос.УстановитьПараметр("Номенклатура",Номенклатура);
		Запрос.УстановитьПараметр("ХарактеристикаНоменклатуры",ХарактеристикаНоменклатуры);
	 
	Рез=Запрос.Выполнить().Выбрать();
	Пока Рез.Следующий() цикл    
		  лТекущаяЦена =  Рез.Цена;
	КонецЦикла;	
	
	
	Возврат лТекущаяЦена;

КонецФункции

Функция SendArtToPrint(SN, UserName, ArtID, Barcode, Count)
	
	УзелПО=НайтиУзел(SN);
	Если УзелПО=Неопределено тогда
		УзелПО = NewTSD(SN, UserName);
	КонецЕсли;


	КаталогСохранения = УзелПО.КаталогВыгрузкиФайлаПечати;
		
		Если Лев(ArtID,3)="8U-" тогда
			лТовар=Справочники.Номенклатура.ПолучитьСсылку(Новый УникальныйИдентификатор(Сред(ArtID,4,36)));
			//ИДХК=Сред(ArtID,40,36);
			//Если ИДХК<>"00000000-0000-0000-0000-000000000000" тогда
			//	лХарактеристикаНоменклатуры=Справочники.ХарактеристикиНоменклатуры.ПолучитьСсылку(Новый УникальныйИдентификатор(ИДХК));
			//КонецЕсли;
		лХарактеристика = Справочники.ХарактеристикиНоменклатуры.ПустаяСсылка();
	
		ИначеЕсли Лев(ArtID,3)="8n-" Тогда
			лТовар=Справочники.ДатаМобайл_НовыеТовары.ПолучитьСсылку(Новый УникальныйИдентификатор(Сред(ArtID,4)));
		Иначе   
			лТовар=Справочники.Номенклатура.ПолучитьСсылку(Новый УникальныйИдентификатор(СРЕД(ArtID,4)));
		КонецЕсли;
	
	СтруктураПоиска = Новый Структура("ТипОперации", "Печать этикетки");
	
	СтрокиРеквизитов = УзелПО.Печать.НайтиСтроки(СтруктураПоиска);
		
	ЗаписьXML = Новый ЗаписьXML;
	
	ИмяФайла = СтрЗаменить(ТекущаяДата(),":","");
	ИмяФайла = СтрЗаменить(ИмяФайла, ".","");
	ИмяФайла = СтрЗаменить(ИмяФайла, " ","");

	Генератор = Новый ГенераторСлучайныхЧисел(1);
	ИдентификаторФайла = Генератор.СлучайноеЧисло(1, 1000);
	
	ИмяФайла = ИмяФайла+ИдентификаторФайла;
	
	Попытка
		ЗаписьXML.ОткрытьФайл(КаталогСохранения+ИмяФайла+".xml", "UTF-8");
	Исключение
		Возврат ЛОЖЬ;
	КонецПопытки;
		
	ЗаписьXML.ЗаписатьОбъявлениеXML();	
	
	ЗаписьXML.ЗаписатьНачалоЭлемента("PrintData");
	
	//Count = 0 ;
	Для Н = 0 По СтрокиРеквизитов.Количество()-1 Цикл
			
		ЗаписьXML.ЗаписатьНачалоЭлемента("PrinterName");
			ЗаписьXML.ЗаписатьТекст(СтрокиРеквизитов[Н].ИмяПринтера);
		ЗаписьXML.ЗаписатьКонецЭлемента();		

		ЗаписьXML.ЗаписатьНачалоЭлемента("TemplateName");
			ЗаписьXML.ЗаписатьТекст(СтрокиРеквизитов[Н].ИмяШаблона);
		ЗаписьXML.ЗаписатьКонецЭлемента();		
		
		//Count = Count+1;
		ЗаписьXML.ЗаписатьНачалоЭлемента("Count");
			ЗаписьXML.ЗаписатьТекст(Строка(Count));
		ЗаписьXML.ЗаписатьКонецЭлемента();		
		
	КонецЦикла;
		
	ЗаписьXML.ЗаписатьНачалоЭлемента("Head");
	
		ЗапросШК = Новый ЗАпрос;
		ЗапросШК.УстановитьПараметр("Номенклатура", лТовар);
		ЗапросШК.УстановитьПараметр("Штрихкод", Barcode);
		ЗапросШК.Текст = "ВЫБРАТЬ ПЕРВЫЕ 1
						 |	ЕСТЬNULL(ВЫБОР КОГДА ЕСТЬNULL(Штрихкоды.Упаковка.Числитель,1) = 0 ТОГДА 1 ИНАЧЕ ЕСТЬNULL(Штрихкоды.Упаковка.Числитель,1) КОНЕЦ/ 
				 		 |	         ВЫБОР КОГДА ЕСТЬNULL(Штрихкоды.Упаковка.Знаменатель,1) = 0 ТОГДА 1 ИНАЧЕ ЕСТЬNULL(Штрихкоды.Упаковка.Знаменатель,1) КОНЕЦ, 1) КАК КФ,
		                 |	Штрихкоды.Упаковка.Наименование КАК Наименование
		                 |ИЗ
		                 |	РегистрСведений.ШтрихкодыНоменклатуры КАК Штрихкоды
		                 |ГДЕ
		                 |	Штрихкоды.Номенклатура = &Номенклатура
		                 |	И Штрихкоды.Штрихкод = &Штрихкод";

	
		//ЗаписьXML.ЗаписатьНачалоЭлемента("Client");
		//
		//ЗаписьXML.ЗаписатьКонецЭлемента();//Client
		
		
		//ЗаписьXML.ЗаписатьНачалоЭлемента("Item");
		
			ЗаписьXML.ЗаписатьНачалоЭлемента("ArtName");
			ЗаписьXML.ЗаписатьТекст(ЧистаяСтрока(лТовар.Наименование));
			ЗаписьXML.ЗаписатьКонецЭлемента();//Param1
			
			ЗаписьXML.ЗаписатьНачалоЭлемента("Barcode");
			Если Barcode <> "" Тогда
				ЗаписьXML.ЗаписатьТекст(ЧистаяСтрока(Barcode));
			Иначе
				ЗаписьXML.ЗаписатьТекст("");
			КонецЕсли;
			ЗаписьXML.ЗаписатьКонецЭлемента();//Param2
			
			Если НЕ(ЗапросШК.Выполнить().Пустой()) Тогда
				Выборка = ЗапросШк.Выполнить().Выбрать();
				Пока Выборка.Следующий() Цикл
					ЗаписьXML.ЗаписатьНачалоЭлемента("Measure");
					ЗаписьXML.ЗаписатьТекст(ЧистаяСтрока(Выборка.Наименование));
					ЗаписьXML.ЗаписатьКонецЭлемента();//Measure
					ЗаписьXML.ЗаписатьНачалоЭлемента("Kf");
					ЗаписьXML.ЗаписатьТекст(ЧистаяСтрока(Выборка.КФ));
					ЗаписьXML.ЗаписатьКонецЭлемента();//Kf
				КонецЦикла;
			КонецЕсли;

		//ЗаписьXML.ЗаписатьКонецЭлемента();//Item
		
	ТекущаяЦена = ПолучитьЦенуТовара(лТовар, лХарактеристика, УзелПО.ТипЦен);
        ЗаписьXML.ЗаписатьНачалоЭлемента("Price");	
			ЗаписьXML.ЗаписатьТекст(ЧистаяСтрока(ТекущаяЦена));			 	 
		ЗаписьXML.ЗаписатьКонецЭлемента();//Price
					
 
		Атрибуты = ПолучитьАтрибуты(УзелПО); 			
		Для сч=1 По 10 Цикл
			ЗаписьXML.ЗаписатьНачалоЭлемента("Attr"+сч);
				ИмяАтрибута =  Атрибуты["ИмяАтрибута"+сч];
				Если ИмяАтрибута <> "" Тогда
					ЗначениеАтрибута = ЧистаяСтрока(лТовар[ИмяАтрибута]);
				Иначе 
					ЗначениеАтрибута = "";
				КонецЕсли;	
			ЗаписьXML.ЗаписатьТекст(ЧистаяСтрока(ЗначениеАтрибута));
			ЗаписьXML.ЗаписатьКонецЭлемента();//Attr
		КонецЦикла;	
		
	ЗаписьXML.ЗаписатьКонецЭлемента();//Head
	
	ЗаписьXML.ЗаписатьНачалоЭлемента("Detail");
			
		
	ЗаписьXML.ЗаписатьКонецЭлемента();//Detail
	
	ЗаписьXML.ЗаписатьНачалоЭлемента("Footer");
		//ЗаписьXML.ЗаписатьНачалоЭлемента("Date");	
		//ЗаписьXML.ЗаписатьТекст(СтрЗаменить(ТекущаяДата(),":","-"));
		//ЗаписьXML.ЗаписатьКонецЭлемента();//Date
		//ЗаписьXML.ЗаписатьНачалоЭлемента("User");	
		//ЗаписьXML.ЗаписатьТекст(ЧистаяСтрока(UserName));
		//ЗаписьXML.ЗаписатьКонецЭлемента();//User
	ЗаписьXML.ЗаписатьКонецЭлемента();//Footer
	
	ЗаписьXML.ЗаписатьКонецЭлемента();//PrintData
	
	Возврат Истина;

	
КонецФункции
Функция SendPackToPrint(SN, UserName, DocID, Pack)
	
	УзелПО=НайтиУзел(SN);
	Если УзелПО=Неопределено тогда
		УзелПО = NewTSD(SN, UserName);
	КонецЕсли;


	КаталогСохранения = УзелПО.КаталогВыгрузкиФайлаПечати;
	
	Попытка
		СсылкаНаДок=Справочники.ДатаМобайл_ДокументыТСД.ПолучитьСсылку(Новый УникальныйИдентификатор(Сред(DocID,5)));
	Исключение
		Возврат ЛОЖЬ;
	КонецПопытки;
	
	ТЗСобранныеДанныеПодбор=СсылкаНаДок.СобранныеДанныеПодбор.Выгрузить();
	ТЗСобранныеДанныеПодбор.Свернуть("Номенклатура,ХарактеристикаНоменклатуры,НазваниеТовара,ЕдиницаИзмерения,ЯчейкаСсылка,СерийныйНомер,ШтрихКод,УпаковочныйЛист","Количество");
	
	ТЗСобранныеДанныеПриемка=СсылкаНаДок.СобранныеДанныеПриемка.Выгрузить();
	ТЗСобранныеДанныеПриемка.Свернуть("Номенклатура,ХарактеристикаНоменклатуры,НазваниеТовара,ЕдиницаИзмерения,ЯчейкаСсылка,СерийныйНомер,ШтрихКод,УпаковочныйЛист","Количество");
	
	СтруктураПоиска = Новый Структура("ТипОперации", "Печать упаковочного листа");
	
	СтрокиРеквизитов = УзелПО.Печать.НайтиСтроки(СтруктураПоиска);
		
	ЗаписьXML = Новый ЗаписьXML;
	
	ИмяФайла = СтрЗаменить(ТекущаяДата(),":","");
	ИмяФайла = СтрЗаменить(ИмяФайла, ".","");
	ИмяФайла = СтрЗаменить(ИмяФайла, " ","");

	Генератор = Новый ГенераторСлучайныхЧисел(1);
	ИдентификаторФайла = Генератор.СлучайноеЧисло(1, 1000);
	
	ИмяФайла = ИмяФайла+ИдентификаторФайла;
	
	Попытка
		ЗаписьXML.ОткрытьФайл(КаталогСохранения+ИмяФайла+".xml", "UTF-8");
	Исключение
		Возврат ЛОЖЬ;
	КонецПопытки;
		
	ЗаписьXML.ЗаписатьОбъявлениеXML();	
	
	ЗаписьXML.ЗаписатьНачалоЭлемента("PrintData");
	
		Count = 0 ;
		Для Н = 0 По СтрокиРеквизитов.Количество()-1 Цикл
			
		ЗаписьXML.ЗаписатьНачалоЭлемента("PrinterName");
			ЗаписьXML.ЗаписатьТекст(СтрокиРеквизитов[Н].ИмяПринтера);
		ЗаписьXML.ЗаписатьКонецЭлемента();		

		ЗаписьXML.ЗаписатьНачалоЭлемента("TemplateName");
			ЗаписьXML.ЗаписатьТекст(СтрокиРеквизитов[Н].ИмяШаблона);
		ЗаписьXML.ЗаписатьКонецЭлемента();		
		
		Count = Count+1;
		ЗаписьXML.ЗаписатьНачалоЭлемента("Count");
			ЗаписьXML.ЗаписатьТекст(Строка(Count));
		ЗаписьXML.ЗаписатьКонецЭлемента();		
		
		КонецЦикла;
		
	ЗаписьXML.ЗаписатьНачалоЭлемента("Head");
	
	
		ЗаписьXML.ЗаписатьНачалоЭлемента("Client");
		ЗаписьXML.ЗаписатьТекст(ЧистаяСтрока(СсылкаНаДок.Клиент));
		ЗаписьXML.ЗаписатьКонецЭлемента();//Client
		
		
		ЗаписьXML.ЗаписатьНачалоЭлемента("Date");
		ЗаписьXML.ЗаписатьТекст(ЧистаяСтрока(СсылкаНаДок.Дата));
		ЗаписьXML.ЗаписатьКонецЭлемента();//Date
		
		
		ЗаписьXML.ЗаписатьНачалоЭлемента("Number");
		ЗаписьXML.ЗаписатьТекст(ЧистаяСтрока(СсылкаНаДок.Номер));
		ЗаписьXML.ЗаписатьКонецЭлемента();//Number
		
		ЗаписьXML.ЗаписатьНачалоЭлемента("Barcode");
		ЗаписьXML.ЗаписатьТекст(ЧистаяСтрока(Pack));
		ЗаписьXML.ЗаписатьКонецЭлемента();//Barcode

		
		
		QRData = "";
		Для Каждого СтрокаТЧ ИЗ ТЗСобранныеДанныеПодбор Цикл
			Если СтрокаТЧ.УпаковочныйЛист = Pack + "////" Тогда	
				QRData = QRData + ЧистаяСтрока(СтрокаТЧ.Штрихкод)+"\r\n";
			КонецЕсли;
		КонецЦикла;
		
		Для Каждого СтрокаТЧ ИЗ ТЗСобранныеДанныеПриемка Цикл
			Если СтрокаТЧ.УпаковочныйЛист = Pack + "////" Тогда	
				QRData = QRData + ЧистаяСтрока(СтрокаТЧ.Штрихкод)+"\r\n";
			КонецЕсли;
		КонецЦикла;
		
		ЗаписьXML.ЗаписатьНачалоЭлемента("QRData");
		ЗаписьXML.ЗаписатьТекст(QRData);
		ЗаписьXML.ЗаписатьКонецЭлемента();//BC>
		
		
	ЗаписьXML.ЗаписатьКонецЭлемента();//Head
	
	ЗаписьXML.ЗаписатьНачалоЭлемента("Detail");
	
	ИтогоТоваров=0;
	  Для Каждого СтрокаТЧ ИЗ ТЗСобранныеДанныеПодбор Цикл
			Если СтрокаТЧ.УпаковочныйЛист = Pack +"////" Тогда 
				ЗаписьXML.ЗаписатьНачалоЭлемента("Item");
				
				ИтогоТоваров = ИтогоТоваров + СтрокаТЧ.Количество*?(СтрокаТЧ.ЕдиницаИзмерения.Числитель = 0,1,СтрокаТЧ.ЕдиницаИзмерения.Числитель);
				
				ЗаписьXML.ЗаписатьНачалоЭлемента("ArtName");
				ЗаписьXML.ЗаписатьТекст(ЧистаяСтрока(СтрокаТЧ.НазваниеТовара));
				ЗаписьXML.ЗаписатьКонецЭлемента();//ArtName
				ЗаписьXML.ЗаписатьНачалоЭлемента("Barcode");
				ЗаписьXML.ЗаписатьТекст(ЧистаяСтрока(СтрокаТЧ.ШтрихКод));
				ЗаписьXML.ЗаписатьКонецЭлемента();//Barcode              
				ЗаписьXML.ЗаписатьНачалоЭлемента("QNT");
				ЗаписьXML.ЗаписатьТекст(ЧистаяСтрока(СтрокаТЧ.Количество*?(СтрокаТЧ.ЕдиницаИзмерения.Числитель = 0,1,СтрокаТЧ.ЕдиницаИзмерения.Числитель)));
				ЗаписьXML.ЗаписатьКонецЭлемента();//QNT 
				
				ЗаписьXML.ЗаписатьНачалоЭлемента("QNTPack");
				ЗаписьXML.ЗаписатьТекст(ЧистаяСтрока(СтрокаТЧ.Количество));
				ЗаписьXML.ЗаписатьКонецЭлемента();//QNTPack

				ЗаписьXML.ЗаписатьНачалоЭлемента("Unit");
				ЗаписьXML.ЗаписатьТекст(ЧистаяСтрока(СтрокаТЧ.ЕдиницаИзмерения.Наименование));
				ЗаписьXML.ЗаписатьКонецЭлемента();//QNTPack 
			
				ЗаписьXML.ЗаписатьНачалоЭлемента("SN");
				ЗаписьXML.ЗаписатьТекст(ЧистаяСтрока(СтрокаТЧ.СерийныйНомер));
				ЗаписьXML.ЗаписатьКонецЭлемента();//SN

				ЗаписьXML.ЗаписатьКонецЭлемента();//Item

			КонецЕсли;
		КонецЦикла;
		
		Для Каждого СтрокаТЧ ИЗ ТЗСобранныеДанныеПриемка Цикл
			Если СтрокаТЧ.УпаковочныйЛист = Pack + "////" Тогда	
				ЗаписьXML.ЗаписатьНачалоЭлемента("Item");
				
				ИтогоТоваров = ИтогоТоваров + СтрокаТЧ.Количество*?(СтрокаТЧ.ЕдиницаИзмерения.Числитель = 0,1,СтрокаТЧ.ЕдиницаИзмерения.Числитель);
				
				ЗаписьXML.ЗаписатьНачалоЭлемента("ArtName");
				ЗаписьXML.ЗаписатьТекст(ЧистаяСтрока(СтрокаТЧ.НазваниеТовара));
				ЗаписьXML.ЗаписатьКонецЭлемента();//Param1
				ЗаписьXML.ЗаписатьНачалоЭлемента("Barcode");
				ЗаписьXML.ЗаписатьТекст(ЧистаяСтрока(СтрокаТЧ.ШтрихКод));
				ЗаписьXML.ЗаписатьКонецЭлемента();//Param2              
				ЗаписьXML.ЗаписатьНачалоЭлемента("QNT");
				ЗаписьXML.ЗаписатьТекст(ЧистаяСтрока(СтрокаТЧ.Количество*?(СтрокаТЧ.ЕдиницаИзмерения.Числитель = 0,1,СтрокаТЧ.ЕдиницаИзмерения.Числитель)));
				ЗаписьXML.ЗаписатьКонецЭлемента();//Param3  
				
				ЗаписьXML.ЗаписатьНачалоЭлемента("QNTPack");
				ЗаписьXML.ЗаписатьТекст(ЧистаяСтрока(СтрокаТЧ.Количество));
				ЗаписьXML.ЗаписатьКонецЭлемента();//QNTPack
				
				ЗаписьXML.ЗаписатьНачалоЭлемента("Unit");
				ЗаписьXML.ЗаписатьТекст(ЧистаяСтрока(СтрокаТЧ.ЕдиницаИзмерения.Наименование));
				ЗаписьXML.ЗаписатьКонецЭлемента();//Unit 

				
				ЗаписьXML.ЗаписатьНачалоЭлемента("SN");
				ЗаписьXML.ЗаписатьТекст(ЧистаяСтрока(СтрокаТЧ.СерийныйНомер));
				ЗаписьXML.ЗаписатьКонецЭлемента();//SN

				
				ЗаписьXML.ЗаписатьКонецЭлемента();//Item
			КонецЕсли;	
		КонецЦикла;
	
	ЗаписьXML.ЗаписатьКонецЭлемента();//Detail
	
	ЗаписьXML.ЗаписатьНачалоЭлемента("Summary");
		ЗаписьXML.ЗаписатьНачалоЭлемента("Itog");
		ЗаписьXML.ЗаписатьТекст("Итого:");
		ЗаписьXML.ЗаписатьКонецЭлемента();//ITOG ?
		ЗаписьXML.ЗаписатьНачалоЭлемента("Summ"); 
		ЗаписьXML.ЗаписатьТекст(ЧистаяСтрока(ИтогоТоваров));			
		ЗаписьXML.ЗаписатьКонецЭлемента();//Summ ?
		ЗаписьXML.ЗаписатьКонецЭлемента();//Summary
		
		ЗаписьXML.ЗаписатьНачалоЭлемента("Footer");
		
	
		Год = Строка(Формат(Год(ТекущаяДата()),"ЧГ="));
		Месяц = Строка(Месяц(ТекущаяДата()));
		День = Строка(День(ТекущаяДата()));
		ДатаСтрока = ГОД+Строка(Месяц)+Строка(День);
		ЗаписьXML.ЗаписатьНачалоЭлемента("Date");	
		ЗаписьXML.ЗаписатьТекст(ЧистаяСтрока(ГОД+Месяц+ДЕНЬ));
		ЗаписьXML.ЗаписатьКонецЭлемента();//Date
		ЗаписьXML.ЗаписатьНачалоЭлемента("User");	
		ЗаписьXML.ЗаписатьТекст(ЧистаяСтрока(UserName));
		ЗаписьXML.ЗаписатьКонецЭлемента();//User
	ЗаписьXML.ЗаписатьКонецЭлемента();//Footer
	
	ЗаписьXML.ЗаписатьКонецЭлемента();//PrintData
	
	
	Возврат Истина;  

КонецФункции
Функция SendDocToPrint(SN, UserName, DocID)
	
	УзелПО=НайтиУзел(SN);
	Если УзелПО=Неопределено тогда
		УзелПО = NewTSD(SN, UserName);
	КонецЕсли;


	КаталогСохранения = УзелПО.КаталогВыгрузкиФайлаПечати;
	
	Попытка
		СсылкаНаДок=Справочники.ДатаМобайл_ДокументыТСД.ПолучитьСсылку(Новый УникальныйИдентификатор(Сред(DocID,5)));
	Исключение
		Возврат ЛОЖЬ;
	КонецПопытки;
	
	ТЗСобранныеДанныеПодбор=СсылкаНаДок.СобранныеДанныеПодбор.Выгрузить();
	ТЗСобранныеДанныеПодбор.Свернуть("Номенклатура,ХарактеристикаНоменклатуры,НазваниеТовара,ЕдиницаИзмерения,ЯчейкаСсылка,СерийныйНомер,ШтрихКод,УпаковочныйЛист","Количество");
	
	ТЗСобранныеДанныеПриемка=СсылкаНаДок.СобранныеДанныеПриемка.Выгрузить();
	ТЗСобранныеДанныеПриемка.Свернуть("Номенклатура,ХарактеристикаНоменклатуры,НазваниеТовара,ЕдиницаИзмерения,ЯчейкаСсылка,СерийныйНомер,ШтрихКод,УпаковочныйЛист","Количество");
	
	СтруктураПоиска = Новый Структура("ТипОперации", "Печать упаковочного листа");
	
	СтрокиРеквизитов = УзелПО.Печать.НайтиСтроки(СтруктураПоиска);
		
	ЗаписьXML = Новый ЗаписьXML;
	
	ИмяФайла = СтрЗаменить(ТекущаяДата(),":","");
	ИмяФайла = СтрЗаменить(ИмяФайла, ".","");
	ИмяФайла = СтрЗаменить(ИмяФайла, " ","");

	Генератор = Новый ГенераторСлучайныхЧисел(1);
	ИдентификаторФайла = Генератор.СлучайноеЧисло(1, 1000);
	
	ИмяФайла = ИмяФайла+ИдентификаторФайла;
	
	Попытка
		ЗаписьXML.ОткрытьФайл(КаталогСохранения+ИмяФайла+".xml", "UTF-8");
	Исключение
		Возврат ЛОЖЬ;
	КонецПопытки;
		
	ЗаписьXML.ЗаписатьОбъявлениеXML();	
	
	ЗаписьXML.ЗаписатьНачалоЭлемента("PrintData");
	
		Count = 0 ;
		Для Н = 0 По СтрокиРеквизитов.Количество()-1 Цикл
			
		ЗаписьXML.ЗаписатьНачалоЭлемента("PrinterName");
			ЗаписьXML.ЗаписатьТекст(СтрокиРеквизитов[Н].ИмяПринтера);
		ЗаписьXML.ЗаписатьКонецЭлемента();		

		ЗаписьXML.ЗаписатьНачалоЭлемента("TemplateName");
			ЗаписьXML.ЗаписатьТекст(СтрокиРеквизитов[Н].ИмяШаблона);
		ЗаписьXML.ЗаписатьКонецЭлемента();		
		
		Count = Count+1;
		ЗаписьXML.ЗаписатьНачалоЭлемента("Count");
			ЗаписьXML.ЗаписатьТекст(Строка(Count));
		ЗаписьXML.ЗаписатьКонецЭлемента();		
		
		КонецЦикла;
		
	ЗаписьXML.ЗаписатьНачалоЭлемента("Head");
	
	
		ЗаписьXML.ЗаписатьНачалоЭлемента("Client");
		ЗаписьXML.ЗаписатьТекст(ЧистаяСтрока(СсылкаНаДок.Клиент));
		ЗаписьXML.ЗаписатьКонецЭлемента();//Client
		
		
		ЗаписьXML.ЗаписатьНачалоЭлемента("Date");
		ЗаписьXML.ЗаписатьТекст(ЧистаяСтрока(СсылкаНаДок.Дата));
		ЗаписьXML.ЗаписатьКонецЭлемента();//Date
		
		
		ЗаписьXML.ЗаписатьНачалоЭлемента("Number");
		ЗаписьXML.ЗаписатьТекст(ЧистаяСтрока(СсылкаНаДок.Номер));
		ЗаписьXML.ЗаписатьКонецЭлемента();//Number
		
		
		QRData = "";
		Для Каждого СтрокаТЧ ИЗ ТЗСобранныеДанныеПодбор Цикл
				QRData = QRData + ЧистаяСтрока(СтрокаТЧ.Штрихкод)+"\r\n";
		КонецЦикла;
		
		Для Каждого СтрокаТЧ ИЗ ТЗСобранныеДанныеПриемка Цикл
				QRData = QRData + ЧистаяСтрока(СтрокаТЧ.Штрихкод)+"\r\n";
		КонецЦикла;
		
		ЗаписьXML.ЗаписатьНачалоЭлемента("QRData");
		ЗаписьXML.ЗаписатьТекст(QRData);
		ЗаписьXML.ЗаписатьКонецЭлемента();//BC>
		
		
	ЗаписьXML.ЗаписатьКонецЭлемента();//Head
	
	ЗаписьXML.ЗаписатьНачалоЭлемента("Detail");
	
	ИтогоТоваров=0;
	  Для Каждого СтрокаТЧ ИЗ ТЗСобранныеДанныеПодбор Цикл
				ЗаписьXML.ЗаписатьНачалоЭлемента("Item");
				
				ИтогоТоваров = ИтогоТоваров + СтрокаТЧ.Количество*?(СтрокаТЧ.ЕдиницаИзмерения.Числитель = 0,1,СтрокаТЧ.ЕдиницаИзмерения.Числитель);
				
				ЗаписьXML.ЗаписатьНачалоЭлемента("ArtName");
				ЗаписьXML.ЗаписатьТекст(ЧистаяСтрока(СтрокаТЧ.НазваниеТовара));
				ЗаписьXML.ЗаписатьКонецЭлемента();//ArtName
				ЗаписьXML.ЗаписатьНачалоЭлемента("Barcode");
				ЗаписьXML.ЗаписатьТекст(ЧистаяСтрока(СтрокаТЧ.ШтрихКод));
				ЗаписьXML.ЗаписатьКонецЭлемента();//Barcode              
				ЗаписьXML.ЗаписатьНачалоЭлемента("QNT");
				ЗаписьXML.ЗаписатьТекст(ЧистаяСтрока(СтрокаТЧ.Количество*?(СтрокаТЧ.ЕдиницаИзмерения.Числитель = 0,1,СтрокаТЧ.ЕдиницаИзмерения.Числитель)));
				ЗаписьXML.ЗаписатьКонецЭлемента();//QNT 
				
				ЗаписьXML.ЗаписатьНачалоЭлемента("QNTPack");
				ЗаписьXML.ЗаписатьТекст(ЧистаяСтрока(СтрокаТЧ.Количество));
				ЗаписьXML.ЗаписатьКонецЭлемента();//QNTPack

				ЗаписьXML.ЗаписатьНачалоЭлемента("Unit");
				ЗаписьXML.ЗаписатьТекст(ЧистаяСтрока(СтрокаТЧ.ЕдиницаИзмерения.Наименование));
				ЗаписьXML.ЗаписатьКонецЭлемента();//Unit 
			
				ЗаписьXML.ЗаписатьНачалоЭлемента("SN");
				ЗаписьXML.ЗаписатьТекст(ЧистаяСтрока(СтрокаТЧ.СерийныйНомер));
				ЗаписьXML.ЗаписатьКонецЭлемента();//SN
				
				ЗаписьXML.ЗаписатьНачалоЭлемента("Pack");
				ЗаписьXML.ЗаписатьТекст(ЧистаяСтрока(СтрЗаменить(СтрокаТЧ.УпаковочныйЛист,"////","")));
				ЗаписьXML.ЗаписатьКонецЭлемента();//Pack

				ЗаписьXML.ЗаписатьКонецЭлемента();//Item
		КонецЦикла;
		
		Для Каждого СтрокаТЧ ИЗ ТЗСобранныеДанныеПриемка Цикл
				ЗаписьXML.ЗаписатьНачалоЭлемента("Item");
				
				ИтогоТоваров = ИтогоТоваров + СтрокаТЧ.Количество*?(СтрокаТЧ.ЕдиницаИзмерения.Числитель = 0,1,СтрокаТЧ.ЕдиницаИзмерения.Числитель);
				
				ЗаписьXML.ЗаписатьНачалоЭлемента("ArtName");
				ЗаписьXML.ЗаписатьТекст(ЧистаяСтрока(СтрокаТЧ.НазваниеТовара));
				ЗаписьXML.ЗаписатьКонецЭлемента();//Param1
				ЗаписьXML.ЗаписатьНачалоЭлемента("Barcode");
				ЗаписьXML.ЗаписатьТекст(ЧистаяСтрока(СтрокаТЧ.ШтрихКод));
				ЗаписьXML.ЗаписатьКонецЭлемента();//Param2              
				ЗаписьXML.ЗаписатьНачалоЭлемента("QNT");
				ЗаписьXML.ЗаписатьТекст(ЧистаяСтрока(СтрокаТЧ.Количество*?(СтрокаТЧ.ЕдиницаИзмерения.Числитель = 0,1,СтрокаТЧ.ЕдиницаИзмерения.Числитель)));
				ЗаписьXML.ЗаписатьКонецЭлемента();//Param3  
				
				ЗаписьXML.ЗаписатьНачалоЭлемента("QNTPack");
				ЗаписьXML.ЗаписатьТекст(ЧистаяСтрока(СтрокаТЧ.Количество));
				ЗаписьXML.ЗаписатьКонецЭлемента();//QNTPack
				
				ЗаписьXML.ЗаписатьНачалоЭлемента("Unit");
				ЗаписьXML.ЗаписатьТекст(ЧистаяСтрока(СтрокаТЧ.ЕдиницаИзмерения.Наименование));
				ЗаписьXML.ЗаписатьКонецЭлемента();//QNTPack 
				
				ЗаписьXML.ЗаписатьНачалоЭлемента("SN");
				ЗаписьXML.ЗаписатьТекст(ЧистаяСтрока(СтрокаТЧ.СерийныйНомер));
				ЗаписьXML.ЗаписатьКонецЭлемента();//SN

				ЗаписьXML.ЗаписатьНачалоЭлемента("Pack");
				ЗаписьXML.ЗаписатьТекст(ЧистаяСтрока(СтрЗаменить(СтрокаТЧ.УпаковочныйЛист,"////","")));
				ЗаписьXML.ЗаписатьКонецЭлемента();//Pack
				
				ЗаписьXML.ЗаписатьКонецЭлемента();//Item
		КонецЦикла;
	
	ЗаписьXML.ЗаписатьКонецЭлемента();//Detail
	
	ЗаписьXML.ЗаписатьНачалоЭлемента("Summary");
		ЗаписьXML.ЗаписатьНачалоЭлемента("Itog");
		ЗаписьXML.ЗаписатьТекст("Итого:");
		ЗаписьXML.ЗаписатьКонецЭлемента();//ITOG ?
		ЗаписьXML.ЗаписатьНачалоЭлемента("Summ"); 
		ЗаписьXML.ЗаписатьТекст(ЧистаяСтрока(ИтогоТоваров));			
		ЗаписьXML.ЗаписатьКонецЭлемента();//Summ ?
		ЗаписьXML.ЗаписатьКонецЭлемента();//Summary
		
		ЗаписьXML.ЗаписатьНачалоЭлемента("Footer");
		
	
		Год = Строка(Формат(Год(ТекущаяДата()),"ЧГ="));
		Месяц = Строка(Месяц(ТекущаяДата()));
		День = Строка(День(ТекущаяДата()));
		ДатаСтрока = ГОД+Строка(Месяц)+Строка(День);
		ЗаписьXML.ЗаписатьНачалоЭлемента("Date");	
		ЗаписьXML.ЗаписатьТекст(ЧистаяСтрока(ГОД+Месяц+ДЕНЬ));
		ЗаписьXML.ЗаписатьКонецЭлемента();//Date
		ЗаписьXML.ЗаписатьНачалоЭлемента("User");	
		ЗаписьXML.ЗаписатьТекст(ЧистаяСтрока(UserName));
		ЗаписьXML.ЗаписатьКонецЭлемента();//User
	ЗаписьXML.ЗаписатьКонецЭлемента();//Footer
	
	ЗаписьXML.ЗаписатьКонецЭлемента();//PrintData
	
	
	Возврат Истина;  

КонецФункции

Функция SendEgaisBlankABToPrint(SN, UserName, DocID, ArtID, Barcode, Alcocode, BlankA, BlankB)
	
	УзелПО=НайтиУзел(SN);
	Если УзелПО=Неопределено тогда
		УзелПО = NewTSD(SN, UserName);
	КонецЕсли;


	КаталогСохранения = УзелПО.КаталогВыгрузкиФайлаПечати;
	
	Попытка
		СсылкаНаДок=Справочники.ДатаМобайл_ДокументыТСД.ПолучитьСсылку(Новый УникальныйИдентификатор(Сред(DocID,5)));
	Исключение
		Возврат ЛОЖЬ;
	КонецПопытки;
	
	СтруктураПоиска = Новый Структура("ТипОперации", "Печать справок ЕГАИС");
	
	СтрокиРеквизитов = УзелПО.Печать.НайтиСтроки(СтруктураПоиска);
		
	ЗаписьXML = Новый ЗаписьXML;
	
	ИмяФайла = СтрЗаменить(ТекущаяДата(),":","");
	ИмяФайла = СтрЗаменить(ИмяФайла, ".","");
	ИмяФайла = СтрЗаменить(ИмяФайла, " ","");

	Генератор = Новый ГенераторСлучайныхЧисел(1);
	ИдентификаторФайла = Генератор.СлучайноеЧисло(1, 1000);
	
	ИмяФайла = ИмяФайла+ИдентификаторФайла;
	
	Попытка
		ЗаписьXML.ОткрытьФайл(КаталогСохранения+ИмяФайла+".xml", "UTF-8");
	Исключение
		Возврат ЛОЖЬ;
	КонецПопытки;
		
	ЗаписьXML.ЗаписатьОбъявлениеXML();	
	
	ЗаписьXML.ЗаписатьНачалоЭлемента("PrintData");
	
		Count = 0 ;
		Для Н = 0 По СтрокиРеквизитов.Количество()-1 Цикл
			
		ЗаписьXML.ЗаписатьНачалоЭлемента("PrinterName");
			ЗаписьXML.ЗаписатьТекст(СтрокиРеквизитов[Н].ИмяПринтера);
		ЗаписьXML.ЗаписатьКонецЭлемента();		

		ЗаписьXML.ЗаписатьНачалоЭлемента("TemplateName");
			ЗаписьXML.ЗаписатьТекст(СтрокиРеквизитов[Н].ИмяШаблона);
		ЗаписьXML.ЗаписатьКонецЭлемента();		
		
		Count = Count+1;
		ЗаписьXML.ЗаписатьНачалоЭлемента("Count");
			ЗаписьXML.ЗаписатьТекст(Строка(Count));
		ЗаписьXML.ЗаписатьКонецЭлемента();		
		
		КонецЦикла;
		
	ЗаписьXML.ЗаписатьНачалоЭлемента("Head");
	
	Алкоголь = Справочники.ВидыАлкогольнойПродукции.НайтиПоКоду(СокрЛП(Alcocode));
	
		ЗаписьXML.ЗаписатьНачалоЭлемента("ArtName");
			ЗаписьXML.ЗаписатьТекст(Строка(Алкоголь.Наименование));
		ЗаписьXML.ЗаписатьКонецЭлемента();	//ArtName	
		
		ЗаписьXML.ЗаписатьНачалоЭлемента("Alcocode");
			ЗаписьXML.ЗаписатьТекст(ЧистаяСтрока(Alcocode));
		ЗаписьXML.ЗаписатьКонецЭлемента();	//Alcocode	

		ЗаписьXML.ЗаписатьНачалоЭлемента("BlankA");
			ЗаписьXML.ЗаписатьТекст(ЧистаяСтрока(BlankA));
		ЗаписьXML.ЗаписатьКонецЭлемента();	//BlankA	
		
		ЗаписьXML.ЗаписатьНачалоЭлемента("BlankB");
			ЗаписьXML.ЗаписатьТекст(ЧистаяСтрока(BlankB));
		ЗаписьXML.ЗаписатьКонецЭлемента();	//BlankB	
		
	ЗаписьXML.ЗаписатьКонецЭлемента();//Head
	
	ЗаписьXML.ЗаписатьКонецЭлемента();//PrintData
	
	Возврат Истина;  
	
КонецФункции
//////////////////////////////////////////////////////////////////////////////
Функция GetArtCellsSelect(SN, UserName, DocID, ArtID)
			
	ОбъектСписка=ФабрикаXDTO.Создать(ФабрикаXDTO.Тип("http://www.data-mobile.ru","DMCellList"));
	
	УзелПО=НайтиУзел(SN);
	Если УзелПО=Неопределено тогда
		УзелПО = NewTSD(SN, UserName);
	КонецЕсли;

	
	ЕСЛИ ArtID = "" ТОГДА 
		Возврат ОбъектСписка;
	КОНЕЦЕСЛИ;
	
	Если Лев(ArtID,3)="8U-" тогда
		лТовар=Справочники.Номенклатура.ПолучитьСсылку(Новый УникальныйИдентификатор(Сред(ArtID,4,36)));
		//ИДХК=Сред(ArtID,40,36);
		//Если ИДХК<>"00000000-0000-0000-0000-000000000000" тогда
		//	лХарактеристикаНоменклатуры=Справочники.ХарактеристикиНоменклатуры.ПолучитьСсылку(Новый УникальныйИдентификатор(ИДХК));
		//КонецЕсли;
	ИначеЕсли Лев(ArtID,3)="8n-" Тогда
		лТовар=Справочники.ДатаМобайл_НовыеТовары.ПолучитьСсылку(Новый УникальныйИдентификатор(Сред(ArtID,4)));
	Иначе   
		лТовар=Справочники.Номенклатура.ПолучитьСсылку(Новый УникальныйИдентификатор(СРЕД(ArtID,4)));
	КонецЕсли;
	

	Запрос=Новый Запрос("ВЫБРАТЬ РАЗЛИЧНЫЕ
	                    |	СУММА(ТоварыВЯчейкахОстатки.ВНаличииОстаток) КАК DMTaskQnt,
	                    |	ТоварыВЯчейкахОстатки.Ячейка.Код КАК DMCellName,
	                    |	ТоварыВЯчейкахОстатки.Ячейка.Ссылка
	                    |ПОМЕСТИТЬ тЯчейки
	                    |ИЗ
	                    |	РегистрНакопления.ТоварыВЯчейках.Остатки КАК ТоварыВЯчейкахОстатки
	                    |ГДЕ
	                    |	НЕ ТоварыВЯчейкахОстатки.Ячейка.ПометкаУдаления
	                    |	И НЕ ТоварыВЯчейкахОстатки.Ячейка.ЭтоГруппа
	                    |	И ТоварыВЯчейкахОстатки.Номенклатура = &лТовар
	                    |	И ТоварыВЯчейкахОстатки.Ячейка.ТипСкладскойЯчейки = &Хранение
	                    |
	                    |СГРУППИРОВАТЬ ПО
	                    |	ТоварыВЯчейкахОстатки.Ячейка.Наименование,
	                    |	ТоварыВЯчейкахОстатки.Ячейка.Ссылка,
	                    |	ТоварыВЯчейкахОстатки.Ячейка.Код
	                    |;
	                    |
	                    |////////////////////////////////////////////////////////////////////////////////
	                    |ВЫБРАТЬ
	                    |	тЯчейки.DMTaskQnt,
	                    |	тЯчейки.DMCellName,
	                    |	тЯчейки.ЯчейкаСсылка КАК Ссылка
	                    |ИЗ
	                    |	тЯчейки КАК тЯчейки");
						
	Запрос.УстановитьПараметр("лТовар", лТовар);
	Запрос.УстановитьПараметр("Хранение", Перечисления.ТипыСкладскихЯчеек.Хранение);
	
	Рез=Запрос.Выполнить().Выбрать();
	Пока Рез.Следующий() цикл
		ОбъектЯчейки=ФабрикаXDTO.Создать(ФабрикаXDTO.Тип("http://www.data-mobile.ru","DMCell"));
		ЗаполнитьЗначенияСвойств(ОбъектЯчейки,Рез);
		
		ОбъектЯчейки.DMBarcode = ?(УзелПО.ВыгружатьВКодЯчейки=0,Строка(Рез.Ссылка.Код), Строка(ШтрихкодированиеПечатныхФорм.ЧисловойКодПоСсылке(Рез.Ссылка)));
		ОбъектЯчейки.DMCellName = ?(УзелПО.ВыгружатьВНаименованиеЯчейки=0,ЧистаяСтрока(Рез.Ссылка.Наименование), Рез.Ссылка.Код);

		
		ОбъектСписка.DMCell.Добавить(ОбъектЯчейки);
	КонецЦикла;	

	Возврат ОбъектСписка;

КонецФункции
Функция GetArtCellsInsert(SN, UserName, DocID, ArtID)
	ОбъектСписка=ФабрикаXDTO.Создать(ФабрикаXDTO.Тип("http://www.data-mobile.ru","DMCellList"));
	УзелПО=НайтиУзел(SN);
	Если УзелПО=Неопределено тогда
		УзелПО = NewTSD(SN, UserName);
	КонецЕсли;

	ЕСЛИ ArtID = "" ТОГДА 
		Возврат ОбъектСписка;
	КОНЕЦЕСЛИ;
	
	Если Лев(ArtID,3)="8U-" тогда
		лТовар=Справочники.Номенклатура.ПолучитьСсылку(Новый УникальныйИдентификатор(Сред(ArtID,4,36)));
		//ИДХК=Сред(ArtID,40,36);
		//Если ИДХК<>"00000000-0000-0000-0000-000000000000" тогда
		//	лХарактеристикаНоменклатуры=Справочники.ХарактеристикиНоменклатуры.ПолучитьСсылку(Новый УникальныйИдентификатор(ИДХК));
		//КонецЕсли;
	ИначеЕсли Лев(ArtID,3)="8n-" Тогда
		лТовар=Справочники.ДатаМобайл_НовыеТовары.ПолучитьСсылку(Новый УникальныйИдентификатор(Сред(ArtID,4)));
	Иначе   
		лТовар=Справочники.Номенклатура.ПолучитьСсылку(Новый УникальныйИдентификатор(СРЕД(ArtID,4)));
	КонецЕсли;
	

	Запрос=Новый Запрос("ВЫБРАТЬ РАЗЛИЧНЫЕ
	                    |	СУММА(ТоварыВЯчейкахОстатки.ВНаличииОстаток) КАК DMTaskQnt,
	                    |	ТоварыВЯчейкахОстатки.Ячейка.Код КАК DMCellName,
	                    |	ТоварыВЯчейкахОстатки.Ячейка.Ссылка
	                    |ПОМЕСТИТЬ тЯчейки
	                    |ИЗ
	                    |	РегистрНакопления.ТоварыВЯчейках.Остатки КАК ТоварыВЯчейкахОстатки
	                    |ГДЕ
	                    |	НЕ ТоварыВЯчейкахОстатки.Ячейка.ПометкаУдаления
	                    |	И НЕ ТоварыВЯчейкахОстатки.Ячейка.ЭтоГруппа
	                    |	И ТоварыВЯчейкахОстатки.Номенклатура = &лТовар
	                    |	И ТоварыВЯчейкахОстатки.Ячейка.ТипСкладскойЯчейки = &Хранение
	                    |
	                    |СГРУППИРОВАТЬ ПО
	                    |	ТоварыВЯчейкахОстатки.Ячейка.Наименование,
	                    |	ТоварыВЯчейкахОстатки.Ячейка.Ссылка,
	                    |	ТоварыВЯчейкахОстатки.Ячейка.Код
	                    |;
	                    |
	                    |////////////////////////////////////////////////////////////////////////////////
	                    |ВЫБРАТЬ
	                    |	тЯчейки.DMTaskQnt,
	                    |	тЯчейки.DMCellName,
	                    |	тЯчейки.ЯчейкаСсылка КАК Ссылка
	                    |ИЗ
	                    |	тЯчейки КАК тЯчейки");
						
	Запрос.УстановитьПараметр("лТовар", лТовар);
	Запрос.УстановитьПараметр("Хранение", Перечисления.ТипыСкладскихЯчеек.Хранение);
	
	Рез=Запрос.Выполнить().Выбрать();
	Пока Рез.Следующий() цикл
		ОбъектЯчейки=ФабрикаXDTO.Создать(ФабрикаXDTO.Тип("http://www.data-mobile.ru","DMCell"));

		ЗаполнитьЗначенияСвойств(ОбъектЯчейки,Рез);
		ОбъектЯчейки.DMBarcode = ?(УзелПО.ВыгружатьВКодЯчейки=0,Строка(Рез.Ссылка.Код), Строка(ШтрихкодированиеПечатныхФорм.ЧисловойКодПоСсылке(Рез.Ссылка)));
		ОбъектЯчейки.DMCellName = ?(УзелПО.ВыгружатьВНаименованиеЯчейки=0,ЧистаяСтрока(Рез.Ссылка.Наименование), Рез.Ссылка.Код);

		ОбъектСписка.DMCell.Добавить(ОбъектЯчейки);
	КонецЦикла;	

	Возврат ОбъектСписка;

КонецФункции
Функция GetArtCells(SN, UserName, DocID, ArtID)
	
	УзелПО=НайтиУзел(SN);
	Если УзелПО=Неопределено тогда
		УзелПО = NewTSD(SN, UserName);
	КонецЕсли;


	ОбъектСписка=ФабрикаXDTO.Создать(ФабрикаXDTO.Тип("http://www.data-mobile.ru","DMCellList"));
	
	Если Лев(ArtID,3)="8U-" тогда
		лТовар=Справочники.Номенклатура.ПолучитьСсылку(Новый УникальныйИдентификатор(Сред(ArtID,4,36)));
		//ИДХК=Сред(ArtID,40,36);
		//Если ИДХК<>"00000000-0000-0000-0000-000000000000" тогда
		//	лХарактеристикаНоменклатуры=Справочники.ХарактеристикиНоменклатуры.ПолучитьСсылку(Новый УникальныйИдентификатор(ИДХК));
		//КонецЕсли;
	ИначеЕсли Лев(ArtID,3)="8n-" Тогда
		лТовар=Справочники.ДатаМобайл_НовыеТовары.ПолучитьСсылку(Новый УникальныйИдентификатор(Сред(ArtID,4)));
	Иначе   
		лТовар=Справочники.Номенклатура.ПолучитьСсылку(Новый УникальныйИдентификатор(СРЕД(ArtID,4)));
	КонецЕсли;
	

	Запрос=Новый Запрос("ВЫБРАТЬ РАЗЛИЧНЫЕ
	                    |	СУММА(ТоварыВЯчейкахОстатки.ВНаличииОстаток) КАК DMTaskQNT,
	                    |	ТоварыВЯчейкахОстатки.Ячейка.Код КАК Код,
	                    |	ТоварыВЯчейкахОстатки.Ячейка.Ссылка КАК Ссылка,
	                    |	ТоварыВЯчейкахОстатки.Ячейка.Наименование КАК Описание
	                    |ПОМЕСТИТЬ тЯчейки
	                    |ИЗ
	                    |	РегистрНакопления.ТоварыВЯчейках.Остатки КАК ТоварыВЯчейкахОстатки
	                    |ГДЕ
	                    |	НЕ ТоварыВЯчейкахОстатки.Ячейка.ПометкаУдаления
	                    |	И НЕ ТоварыВЯчейкахОстатки.Ячейка.ЭтоГруппа
	                    |	И ТоварыВЯчейкахОстатки.Номенклатура = &лТовар
	                    |	И ТоварыВЯчейкахОстатки.Ячейка.ТипСкладскойЯчейки = &Хранение
	                    |
	                    |СГРУППИРОВАТЬ ПО
	                    |	ТоварыВЯчейкахОстатки.Ячейка.Ссылка,
	                    |	ТоварыВЯчейкахОстатки.Ячейка.Код,
	                    |	ТоварыВЯчейкахОстатки.Ячейка.Наименование
	                    |;
	                    |
	                    |////////////////////////////////////////////////////////////////////////////////
	                    |ВЫБРАТЬ
	                    |	тЯчейки.DMTaskQNT,
	                    |	тЯчейки.Код,
	                    |	тЯчейки.Ссылка,
	                    |	тЯчейки.Описание
	                    |ИЗ
	                    |	тЯчейки КАК тЯчейки");
						
	Запрос.УстановитьПараметр("лТовар", лТовар);
	Запрос.УстановитьПараметр("Хранение", Перечисления.ТипыСкладскихЯчеек.Хранение);
	
	Рез=Запрос.Выполнить().Выбрать();
	Пока Рез.Следующий() цикл
		ОбъектЯчейки=ФабрикаXDTO.Создать(ФабрикаXDTO.Тип("http://www.data-mobile.ru","DMCell"));
		ОбъектЯчейки.DMBarcode = ?(УзелПО.ВыгружатьВКодЯчейки=0,Строка(Рез.Код), Строка(ШтрихкодированиеПечатныхФорм.ЧисловойКодПоСсылке(Рез.Ссылка)));
		ОбъектЯчейки.DMCellName = ?(УзелПО.ВыгружатьВНаименованиеЯчейки=0,ЧистаяСтрока(Рез.Описание), Рез.Код);
		ОбъектЯчейки.DMTaskQnt = рез.DMTaskQnt;
		ОбъектСписка.DMCell.Добавить(ОбъектЯчейки);
	КонецЦикла;	

	Возврат ОбъектСписка;


	
КонецФункции
//////////////////////////////////////////////////////////////////////////////

Функция SetArtPhoto(SN, UserName, DMImage)
	УзелПО=НайтиУзел(SN);
	Если УзелПО=Неопределено тогда
		УзелПО = NewTSD(SN, UserName);
	КонецЕсли;

	
	Если Лев(DMImage.DMArtID,3)="8U-" тогда
		Номенклатура=Справочники.Номенклатура.ПолучитьСсылку(Новый УникальныйИдентификатор(Сред(DMImage.DMArtID,4)));
	ИначеЕсли Лев(DMImage.DMArtID,3)="8e-" Тогда 
		НоменклатураЕГАИС = Справочники.КлассификаторАлкогольнойПродукцииЕГАИС.ПолучитьСсылку(Новый УникальныйИдентификатор(Сред(DMImage.DMArtID,4)));
		Если ТоварСопоставленОдинКОдному(НоменклатураЕГАИС) Тогда
			Номенклатура = ДатаМобайл_ОбщийМодуль.ПолучитьНоменклатуруПоЕГАИС(НоменклатураЕГАИС);
		Иначе 
	   	 ВызватьИсключениеВС("SetArtPhoto. Не найдена номенклатура. ");
		КонецЕсли;	
	Иначе 
		ВызватьИсключениеВС("SetArtPhoto. Не найдена номенклатура. ");
	КонецЕсли;
	
	
	Попытка	
		АдресФайлаВХранилище = ПоместитьВоВременноеХранилище(DMImage.DMImageData);
		
		ПараметрыФайла = Новый Структура;
		ПараметрыФайла.Вставить("ВладелецФайлов", Номенклатура);
		лАвтор = Справочники.Пользователи.НайтиПоНаименованию(UserName);
		Если лАвтор.Пустая() тогда
			ВыборкаПользователей = Справочники.Пользователи.Выбрать();
			Пока  ВыборкаПользователей.Следующий() цикл
				Если ВыборкаПользователей.Наименование<>"<Не указан>" тогда
					лАвтор = ВыборкаПользователей.Ссылка;
				Прервать;
				КонецЕсли;	
			КонецЦикла;	
		КонецЕсли;	
		ПараметрыФайла.Вставить("Автор", лАвтор);
		ПараметрыФайла.Вставить("ИмяБезРасширения", НСтр("ru = 'Изображение из DataMobile'"));
		ПараметрыФайла.Вставить("РасширениеБезТочки", "jpg");
		ПараметрыФайла.Вставить("ВремяИзменения", Неопределено);
		ПараметрыФайла.Вставить("ВремяИзмененияУниверсальное", Неопределено);
		
		ПрисоединенныйФайл = ДатаМобайл_ОбщийМодуль.ДобавитьФайл(ПараметрыФайла, АдресФайлаВХранилище);
		
		Если Номенклатура.ФайлКартинки.Пустая() Тогда
			НоменклатураОбъект =  Номенклатура.ПолучитьОбъект();
			НоменклатураОбъект.ФайлКартинки =  ПрисоединенныйФайл.Ссылка;
			НоменклатураОбъект.Записать();
		КонецЕсли;
		

		Возврат "8i-"+Строка(ПрисоединенныйФайл.УникальныйИдентификатор());
	Исключение
		ВызватьИсключениеВС("SetArtPhoto. Ошибка добавления изображения. "+ОписаниеОшибки());
		Возврат "";
	КонецПопытки;	
КонецФункции
Функция DeleteArtPhoto(SN, UserName, ArtID, DMImageID)
	
	УзелПО=НайтиУзел(SN);
	Если УзелПО=Неопределено тогда
		УзелПО = NewTSD(SN, UserName);
	КонецЕсли;

	
	Если Лев(DMImageID,3)="8i-" тогда
		Изображение=Справочники.НоменклатураПрисоединенныеФайлы.ПолучитьСсылку(Новый УникальныйИдентификатор(Сред(DMImageID,4)));
	Иначе
		ВызватьИсключениеВС("DeleteArtPhoto. Не найдено изображение для удаления. ");
		Возврат Ложь;
	КонецЕсли;
	
	Попытка
		ИзображениеОбъект = Изображение.ПолучитьОбъект();
		ИзображениеОбъект.ПометкаУдаления = Истина;
		ИзображениеОбъект.Записать();
	Исключение
 		ВызватьИсключениеВС("DeleteArtPhoto. Ошибка удаления изображения. "+ ОписаниеОшибки());
		Возврат Ложь;
	КонецПопытки;	
	
	Возврат Истина;
КонецФункции
Функция GetArtPhotos(SN, UserName, ArtID)
	ОбъектСписка=ФабрикаXDTO.Создать(ФабрикаXDTO.Тип("http://www.data-mobile.ru","DMImageList"));
	УзелПО=НайтиУзел(SN);
	Если УзелПО=Неопределено тогда
		УзелПО = NewTSD(SN, UserName);
	КонецЕсли;

	
	Если Лев(ArtID,3)="8U-" тогда
		Номенклатура=Справочники.Номенклатура.ПолучитьСсылку(Новый УникальныйИдентификатор(Сред(ArtID,4)));
	ИначеЕсли Лев(ArtID,3)="8e-" Тогда
		 НоменклатураЕГАИС = Справочники.КлассификаторАлкогольнойПродукцииЕГАИС.ПолучитьСсылку(Новый УникальныйИдентификатор(Сред(ArtID,4)));
	     Если ТоварСопоставленОдинКОдному(НоменклатураЕГАИС) Тогда
			Номенклатура = ДатаМобайл_ОбщийМодуль.ПолучитьНоменклатуруПоЕГАИС(НоменклатураЕГАИС);
		Иначе 
	   	 Возврат ОбъектСписка;
		КонецЕсли;
	Иначе
		Возврат ОбъектСписка;
	КонецЕсли;
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Номенклатура", Номенклатура);
	Запрос.Текст ="ВЫБРАТЬ РАЗРЕШЕННЫЕ
	              |	Файлы.Ссылка КАК Файл,
				  |	Файлы.ВладелецФайла КАК Номенклатура,
	              |	Файлы.Наименование КАК Наименование,
	              |	Файлы.Описание КАК Описание,
	              |	Файлы.Том КАК Том,
	              |	Файлы.Расширение КАК Расширение,
	              |	Файлы.ПутьКФайлу КАК ПутьКФайлу
	              |ИЗ
	              |	Справочник.НоменклатураПрисоединенныеФайлы КАК Файлы
	              |ГДЕ
	              |	Файлы.ВладелецФайла = &Номенклатура
				  |	И НЕ Файлы.ПометкаУдаления
	              |УПОРЯДОЧИТЬ ПО
	              |	Номенклатура";

	Выборка = Запрос.Выполнить().Выбрать();	
	Пока Выборка.Следующий() цикл
		ОбъектКартинки=ФабрикаXDTO.Создать(ФабрикаXDTO.Тип("http://www.data-mobile.ru","DMImage"));
		ОбъектКартинки.DMArtID = ArtID;
		ОбъектКартинки.DMImageID = "8i-"+Строка(Выборка.Файл.УникальныйИдентификатор());
		//ОбъектКартинки.DMImageData = ПолучитьИзвременногоХранилища(РаботаСФайлами.ДанныеФайла(Выборка.Файл, Новый УникальныйИдентификатор).СсылкаНаДвоичныеДанныеФайла);
		ОбъектКартинки.DMImageData = ПолучитьИзвременногоХранилища(ДатаМобайл_ОбщийМодуль.ДанныеФайла(Выборка.Файл, Новый УникальныйИдентификатор).СсылкаНаДвоичныеДанныеФайла);

		ОбъектСписка.DMImage.Добавить(ОбъектКартинки);
	КонецЦикла;
	
	Возврат ОбъектСписка;

КонецФункции
Функция GetArtsPhotos(SN, UserName)
	
	ОбъектСписка=ФабрикаXDTO.Создать(ФабрикаXDTO.Тип("http://www.data-mobile.ru","DMImageList"));
	УзелПО=НайтиУзел(SN);
	Если УзелПО=Неопределено тогда
		УзелПО = NewTSD(SN, UserName);
	КонецЕсли;
 	
	
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос;
	
	Запрос.Текст ="ВЫБРАТЬ РАЗРЕШЕННЫЕ
	              |	Файлы.Ссылка КАК Файл,
	              |	Файлы.ВладелецФайла КАК Номенклатура,
	              |	Файлы.Наименование КАК Наименование,
	              |	Файлы.Описание КАК Описание,
	              |	Файлы.Том КАК Том,
	              |	Файлы.Расширение КАК Расширение,
	              |	Файлы.ПутьКФайлу КАК ПутьКФайлу,
	              |	Файлы.ВладелецФайла.Ссылка КАК ВладелецФайлаСсылка
	              |ИЗ
	              |	Справочник.НоменклатураПрисоединенныеФайлы КАК Файлы
	              |ГДЕ
	              |	НЕ Файлы.ПометкаУдаления
	              |
	              |УПОРЯДОЧИТЬ ПО
	              |	Номенклатура";

	Выборка = Запрос.Выполнить().Выбрать();	
	Пока Выборка.Следующий() цикл
		ОбъектКартинки=ФабрикаXDTO.Создать(ФабрикаXDTO.Тип("http://www.data-mobile.ru","DMImage"));
		ОбъектКартинки.DMArtID = "8U-"+СокрЛП(Выборка.Номенклатура.УникальныйИдентификатор())+СокрЛП(Справочники.ХарактеристикиНоменклатуры.ПустаяСсылка().УникальныйИдентификатор());
		ОбъектКартинки.DMImageID = "8i-"+Строка(Выборка.Файл.УникальныйИдентификатор());
		//ОбъектКартинки.DMImageData = ПолучитьИзвременногоХранилища(РаботаСФайлами.ДанныеФайла(Выборка.Файл, Новый УникальныйИдентификатор).СсылкаНаДвоичныеДанныеФайла);
		ОбъектКартинки.DMImageData = ПолучитьИзвременногоХранилища(ДатаМобайл_ОбщийМодуль.ДанныеФайла(Выборка.Файл, Новый УникальныйИдентификатор).СсылкаНаДвоичныеДанныеФайла);

		ОбъектСписка.DMImage.Добавить(ОбъектКартинки);
	КонецЦикла;
	
	Возврат ОбъектСписка;

КонецФункции
Функция GetArtEgaisDateBottling(SN, UserName, DocOutID, ArtID, Barcode, PDFBarcode)
	
	ОбъектСписка=ФабрикаXDTO.Создать(ФабрикаXDTO.Тип("http://www.data-mobile.ru","DMDateList"));
	
	УзелПО=НайтиУзел(SN);
	Если УзелПО=Неопределено тогда
		УзелПО = NewTSD(SN, UserName);
	КонецЕсли;

	
	ОбъектСписка.DMDate.Добавить(ТекущаяДата());
	
	Возврат ОбъектСписка;		
	
КонецФункции
Функция GetArtQtyByScales(SN, UserName, DocOutID, ArtID, Cell, ArtSN, ScalesBarcode)
	Возврат 1.55;	
КонецФункции
Функция SendLogs(SN, UserName, Logs)
	
	Для каждого СтрокаЛогов из Logs.DMLog цикл 
		лДатаОшибки = СтрокаЛогов.DMLogDate;
		лТипОшибки = СтрокаЛогов.DMLogType;
		лОписаниеОшибки = СтрокаЛогов.DMLogData;
		лИмяПользователя = СтрокаЛогов.DMLogUserName;
	КонецЦикла;
	
	Возврат Истина;	
КонецФункции
//////////////////////////////////////////////////////////////////////////////


