
Процедура ПриКомпоновкеРезультата(ТабДок, ДанныеРасшифровки, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	УстановитьПривилегированныйРежим(Истина);
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
	Настройки = КомпоновщикНастроек.ПолучитьНастройки();
	МакетКомпоновкиДанных = КомпоновщикМакета.Выполнить(СхемаКомпоновкиДанных,
	Настройки,ДанныеРасшифровки,,
	Тип("ГенераторМакетаКомпоновкиДанныхДляКоллекцииЗначений"));

	ПроцессорКомпоновкиДанных = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновкиДанных.Инициализировать(МакетКомпоновкиДанных);

	ПроцессорВывода 	= Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВКоллекциюЗначений;
	ТаблицаРезультата 	= Новый ТаблицаЗначений;
	ПроцессорВывода.УстановитьОбъект(ТаблицаРезультата);
	ПроцессорВывода.Вывести(ПроцессорКомпоновкиДанных);
	
	Макет 				= ПолучитьМакет("Макет");
	ОблШапкаКатегория 	= Макет.Получитьобласть("Шапка|ОбластьКатегория");
	ОблСтрокаКатегория 	= Макет.Получитьобласть("Строка|ОбластьКатегория");
	ОблШапка 			= Макет.Получитьобласть("Шапка|ОбластьОкончание");
	ОблСтрока 			= Макет.Получитьобласть("Строка|ОбластьОкончание");
	
	ОблШапкаРекв 			= Макет.Получитьобласть("Шапка|ОбластьРеквизит");
	ОблСтрокаРекв 			= Макет.Получитьобласть("Строка|ОбластьРеквизит");
	
	//ТабДок = Новый ТабличныйДокумент;
	Параметр = Настройки.ПараметрыДанных.Элементы.Найти("ВыгружатьСтруктуруКаталога"); 
	ВыгружатьСтруктуруКаталога 	= Параметр.Значение;
	
	Параметр = Настройки.ПараметрыДанных.Элементы.Найти("ДопРеквизиты"); 
		
	Если ТипЗнч(Параметр.Значение) = Тип("ПланВидовХарактеристикСсылка.ДополнительныеРеквизитыИСведения") Тогда
		ДопРеквизиты                = Новый СписокЗначений;
		ДопРеквизиты.Добавить(Параметр.Значение);
	Иначе	
		ДопРеквизиты 				= Параметр.Значение;
	КонецЕсли;
	Параметр = Настройки.ПараметрыДанных.Элементы.Найти("ИспользоватьОбщиеОстатки");
	ИспользоватьОбщиеОстатки 	= Параметр.Значение;
	
	Параметр = Настройки.ПараметрыДанных.Элементы.Найти("ИспользоватьОстаткиПоставщика");
	ИспользоватьОстаткиПоставщика = Параметр.Значение;
	
	Параметр = Настройки.ПараметрыДанных.Элементы.Найти("СоединятьНоменклатуру");
	СоединятьНоменклатуру = Параметр.Значение;
	
	Если ВыгружатьСтруктуруКаталога Тогда
		//Кожемякин А.Г. agkozhemyakin@gmail.com {
		//17.07.2014 22:03:00
		//получим максимальное количество подкаталогов
		КоличествоПодкаталогов = 0;
		КаталогТовара          = Новый Массив;
		//Пока Результат.Следующий() Цикл
		Для Каждого Результат из ТаблицаРезультата Цикл
			Если КаталогТовара.Найти(Результат.Номенклатура.Родитель) = Неопределено Тогда
				КаталогТовара = ПолучитьРодителяТовара(Результат.Номенклатура);
				Если КоличествоПодкаталогов < КаталогТовара.Количество() Тогда
					КоличествоПодкаталогов = КаталогТовара.Количество();
				КонецЕсли;	
			КонецЕсли;	
		КонецЦикла;	
		//}Кожемякин А.Г.
		Для Индекс = 0 По КоличествоПодкаталогов Цикл
			Если Индекс = 0 Тогда
				ОблШапкаКатегория.Параметры.НаименованиеКолонки = "Категория";
				ТабДок.Вывести(ОблШапкаКатегория);
			Иначе
				ОблШапкаКатегория.Параметры.НаименованиеКолонки = "Подкатегория"+Индекс;
				ТабДок.Присоединить(ОблШапкаКатегория);
			КонецЕсли;
		КонецЦикла;
		ТабДок.Присоединить(ОблШапка);
	Иначе
		ТабДок.Вывести(ОблШапка);
	КонецЕсли;
	
	Для Каждого СтрокаРеквизиты из ДопРеквизиты Цикл
		//Если СтрокаРеквизиты.Выгружать Тогда
			ОблШапкаРекв.Параметры.ИмяРеквизит = ""+СтрокаРеквизиты.Значение;
			ТабДок.Присоединить(ОблШапкаРекв);	
		//КонецЕсли;	
	КонецЦикла;
	//
	////Результат.Сбросить();
	////Пока Результат.Следующий() Цикл 
	Для Каждого Результат из ТаблицаРезультата Цикл
		Если ВыгружатьСтруктуруКаталога Тогда
			КаталогТовара = ПолучитьРодителяТовара(Результат.Номенклатура);
			Для Индекс = 0 По КоличествоПодкаталогов Цикл
				Если Индекс > КаталогТовара.Количество() Тогда
					ОблСтрокаКатегория.Параметры.НаименованиеКатегории = "";
					ТабДок.Присоединить(ОблСтрокаКатегория);
				ИначеЕсли Индекс = 0 Тогда
					ОблСтрокаКатегория.Параметры.НаименованиеКатегории = "Номенклатура";
					ТабДок.Вывести(ОблСтрокаКатегория);
				Иначе
					ОблСтрокаКатегория.Параметры.НаименованиеКатегории = КаталогТовара.Получить(КаталогТовара.Количество()-(Индекс));
					ТабДок.Присоединить(ОблСтрокаКатегория);
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;                                              
		ОблСтрока.параметры.Заполнить(Результат);
		
		ОблСтрока.параметры.Цена = Формат(Результат.Цена, "ЧГ=0");
		ОблСтрока.параметры.Цена2 = Формат(Результат.Цена2, "ЧГ=0");
		
		Если ИспользоватьОстаткиПоставщика Тогда
			ОблСтрока.Параметры.Количество = Формат(Результат.ОстатокПоставщика, "ЧГ=0");	
		КонецЕсли;
		
		Если ИспользоватьОбщиеОстатки Тогда
			ОблСтрока.Параметры.Количество = Формат(Результат.ОстатокПоставщика + Результат.Количество, "ЧГ=0");
		КонецЕсли;	
		
		Если ЗначениеЗаполнено(Результат.Характеристика) 
			и СоединятьНоменклатуру Тогда
			ОблСтрока.Параметры.Наименование 	= Результат.Наименование + ", " + СокрЛП(СтрЗаменить(Результат.Характеристика,"Цвет-","")); 
			ОблСтрока.Параметры.Описание 		= Результат.Описание + ", " + СокрЛП(СтрЗаменить(Результат.Характеристика,"Цвет-","")); 
		КонецЕсли;
		
		ШтрихКод 						= дп_ДополнительныеПроцедуры.ПолучитьШтрихКодНоменклатуры(Результат.Номенклатура, Результат.ХарактеристикаСсылка);
		ОблСтрока.параметры.Штрихкод 	= ШтрихКод;
	//	//ОблСтрока.параметры.СсылкаФото1 = ПолучитьЗначениеДопРеквизита(Результат.ХарактеристикаСсылка,1);
	//	//ОблСтрока.параметры.СсылкаФото2 = ПолучитьЗначениеДопРеквизита(Результат.ХарактеристикаСсылка,2);
	//	
	//	//Характ = ""+Результат.характеристика;
	//	//Характ1 = СтрЗаменить(Характ,"Цвет -","");
	//	//Характ2 = СтрЗаменить(Характ1,"Цвет-","");
	//	//Характ3 = СтрЗаменить(Характ2,"цвет -","");
	//	//Характ4 = СтрЗаменить(Характ3,"цвет-","");
	//	//ОблСтрока.параметры.характеристика = СокрЛП(Характ4);
		Если ВыгружатьСтруктуруКаталога Тогда
			ТабДок.Присоединить(ОблСтрока);
		Иначе
			ТабДок.Вывести(ОблСтрока);
		КонецЕсли;
		
		ТипБулево = Новый ОписаниеТипов("Булево");
		
		Для Каждого СтрокаРеквизиты из ДопРеквизиты Цикл
			//Если СтрокаРеквизиты.Выгружать Тогда
				ТекЗначениеРеквизита = Неопределено;
				
				ЗначениеРеквизита = Результат.Номенклатура.ДополнительныеРеквизиты.Найти(СтрокаРеквизиты.Значение, "Свойство");
				Если Не ЗначениеРеквизита = Неопределено Тогда
					ТекЗначениеРеквизита 	= ЗначениеРеквизита.Значение;
				КонецЕсли;	
					
				Если ТекЗначениеРеквизита = Неопределено Тогда
					ЗначениеРеквизита = Результат.ХарактеристикаСсылка.ДополнительныеРеквизиты.Найти(СтрокаРеквизиты.Значение, "Свойство");
					Если Не ЗначениеРеквизита = Неопределено Тогда
						ТекЗначениеРеквизита 	= ЗначениеРеквизита.Значение;
					КонецЕсли;
				КонецЕсли;
				
				Если ТекЗначениеРеквизита = Неопределено Тогда
					ЗначениеРеквизита = РегистрыСведений.ДополнительныеСведения.Получить(Новый Структура("Объект, Свойство", Результат.Номенклатура, СтрокаРеквизиты.Значение));
					Если ЗначениеЗаполнено(ЗначениеРеквизита.Значение) Тогда
						Если СтрокаРеквизиты.Значение.ТипЗначения = ТипБулево 
							и ЗначениеРеквизита.Значение = Истина ТОГДА
							ТекЗначениеРеквизита 	= СтрокаРеквизиты.Значение.Подсказка;
						Иначе	
							ТекЗначениеРеквизита 	= ЗначениеРеквизита.Значение;
						КонецЕсли;	
					КонецЕсли;	
				КонецЕсли;
				
				Если ТекЗначениеРеквизита = Неопределено Тогда
					ЗначениеРеквизита = РегистрыСведений.ДополнительныеСведения.Получить(Новый Структура("Объект, Свойство", Результат.ХарактеристикаСсылка, СтрокаРеквизиты.Значение));
					Если ЗначениеЗаполнено(ЗначениеРеквизита.Значение) Тогда
						Если СтрокаРеквизиты.Значение.ТипЗначения = ТипБулево 
							и ЗначениеРеквизита.Значение = Истина ТОГДА
							ТекЗначениеРеквизита 	= СтрокаРеквизиты.Значение.Подсказка;
						Иначе	
							ТекЗначениеРеквизита 	= ЗначениеРеквизита.Значение;
						КонецЕсли;	
					КонецЕсли;	
				КонецЕсли;
				
				Если Не ТекЗначениеРеквизита = Неопределено Тогда
					ОблСтрокаРекв.Параметры.ЗначениеРеквизита 	= ТекЗначениеРеквизита;
				Иначе
					ОблСтрокаРекв.Параметры.ЗначениеРеквизита 	= "";
				КонецЕсли;
				
				ТабДок.Присоединить(ОблСтрокаРекв);	
			//КонецЕсли;	
		КонецЦикла;
		
	КонецЦикла;
	
	//ДокументРезультат = ТабДок;
	УстановитьПривилегированныйРежим(Ложь);
КонецПроцедуры

&НаСервере
Функция ПолучитьРодителяТовара(Номенклатура)

	Результат 	= Новый Массив;
	ТекРодитель = Номенклатура.Родитель;
	
	Пока ЗначениеЗаполнено(ТекРодитель) Цикл
		Результат.Добавить(ТекРодитель);
		ТекРодитель = ТекРодитель.Родитель;
	КонецЦикла;
	
	Возврат Результат;

КонецФункции // ПолучитьРодителяТовара()

// <Описание функции>
//
// Параметры
//  <Параметр1>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//  <Параметр2>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//
// Возвращаемое значение:
//   <Тип.Вид>   - <описание возвращаемого значения>
//
&НаСервере
Функция ПолучитьЗначениеДопРеквизита(Характеристика, НомерСсылки = 1)

	Результат = "";
	Если ЗначениеЗаполнено(Характеристика) Тогда
		
		Для каждого ДопРеквизит Из Характеристика.ДополнительныеРеквизиты Цикл
			
			Если СокрЛП(ДопРеквизит.Свойство.Наименование) = "ссылка на фото №1" 
				и НомерСсылки = 1 Тогда
				
				Результат = ДопРеквизит.Значение;
			ИначеЕсли СокрЛП(ДопРеквизит.Свойство.Наименование) = "ссылка на фото №2" 
				и НомерСсылки = 2 Тогда
				
				Результат = ДопРеквизит.Значение;	
			КонецЕсли; 	
			
		КонецЦикла;
		
	КонецЕсли; 

	
	
	Возврат Результат;
КонецФункции // ()

&НаСервере
Функция ПолучитьШтрихКодНоменклатуры(Номенклатура, Характеристика)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ШтрихкодыНоменклатуры.Штрихкод
		|ИЗ
		|	РегистрСведений.ШтрихкодыНоменклатуры КАК ШтрихкодыНоменклатуры
		|ГДЕ
		|	ШтрихкодыНоменклатуры.Партнер = ЗНАЧЕНИЕ(Справочник.Партнеры.ПустаяСсылка)
		|	И ШтрихкодыНоменклатуры.Номенклатура = &Номенклатура
		|	И ШтрихкодыНоменклатуры.Характеристика = &Характеристика";
	Запрос.УстановитьПараметр("Номенклатура", Номенклатура);	
	Запрос.УстановитьПараметр("Характеристика", Характеристика);	

	Результат = Запрос.Выполнить();
	Если Результат.Пустой() Тогда
		Возврат "";
	КонецЕсли;	

	Выборка = Результат.Выбрать();
	Выборка.Следующий();
	
	Возврат Выборка.Штрихкод;
       	
КонецФункции	

