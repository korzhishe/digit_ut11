

&НаСервере
Процедура ЗаполнитьНастройки()
	
	Объект.НастройкиПоиска.Очистить();
	
	НовСтр = Объект.НастройкиПоиска.Добавить();
	НовСтр.Наименование = "НоменклатураКонтрагентовИдентификатор";
	НовСтр.Представление = "Номенклатура контрагентов: поиск по идентификатору";
	НовСтр.Пометка = Ложь;
	
	НовСтр = Объект.НастройкиПоиска.Добавить();
	НовСтр.Наименование = "НоменклатураКонтрагентовАртикул";
	НовСтр.Представление = "Номенклатура контрагентов: поиск по артикулу";
	НовСтр.Пометка = Ложь;
	
	НовСтр = Объект.НастройкиПоиска.Добавить();
	НовСтр.Наименование  = "СправочникАртикул";
	НовСтр.Представление = "Справочник: поиск по артикулу";
	НовСтр.Описание   = "Номенклатура";
	НовСтр.Пометка       = Истина;
	
	НовСтр = Объект.НастройкиПоиска.Добавить();
	НовСтр.Наименование  = "СправочникКод";
	НовСтр.Представление = "Справочник: поиск по коду";
	НовСтр.Описание   = "Номенклатура";
	НовСтр.Пометка       = Истина;
	
	НовСтр = Объект.НастройкиПоиска.Добавить();
	НовСтр.Наименование = "РегистрШтрихкоды";
	НовСтр.Представление = "Регистр: штрихкоды номенклатуры";
	НовСтр.Пометка = Ложь;

	НовСтр = Объект.НастройкиПоиска.Добавить();
	НовСтр.Наименование  = "СправочникНаименование";
	НовСтр.Представление = "Справочник: поиск по наименованию";
	НовСтр.Описание   = "Номенклатура";
	НовСтр.Пометка       = Ложь;
	
	НовСтр = Объект.НастройкиПоиска.Добавить();
	НовСтр.Наименование = "СправочникВНаименовании";
	НовСтр.Представление = "Справочник: содержится в наименовании";
	НовСтр.Пометка = Ложь;
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Объект.ВариантНаименованияКартинок = "ПоКоду";
	Объект.СинхронизацияКартинок = "ПоИменамКартинок";
	
	ЗаполнитьНастройки();
	
	Если Параметры.Свойство("Адрес") Тогда 
		СтруктураПараметров = ПолучитьИзВременногоХранилища(Параметры.Адрес);
		
		Для Каждого Строка из СтруктураПараметров.ЗагрузкаКартинокНоменклатуры Цикл		
			Если НЕ ЗначениеЗаполнено(Строка.Поле_Картинка) Тогда
				Продолжить;
			КонецЕсли;
			
			НоваяСтрока = Объект.ТаблицаКартинок.Добавить();
			НоваяСтрока.Номенклатура      = Строка.Номенклатура;
			НоваяСтрока.ИмяФайла          = Строка.Поле_Наименование;
			НоваяСтрока.НазваниеДляПоиска = Строка.Поле_Наименование;
			НоваяСтрока.Путь         = Строка.Поле_Картинка;
			НоваяСтрока.Главная      = Истина;
		КонецЦикла;
	КонецЕсли;
		
КонецПроцедуры





//ПРОЦЕДУРЫ РАБОТЫ С ЗАГРУЗКОЙ КАРТИНОК


&НаСервере
Процедура ПостобработкаТаблицыКартинок()
	
	Объект.ТаблицаКартинок.Сортировать("ИмяФайла");
	
	Для Каждого ВыборкаСтрока Из Объект.ТаблицаКартинок Цикл
		ИмяФайла = СокрЛП(ВыборкаСтрока.ИмяФайла);
		ВыборкаСтрока.НазваниеДляПоиска = "";
		ВыборкаСтрока.КлючПоиска = 0;
		ВыборкаСтрока.Главная    = Ложь;
		
		Если ВИмениФайлаЕстьПрочерк Тогда
			Поз = Найти(ИмяФайла,"_");
			Если Поз > 0 Тогда
				ИмяФайла = Лев(ИмяФайла,Поз-1);
				ВыборкаСтрока.Главная = Ложь;
				
				////СПЕЦИФИЧНАЯ СИТУАЦИЯ
				//Поз = Найти(ИмяФайла,"-");
				//Если Поз > 0 Тогда
				//	ИмяФайла = Лев(ИмяФайла,Поз-1);
				//	ВыборкаСтрока.Главная = Ложь;
				//Иначе				
				//	ВыборкаСтрока.Главная = Истина;
				//КонецЕсли;

			Иначе				
				ВыборкаСтрока.Главная = Истина;
			КонецЕсли;
			ВыборкаСтрока.НазваниеДляПоиска = ИмяФайла;
		Иначе
			//ИмяФайла = СтрЗаменить(ИмяФайла,"_","-");
			ВыборкаСтрока.НазваниеДляПоиска = ИмяФайла;
			ВыборкаСтрока.Главная           = Истина;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьСписокКартинокИзПапки()
	
	Объект.ТаблицаКартинок.Очистить();
	
	МассивФайлов = НайтиФайлы(Объект.КаталогКартинок, "*.jpg",Истина);
	Для Каждого ИмяФайла Из МассивФайлов Цикл
		ФайлПеренесенный = Новый Файл(ИмяФайла);
		НовыйЭлемент          = Объект.ТаблицаКартинок.Добавить();
		НовыйЭлемент.Путь     = ИмяФайла.ПолноеИмя;
		НовыйЭлемент.ИмяФайла = ИмяФайла.ИмяБезРасширения;
		НовыйЭлемент.Размер   = ИмяФайла.Размер();
		НовыйЭлемент.ВремяИзменения = ИмяФайла.ПолучитьУниверсальноеВремяИзменения();
	КонецЦикла;	
	
	МассивФайлов = НайтиФайлы(Объект.КаталогКартинок, "*.jpeg",Истина);
	Для Каждого ИмяФайла Из МассивФайлов Цикл
		ФайлПеренесенный = Новый Файл(ИмяФайла);
		НовыйЭлемент          = Объект.ТаблицаКартинок.Добавить();
		НовыйЭлемент.Путь     = ИмяФайла.ПолноеИмя;
		НовыйЭлемент.ИмяФайла = ИмяФайла.ИмяБезРасширения;
		НовыйЭлемент.Размер   = ИмяФайла.Размер();
		НовыйЭлемент.ВремяИзменения = ИмяФайла.ПолучитьУниверсальноеВремяИзменения();
	КонецЦикла;	
	
	МассивФайлов = НайтиФайлы(Объект.КаталогКартинок, "*.gif",Истина);
	Для Каждого ИмяФайла Из МассивФайлов Цикл
		ФайлПеренесенный = Новый Файл(ИмяФайла);
		НовыйЭлемент          = Объект.ТаблицаКартинок.Добавить();
		НовыйЭлемент.Путь     = ИмяФайла.ПолноеИмя;
		НовыйЭлемент.ИмяФайла = ИмяФайла.ИмяБезРасширения;
		НовыйЭлемент.Размер   = ИмяФайла.Размер(); 
		НовыйЭлемент.ВремяИзменения = ИмяФайла.ПолучитьУниверсальноеВремяИзменения();
	КонецЦикла;	
	
	МассивФайлов = НайтиФайлы(Объект.КаталогКартинок, "*.png",Истина);
	Для Каждого ИмяФайла Из МассивФайлов Цикл
		ФайлПеренесенный = Новый Файл(ИмяФайла);
		НовыйЭлемент          = Объект.ТаблицаКартинок.Добавить();
		НовыйЭлемент.Путь     = ИмяФайла.ПолноеИмя;
		НовыйЭлемент.ИмяФайла = ИмяФайла.ИмяБезРасширения;
		НовыйЭлемент.Размер   = ИмяФайла.Размер();
		НовыйЭлемент.ВремяИзменения = ИмяФайла.ПолучитьУниверсальноеВремяИзменения();
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура КаталогКартинокНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	#Если НЕ ВебКлиент Тогда
		СтандартнаяОбработка = ЛОжь;
		ДиалогВыбораФайла = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.ВыборКаталога);
		ДиалогВыбораФайла.Заголовок = "Каталог картинок";
		
		Если ДиалогВыбораФайла.Выбрать() Тогда
			Объект.КаталогКартинок = ДиалогВыбораФайла.Каталог;
		КонецЕсли;	
	#КонецЕсли
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьКартинкиИзПапки(Команда)
	
	ОбновитьСписокКартинокИзПапки();
	ПостобработкаТаблицыКартинок();
	
КонецПроцедуры



&НаСервереБезКонтекста
Функция ПолучитьНавигационнуюСсылкуКартинки(ФайлКартинки, ИдентификаторФормы)
	
	УстановитьПривилегированныйРежим(Истина);
	
	Возврат ПрисоединенныеФайлы.ПолучитьДанныеФайла(ФайлКартинки).СсылкаНаДвоичныеДанныеФайла;
	
КонецФункции

&НаСервере
Процедура ИнформацияПолучитьКартинкуИз1С(ТекущиеДанныеСтроки)
	
	ТекущаяКартинка = ПолучитьНавигационнуюСсылкуКартинки(ТекущиеДанныеСтроки.ПрисоединенныйФайл, УникальныйИдентификатор)
	
КонецПроцедуры

&НаКлиенте
Процедура ВыбранныеФайлыПриАктивизацииСтроки(Элемент)
	
	ТекущиеДанные = Элементы.ТаблицаКартинок.ТекущиеДанные;
	
	Если ТекущиеДанные = Неопределено Тогда	
		Возврат;
	КонецЕсли;
	
	Файл = Новый Файл(ТекущиеДанные.Путь);
	Если Файл.Существует() Тогда
		//ИнформацияОФайле = ПрисоединенныеФайлыКлиент.ПоместитьФайлВХранилище(ПолноеИмяФайлаНаКлиенте, ИдентификаторФормы);
		
		Попытка
			Если НЕ Лев(ТекущиеДанные.Путь,4) = "http" Тогда
				ДвоичныеДанные = Новый ДвоичныеДанные(ТекущиеДанные.Путь);
				АдресКартинки = ПоместитьВоВременноеХранилище(ДвоичныеДанные, УникальныйИдентификатор);
			КонецЕсли;
		Исключение
		КонецПопытки;
	Иначе
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru = 'Файл не найден в рабочем каталоге.'"));
	КонецЕсли;
		
	Если ЗначениеЗаполнено(ТекущиеДанные.ПрисоединенныйФайл) Тогда
		ТекущиеДанныеСтроки = Новый Структура;
		ТекущиеДанныеСтроки.Вставить("ПрисоединенныйФайл",ТекущиеДанные.ПрисоединенныйФайл);
		
		Попытка
			ИнформацияПолучитьКартинкуИз1С(ТекущиеДанныеСтроки);
		Исключение
		КонецПопытки;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПоказатьПодчиненныйСправочник(ТекущиеДанные)
	
	ДетализацияПрисоединенныеФайлы.Очистить();
		
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	НоменклатураПрисоединенныеФайлы.Ссылка КАК ПрисоединенныйФайл,
	|	НоменклатураПрисоединенныеФайлы.ДатаСоздания КАК ДатаСоздания,
	|	НоменклатураПрисоединенныеФайлы.ДатаМодификацииУниверсальная КАК ДатаМодификацииУниверсальная,
	|	НоменклатураПрисоединенныеФайлы.Размер КАК Размер,
	|	НоменклатураПрисоединенныеФайлы.Описание КАК Описание
	|ИЗ
	|	Справочник.НоменклатураПрисоединенныеФайлы КАК НоменклатураПрисоединенныеФайлы
	|ГДЕ
	|	НоменклатураПрисоединенныеФайлы.ВладелецФайла = &ТекНоменклатура";	
	
	Запрос = Новый Запрос();
	Запрос.УстановитьПараметр("ТекНоменклатура",ТекущиеДанные.ТекНоменклатура);
	Запрос.Текст = ТекстЗапроса;
	
	ДетализацияПрисоединенныеФайлы.Загрузить(Запрос.Выполнить().Выгрузить());
	
КонецПроцедуры


//============================================================================
// ПОИСК НОМЕНКЛАТУРЫ

&НаСервере
Процедура СинхронизацияКартинок()
	
	ДанныеТаблицаКартинок  = Объект.ТаблицаКартинок.Выгрузить();
	
	ТектЗапроса = 
	"ВЫБРАТЬ
	|	ВременнаяДанныеПоиска.НомерСтроки КАК НомерСтроки,
	|	ВременнаяДанныеПоиска.Номенклатура КАК Номенклатура,
	|	ВременнаяДанныеПоиска.ИмяФайла КАК ИмяФайла,
	|	ВременнаяДанныеПоиска.Размер КАК Размер
	|ПОМЕСТИТЬ ВременнаяДанныеПоиска
	|ИЗ
	|	&ДанныеТаблицаКартинок КАК ВременнаяДанныеПоиска
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВременнаяДанныеПоиска.НомерСтроки КАК НомерСтроки,
	|	ВременнаяДанныеПоиска.Номенклатура КАК Номенклатура,
	|	ВременнаяДанныеПоиска.Размер КАК РазмерВ1С,
	|	ВременнаяДанныеПоиска.ИмяФайла КАК ИмяФайлаВ1С,
	|	НоменклатураПрисоединенныеФайлы.Ссылка КАК ПрисоединенныйФайлСсылка,
	|	НоменклатураПрисоединенныеФайлы.Размер КАК Размер,
	|	НоменклатураПрисоединенныеФайлы.Наименование КАК ИмяФайла,
	|	НоменклатураПрисоединенныеФайлы.ДатаМодификацииУниверсальная КАК ДатаМодификацииУниверсальная,
	|	НоменклатураПрисоединенныеФайлы.ДатаСоздания КАК ДатаСоздания
	|ИЗ
	|	ВременнаяДанныеПоиска КАК ВременнаяДанныеПоиска
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.НоменклатураПрисоединенныеФайлы КАК НоменклатураПрисоединенныеФайлы
	|		ПО ВременнаяДанныеПоиска.Номенклатура = НоменклатураПрисоединенныеФайлы.ВладелецФайла";
	Если Объект.СинхронизацияКартинок = "ПоИменамКартинок" Тогда
		ТектЗапроса = ТектЗапроса +" И ВременнаяДанныеПоиска.ИмяФайла = НоменклатураПрисоединенныеФайлы.Наименование";
	Иначе
		ТектЗапроса = ТектЗапроса +" И ВременнаяДанныеПоиска.Размер = НоменклатураПрисоединенныеФайлы.Размер";
	КонецЕсли;
	
	Запрос = Новый Запрос();
	Запрос.Текст = ТектЗапроса;
	Запрос.УстановитьПараметр("ДанныеТаблицаКартинок", ДанныеТаблицаКартинок);
	
	РезультатЗапроса = Запрос.Выполнить();
	Выборка = РезультатЗапроса.Выбрать();	
	Пока Выборка.Следующий() Цикл	
		
		СтрТаблицыСинхронизации = Объект.ТаблицаКартинок[Выборка.НомерСтроки-1]; 
		Если ЗначениеЗаполнено(Выборка.ПрисоединенныйФайлСсылка) Тогда
			СтрТаблицыСинхронизации.Статус = "Существует";
			СтрТаблицыСинхронизации.ПрисоединенныйФайл = Выборка.ПрисоединенныйФайлСсылка;
			СтрТаблицыСинхронизации.Пометка = Ложь;
			Если Выборка.ИмяФайлаВ1С <> Выборка.ИмяФайла Тогда
				СтрТаблицыСинхронизации.Статус = "Отличается имя";
				СтрТаблицыСинхронизации.Пометка = Истина;
			КонецЕсли;
			Если Выборка.РазмерВ1С <> Выборка.Размер Тогда
				СтрТаблицыСинхронизации.Статус = "Отличается размер";
				СтрТаблицыСинхронизации.Пометка = Истина;
			КонецЕсли;
		Иначе
			СтрТаблицыСинхронизации.Статус = "Новая";
			СтрТаблицыСинхронизации.Пометка = Истина;
		КонецЕсли;
	КонецЦикла;	
	
	СписокНоменклатуры = Объект.ТаблицаКартинок.Выгрузить();
	СписокНоменклатуры.Свернуть("Номенклатура,ГлавнаяКартинкаСсылка");
	Объект.ТаблицаНоменклатуры.Загрузить(СписокНоменклатуры);
	
КонецПроцедуры

&НаСервере
Процедура ПоискНоменклатурыСервер(СтруктураПараметров)
	
	// соотвествия названий поиска и текстов запросов, для исключения Ctrl+C
	ЗапросыПоиска = Новый Соответствие();
	
	ЗапросыПоиска.Вставить("НоменклатураКонтрагентовИдентификатор",
	"ВЫБРАТЬ 
	|	СпрНоменклатураПоставщиков.Номенклатура КАК Номенклатура, <Приоритет> Приоритет
	|ИЗ
	|	Справочник.НоменклатураПоставщиков КАК СпрНоменклатураПоставщиков 					
	|ГДЕ
	|	СпрНоменклатураПоставщиков.Идентификатор = &КлючПоиска
	|	И СпрНоменклатураПоставщиков.ЭтоГруппа = ЛОЖЬ");
	
	ЗапросыПоиска.Вставить("НоменклатураКонтрагентовАртикул",
	"ВЫБРАТЬ 
	|	СпрНоменклатураПоставщиков.Номенклатура КАК Номенклатура, <Приоритет> Приоритет
	|ИЗ
	|	Справочник.НоменклатураПоставщиков КАК СпрНоменклатураПоставщиков					
	|ГДЕ
	|	СпрНоменклатураПоставщиков.Артикул = &КлючПоиска
	|	И СпрНоменклатураПоставщиков.ЭтоГруппа = ЛОЖЬ");
	
	ЗапросыПоиска.Вставить("СправочникКод",
	"ВЫБРАТЬ 
	|	спрНоменклатура.Ссылка КАК Номенклатура, <Приоритет> Приоритет
	|ИЗ
	|	Справочник.Номенклатура КАК СпрНоменклатура					
	|ГДЕ
	|	СпрНоменклатура.Код = &КлючПоиска
	|	И СпрНоменклатура.ЭтоГруппа = ЛОЖЬ");
	
	ЗапросыПоиска.Вставить("РегистрШтрихкоды",
	"ВЫБРАТЬ
	|	ШтрихкодыНоменклатуры.Номенклатура КАК Номенклатура, <Приоритет> Приоритет
	|ИЗ
	|	РегистрСведений.ШтрихкодыНоменклатуры КАК ШтрихкодыНоменклатуры
	|ГДЕ
	|	ШтрихкодыНоменклатуры.Штрихкод = &КлючПоиска");
	
	ЗапросыПоиска.Вставить("СправочникАртикул",
	"ВЫБРАТЬ 
	|	СпрНоменклатура.Ссылка Как Номенклатура, <Приоритет> Приоритет
	|ИЗ
	|	Справочник.Номенклатура КАК СпрНоменклатура
	|ГДЕ
	|	СпрНоменклатура.Артикул = &КлючПоиска
	|	И СпрНоменклатура.ЭтоГруппа = ЛОЖЬ");
	
	ЗапросыПоиска.Вставить("СправочникНаименование",
	"ВЫБРАТЬ 
	|	СпрНоменклатура.Ссылка КАК Номенклатура, <Приоритет> Приоритет
	|ИЗ
	|	Справочник.Номенклатура КАК СпрНоменклатура
	|ГДЕ
	|	СпрНоменклатура.Наименование = &КлючПоиска
	|	И СпрНоменклатура.ЭтоГруппа = ЛОЖЬ");
	
	ЗапросыПоиска.Вставить("СправочникВНаименовании",
	"ВЫБРАТЬ 
	|	СпрНоменклатура.Ссылка КАК Номенклатура, <Приоритет> Приоритет
	|ИЗ
	|	Справочник.Номенклатура КАК СпрНоменклатура
	|ГДЕ
	|	СпрНоменклатура.Наименование ПОДОБНО &КлючПоискаПодобно
	|	И СпрНоменклатура.ПометкаУдаления = ЛОЖЬ");
	
	// формирую текст запроса для одной позиции
	ПриоритетПоиска = 0;
	ТекстПоиска = "ВЫБРАТЬ Спр1.Номенклатура Из (<ОбъединенныйЗапрос>) КАК Спр1";
	
	ТекстОбъединенныйЗапрос = "";	
	УстановленПоисковыйВариант = Ложь;
	Для Каждого СтрокаНастройкиПоиска Из Объект.НастройкиПоиска Цикл
		Если СтрокаНастройкиПоиска.Пометка = Ложь Тогда
			Продолжить;
		КонецЕсли;
		УстановленПоисковыйВариант = Истина;
		
		ПриоритетПоиска = ПриоритетПоиска + 1;
		РежимПоиска     = СтрокаНастройкиПоиска.Наименование;
		Если НЕ ПустаяСтрока(ТекстОбъединенныйЗапрос) Тогда
			ТекстОбъединенныйЗапрос = ТекстОбъединенныйЗапрос + " ОБЪЕДИНИТЬ ВСЕ ";	
		КонецЕсли;
		
		ТекстОбъединенныйЗапрос = ТекстОбъединенныйЗапрос + СтрЗаменить(ЗапросыПоиска.Получить(РежимПоиска),"<Приоритет>",ПриоритетПоиска);		
	КонецЦикла;
	
	ТекстПоиска = СтрЗаменить(ТекстПоиска,"<ОбъединенныйЗапрос>",ТекстОбъединенныйЗапрос);
	
	Если ЗначениеЗаполнено(Объект.ГруппаНоменклатурыОтбор) Тогда
		ТекстПоиска = ТекстПоиска + " ГДЕ Спр1.Номенклатура В ИЕРАРХИИ(&ГруппаНоменклатурыОтбор)";
	КонецЕсли;        
	ТекстПоиска = ТекстПоиска + " УПОРЯДОЧИТЬ ПО Спр1.Приоритет";

	
	ВыборкаТаблицаДо = Объект.ТаблицаКартинок.Выгрузить();
	Объект.ТаблицаКартинок.Очистить();
	Для Каждого Строка Из ВыборкаТаблицаДо Цикл		
		НазваниеДляПоиска = СокрЛП(Строка.НазваниеДляПоиска);
		
		Если УстановленПоисковыйВариант = Истина Тогда
			Запрос = Новый Запрос();
			Запрос.Текст = ТекстПоиска;
			Запрос.УстановитьПараметр("КлючПоиска", НазваниеДляПоиска);
			Запрос.УстановитьПараметр("КлючПоискаПодобно", "%"+НазваниеДляПоиска+"%");
			Запрос.УстановитьПараметр("ГруппаНоменклатурыОтбор", Объект.ГруппаНоменклатурыОтбор);

			//Сообщить(ТекстПоиска);
			РезультатЗапроса = Запрос.Выполнить();
			
			Выборка = РезультатЗапроса.Выбрать();
			Пока Выборка.Следующий() Цикл
				НоваяСтрока = Объект.ТаблицаКартинок.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока,Строка);
				НоваяСтрока.КлючСтроки   = Строка.НомерСтроки;
				НоваяСтрока.КлючПоиска   = ПриоритетПоиска;
				НоваяСтрока.Номенклатура = Выборка.Номенклатура;
				НоваяСтрока.ГлавнаяКартинкаСсылка = Выборка.Номенклатура.ФайлКартинки;
				Если Выборка.Количество() > 1 Тогда
					НоваяСтрока.ПовторноеСовпадениеНоменклатуры = Истина;
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
		
		Если ЗначениеЗаполнено(СтруктураПараметров.ВидСвойства) Тогда		
			ТекстЗапроса = 
			"ВЫБРАТЬ
			|	ДополнительныеРеквизиты.Ссылка КАК Номенклатура,
			|	ДополнительныеРеквизиты.Ссылка.ФайлКартинки КАК ФайлКартинки
			|ИЗ
			|	Справочник.Номенклатура.ДополнительныеРеквизиты КАК ДополнительныеРеквизиты
			|ГДЕ
			|	ДополнительныеРеквизиты.Свойство = &ВидСвойства
			|	И ВЫРАЗИТЬ(ДополнительныеРеквизиты.Значение КАК СТРОКА(100)) ПОДОБНО &ШаблонПоиска";
			
			Запрос = Новый Запрос();
			Запрос.Текст = ТекстЗапроса;							
			Запрос.УстановитьПараметр("ШаблонПоиска","%"+НазваниеДляПоиска+"%");
			Запрос.УстановитьПараметр("ВидСвойства", СтруктураПараметров.ВидСвойства);
			
			ТаблицаТоваров = Запрос.Выполнить().Выгрузить();			
			Если ТаблицаТоваров.Количество() > 0 Тогда
				Для Каждого СтрЭлемент Из ТаблицаТоваров Цикл
					НоваяСтрока = Объект.ТаблицаКартинок.Добавить();
					ЗаполнитьЗначенияСвойств(НоваяСтрока,Строка);
					НоваяСтрока.КлючСтроки   = Строка.НомерСтроки;
					НоваяСтрока.КлючПоиска   = ПриоритетПоиска;
					НоваяСтрока.Номенклатура = СтрЭлемент.Номенклатура;
					НоваяСтрока.ГлавнаяКартинкаСсылка = СтрЭлемент.ФайлКартинки;
					Если Выборка.Количество() > 1 Тогда
						НоваяСтрока.ПовторноеСовпадениеНоменклатуры = Истина;
					КонецЕсли;
				КонецЦикла;	
			КонецЕсли;
		КонецЕсли;
		
	КонецЦикла;	
		
	СинхронизацияКартинок();
	
КонецПроцедуры

&НаКлиенте
Процедура ПоискНоменклатуры(Команда)
	
	СтруктураПараметров = Новый Структура();
	СтруктураПараметров.Вставить("ВидСвойства",ВидСвойства);
	
	ПоискНоменклатурыСервер(СтруктураПараметров)
	
КонецПроцедуры

&НаКлиенте
Процедура ВИмениФайлаЕстьПрочеркОбозначающийДополнительныеКартинкиОднойКарточкиПриИзменении(Элемент)
	
	ПостобработкаТаблицыКартинок();
	
КонецПроцедуры

&НаКлиенте
Процедура КаталогКартинокОткрытие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ОбновитьСписокКартинокИзПапки();
	ПостобработкаТаблицыКартинок();
	
КонецПроцедуры


&НаКлиенте
Процедура ПометитьВсеГлавными(Команда)
	
	Для Каждого Строка Из Объект.ТаблицаКартинок Цикл
		Строка.Главная = Истина;
		
		Поз = Найти(Строка.ИмяФайла,"_");
		Если Поз > 0 Тогда
			НомерКартинки = Прав(Строка.ИмяФайла,1);
			Если НомерКартинки = "0" ИЛИ НомерКартинки = "1" Тогда
				Строка.Главная = Истина;
			Иначе
				Строка.Главная = Ложь;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;

КонецПроцедуры


&НаКлиенте
Процедура ТаблицаВыделитьВсе(Команда)
	
	Для Каждого Строка Из Объект.ТаблицаКартинок Цикл
		Строка.Пометка = Истина;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ПометкаТолькоНовые(Команда)
	
	Для Каждого Выборка Из Объект.ТаблицаКартинок Цикл		
		Если Выборка.Статус = "Новая" Тогда
			Выборка.Пометка = Истина;
		Иначе
			Выборка.Пометка = Ложь;
		КонецЕсли;
	КонецЦикла;

КонецПроцедуры


&НаКлиенте
Процедура ТаблицаСнятьПометки(Команда)
	
	Для Каждого Строка Из Объект.ТаблицаКартинок Цикл
		Строка.Пометка = Ложь;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаПометкаВыделенного(Команда)
	
	ВыделенныеСтроки = Элементы.ТаблицаКартинок.ВыделенныеСтроки;	
	Для Каждого СтрВыд Из ВыделенныеСтроки Цикл       
		НомерСтроки = Элементы.ТаблицаКартинок.ДанныеСтроки(СтрВыд).НомерСтроки;
		
		СтрокаСоотв = Объект.ТаблицаКартинок[НомерСтроки-1];
		СтрокаСоотв.Пометка = Истина;
	КонецЦикла;
	
КонецПроцедуры


Функция ПривестиСтрокуКЧислу(ЧислоСтрокой, ВозвращатьНеопределено = Ложь) 
	
	ОписаниеТипаЧисла = Новый ОписаниеТипов("Число");
	ЗначениеЧисла = ОписаниеТипаЧисла.ПривестиЗначение(ЧислоСтрокой);
	
	Если ВозвращатьНеопределено И (ЗначениеЧисла = 0) Тогда
		
		Стр = Строка(ЧислоСтрокой);
		Если Стр = "" Тогда
			Возврат Неопределено;
		КонецЕсли;
		
		Стр = СтрЗаменить(СокрЛП(Стр), "0", "");
		Если (Стр <> "") И (Стр <> ".") И (Стр <> ",") Тогда
			Возврат Неопределено;
		КонецЕсли;
	КонецЕсли;
	
	Возврат ЗначениеЧисла;	
	
КонецФункции


&НаСервере
Функция РазобратьАдресСайта(Знач АдресСайта) Экспорт
	
	// Разберем адрес сайта
	АдресСайта = СокрЛП(АдресСайта); 
	
	HTTPСервер		 			= ""; 
	HTTPПорт					= 0;
	HTTPАдресСкрипта 			= "";
	HTTPЗащищенноеСоединение 	= Ложь;
	
	Если ЗначениеЗаполнено(АдресСайта) Тогда
		
		АдресСайта = СтрЗаменить(АдресСайта, "\", "/");
		АдресСайта = СтрЗаменить(АдресСайта, " ", "");
		
		Если ВРег(Лев(АдресСайта, 7)) = "HTTP://" Тогда
			АдресСайта = Сред(АдресСайта, 8);
		ИначеЕсли ВРег(Лев(АдресСайта, 8)) = "HTTPS://" Тогда
			АдресСайта = Сред(АдресСайта, 9);
			HTTPЗащищенноеСоединение = Истина;
		КонецЕсли;
		
		ПозицияСлэша = Найти(АдресСайта, "/");
		
		Если ПозицияСлэша > 0 Тогда
			HTTPСервер 		 = Лев(АдресСайта, ПозицияСлэша - 1);
			HTTPАдресСкрипта = Прав(АдресСайта, СтрДлина(АдресСайта) - ПозицияСлэша);
		Иначе	
			HTTPСервер 		 = АдресСайта;
			HTTPАдресСкрипта = "";
		КонецЕсли;	
		ПозицияДвоеточия = Найти(HTTPСервер, ":");
		Если ПозицияДвоеточия > 0 Тогда
			HTTPСерверСПортом = HTTPСервер;
			HTTPСервер		  = Лев(HTTPСерверСПортом, ПозицияДвоеточия - 1);
			HTTPПортСтрока 	  = Прав(HTTPСерверСПортом, СтрДлина(HTTPСерверСПортом) - ПозицияДвоеточия);
		Иначе
			HTTPПортСтрока = "0";
		КонецЕсли;
		
		HTTPПорт = ПривестиСтрокуКЧислу(HTTPПортСтрока);
		
	КонецЕсли;
	
	//Сообщить(HTTPСервер);
	
	СтруктураРезультата = Новый Структура;
	СтруктураРезультата.Вставить("HTTPСервер"	  			, HTTPСервер); 
	СтруктураРезультата.Вставить("HTTPПорт"		   			, HTTPПорт);
	СтруктураРезультата.Вставить("HTTPАдресСкрипта"			, HTTPАдресСкрипта);
	СтруктураРезультата.Вставить("HTTPЗащищенноеСоединение"	, HTTPЗащищенноеСоединение);
	
	Возврат СтруктураРезультата;
	
КонецФункции


&НаСервереБезКонтекста
Функция глРазложитьСтрокуВМассивПодстрок(Знач Стр, Разделитель = " ")
	
	МассивСтрок = Новый Массив();
	Если Разделитель = " " Тогда
		Стр = СокрЛП(Стр);
		Пока 1 = 1 Цикл
			Поз = Найти(Стр,Разделитель);
			
			Если Поз = 0 Тогда
				СтрокаВМассив = СокрЛП(Стр);
				
				МассивСтрок.Добавить(СтрокаВМассив);
				Возврат МассивСтрок;
			КонецЕсли;
			
			СтрокаВМассив = СокрЛП(Лев(Стр,Поз-1));
			
			МассивСтрок.Добавить(СтрокаВМассив);
			Стр = СокрЛ(Сред(Стр,Поз));
		КонецЦикла;
	Иначе
		ДлинаРазделителя = СтрДлина(Разделитель);
		Пока 1 = 1 Цикл
			Поз = Найти(Стр,Разделитель);
			
			Если Поз = 0 Тогда
				СтрокаВМассив = СокрЛП(Стр);
				
				МассивСтрок.Добавить(СтрокаВМассив);
				Возврат МассивСтрок;
			КонецЕсли;
			
			СтрокаВМассив = СокрЛП(Лев(Стр,Поз-1));
			
			МассивСтрок.Добавить(СтрокаВМассив);
			Стр = Сред(Стр,Поз+ДлинаРазделителя);
		КонецЦикла;
	КонецЕсли;
	
КонецФункции 


//============================================================================
// СКАЧАТЬ

&НаСервере
Процедура ВыполнитьЗагрузкуКартинокИзИнтерентВПапку()
	
	УстановитьПривилегированныйРежим(Истина);

	ВременнаяТаблицаВыборки = Объект.ТаблицаКартинок.Выгрузить();
	Объект.ТаблицаКартинок.Очистить();
	
	Для Каждого СтрВыборка Из ВременнаяТаблицаВыборки Цикл		
		Если НЕ ЗначениеЗаполнено(СтрВыборка.Номенклатура) Тогда
			Сообщить("В строке не указана Номенклатура. Картинка не скачана");
			Продолжить;
		КонецЕсли;
		КодТовара = СтрВыборка.Номенклатура.Код;
		
		//В строке указано много ссылок. Разбираем в массив. Даже если одна ссылка все отработает естественно.
		МассивСтрок = глРазложитьСтрокуВМассивПодстрок(СтрВыборка.Путь,",");
		
		КоличествоСчетчик = 0;
		Для Каждого СтрПуть Из МассивСтрок Цикл
			КоличествоСчетчик = КоличествоСчетчик+1;
			
			Если КоличествоСчетчик > 1 Тогда
				Сообщить("Обнаружено несколько картинок, строка разбита на несколько "+СтрВыборка.НомерСтроки);
			КонецЕсли;
			
			НоваяСтрока = Объект.ТаблицаКартинок.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока,СтрВыборка);
			
			СтрПуть = СтрЗаменить(СтрПуть, "\", "/");
			СтрПуть = СтрЗаменить(СтрПуть, " ", "");
			
			МногострочнаяСтрока = СтрЗаменить(СтрПуть,"/",Символы.ПС);
			ИмяФайла     = СтрПолучитьСтроку(МногострочнаяСтрока,СтрЧислоСтрок(МногострочнаяСтрока));
			ВыбранныйПутьКФайлу = Объект.КаталогКартинок+"\"+ИмяФайла;
			
			
			//ЗАГРУЖАЕМ ВАРИАНТ 1
			ПараметрыПолучения = ПолучениеФайловИзИнтернетаКлиентСервер.ПараметрыПолученияФайла();
			ПараметрыПолучения.Вставить("ПутьДляСохранения", ВыбранныйПутьКФайлу);
			ПараметрыПолучения.Вставить("Пользователь", Объект.ФайлДоступЛогин);
			ПараметрыПолучения.Вставить("Пароль", Объект.ФайлДоступПароль);
			//ПараметрыПолучения.Вставить("Порт", Неопределено);
			//ПараметрыПолучения.Вставить("Таймаут", 1);
			//ПараметрыПолучения.Вставить("ЗащищенноеСоединение", Неопределено);
			//ПараметрыПолучения.Вставить("ПассивноеСоединение", Неопределено);
			//ПараметрыПолучения.Вставить("Заголовки", Новый Соответствие);
			//ПараметрыПолучения.Вставить("ИспользоватьАутентификациюОС", Ложь);
			// ПараметрыПолучения.Вставить("УровеньИспользованияЗащищенногоСоединения", Неопределено);
			
			Попытка
				РезультатИзИнтернета = ПолучениеФайловИзИнтернета.СкачатьФайлНаСервере(СтрПуть,ПараметрыПолучения);
			Исключение
				Сообщить(ОписаниеОшибки());
			КонецПопытки;
						
			//ЗАГРУЖАЕМ ВАРИАНТ 2
			//КопироватьФайл(СтрПуть,ФайлКартинки);			
			
			Если РезультатИзИнтернета.Статус Тогда
				
				ИмяФайлаБезРасширения = НоваяСтрока.ИмяФайла;
				Расширение = СтрНайти(ИмяФайла,".");
				Если Расширение > 0 Тогда
					ИмяФайлаБезРасширения = Лев(ИмяФайла,Расширение-1);
				КонецЕсли;
				
				НоваяСтрока.ИмяФайла = ИмяФайлаБезРасширения;	
				НоваяСтрока.Путь = ВыбранныйПутьКФайлу;	
				Если КоличествоСчетчик = 1 Тогда                                        
					НоваяСтрока.Главная = Истина;
				Иначе
					НоваяСтрока.Повторная = Истина;
				КонецЕсли;
			Иначе
				НоваяСтрока.Пометка  = Ложь;
				ДополнительноеСообщение = "Номер строки - "+НоваяСтрока.НомерСтроки;
				СообщениеОбОшибке = РезультатИзИнтернета.СообщениеОбОшибке + ДополнительноеСообщение; 
				Сообщить(СообщениеОбОшибке);
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
КонецПРоцедуры


&НаКлиенте
Процедура СкачатьКартинки(Команда)
	
	Ответ = Вопрос("Вы уверены ?", РежимДиалогаВопрос.ДаНет, ,КодВозвратаДиалога.Нет, "Дополнительный вопрос");		
	Если Ответ <> КодВозвратаДиалога.Да Тогда
		Возврат;
	КонецЕсли;

	Сообщить("Начало скачивания картинок - "+ТекущаяДата());
	ВыполнитьЗагрузкуКартинокИзИнтерентВПапку();
	Сообщить("Завершение скачивания картинок - "+ТекущаяДата());
	
КонецПроцедуры



//============================================================================
// ЗАГРУЗКА КАРТИНОК

&НаСервере
Функция ПолучитьНайденуюНоменклутуру()
	
	СписокНоменклатуры = Объект.ТаблицаКартинок.Выгрузить(,"Номенклатура");
	СписокНоменклатуры.Свернуть("Номенклатура");
	Возврат СписокНоменклатуры.ВыгрузитьКолонку("Номенклатура");
	
КонецФункции

&НаСервере
Процедура УдалитьСтарыеКартинкиСервер()
		
	Для Каждого ВыборкаСтрока Из Объект.ТаблицаКартинок Цикл
		
		Если НЕ ЗначениеЗаполнено(ВыборкаСтрока.Номенклатура) Тогда
			Продолжить;
		КонецЕсли;

		ОбъектНоменклатура = ВыборкаСтрока.Номенклатура.ПолучитьОбъект(); 
		ОбъектНоменклатура.ФайлКартинки = "";
		ОбъектНоменклатура.ОбменДанными.Загрузка = Истина;
		ОбъектНоменклатура.Записать();  

		ВыборкаСтрока.ГлавнаяКартинкаСсылка = "";
		ВыборкаСтрока.ПрисоединенныйФайл = "";

		ТекстЗапроса =
		"ВЫБРАТЬ
		|	ПрисоединенныеФайлы.Ссылка КАК Ссылка,
		|	ПрисоединенныеФайлы.Наименование КАК Наименование
		|ИЗ
		|	Справочник.НоменклатураПрисоединенныеФайлы КАК ПрисоединенныеФайлы
		|ГДЕ
		|	ПрисоединенныеФайлы.ВладелецФайла = &ВладелецФайлов";
		
		Запрос = Новый Запрос(ТекстЗапроса);
		Запрос.УстановитьПараметр("ВладелецФайлов", ВыборкаСтрока.Номенклатура);
		
		ВыборкаТаблица = Запрос.Выполнить().Выгрузить();	
		Для Каждого Выборка Из ВыборкаТаблица Цикл
			Выборка.Ссылка.ПолучитьОбъект().Удалить();
		КонецЦикла;				
	КонецЦикла;
	
	Сообщить("Удаление завершено. После удаления нажмите повторно команду Синхронизация картинок.");
	
КонецПроцедуры

&НаКлиенте
Процедура УдалитьТекущиеКартинки(Команда)
	
	УдалитьСтарыеКартинкиСервер()

КонецПроцедуры



&НаСервере
Процедура ОбновитьОсновныеИзображенияНоменклатуры()
	
	Для Каждого Выборка Из Объект.ТаблицаКартинок Цикл			
		Если НЕ Выборка.Главная Тогда
			Продолжить;
		КонецЕсли;
		Если НЕ ЗначениеЗаполнено(Выборка.Номенклатура) Тогда
			Продолжить;
		КонецЕсли;
		Если НЕ ЗначениеЗаполнено(Выборка.ПрисоединенныйФайл) Тогда
			Продолжить;
		КонецЕсли;

		Попытка 
			ОбъектНоменклатура = Выборка.Номенклатура.ПолучитьОбъект(); 
			ОбъектНоменклатура.ФайлКартинки = Выборка.ПрисоединенныйФайл;
			ОбъектНоменклатура.ОбменДанными.Загрузка = Истина;
			ОбъектНоменклатура.Записать();  
		Исключение
			Сообщить(ОписаниеОшибки());
		КонецПопытки;
		
		//Отбор = Новый Структура("Номенклатура");
		//Отбор.Номенклатура = Выборка.Номенклатура;
		//СтрокиКартинок = Объект.ТаблицаНоменклатуры.НайтиСтроки(Отбор);
		//Если СтрокиКартинок.Количество() = 0 Тогда
		//	Для Каждого ВыборкаНоменклатура Из СтрокиКартинок Цикл	
		//		ВыборкаНоменклатура.ГлавнаяКартинкаСсылка = Выборка.ПрисоединенныйФайл;
		//	КонецЦикла;
		//КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры


&НаСервере
Процедура ЗагрузитьКартинкиСерверСтарая()
	
	УстановитьПривилегированныйРежим(Истина);

	СписокНоменклатуры = Объект.ТаблицаКартинок.Выгрузить(,"Номенклатура");
	СписокНоменклатуры.Свернуть("Номенклатура");
	ВыборкаНоменклатуры = СписокНоменклатуры.ВыгрузитьКолонку("Номенклатура");
	
	Для Каждого ВыборкаСтрока Из Объект.ТаблицаКартинок Цикл		
		Если НЕ ВыборкаСтрока.Пометка Тогда
			Продолжить;
		КонецЕсли;
		Если НЕ ЗначениеЗаполнено(ВыборкаСтрока.Номенклатура) Тогда
			Продолжить;
		КонецЕсли;
		Если НЕ ЗначениеЗаполнено(ВыборкаСтрока.Путь) Тогда
			Продолжить;
		КонецЕсли;
		
		ФайлИзображения = Новый Файл(ВыборкаСтрока.Путь);
		Если НЕ ФайлИзображения.Существует() Тогда
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru = 'Файл не найден в рабочем каталоге.'"));
			Продолжить;
		КонецЕсли;
		
		ДвоичныеДанные = Новый ДвоичныеДанные(ВыборкаСтрока.Путь);
		АдресВременногоХранилищаФайла = ПоместитьВоВременноеХранилище(ДвоичныеДанные);
		
		Если ЗначениеЗаполнено(ВыборкаСтрока.ПрисоединенныйФайл) Тогда
			ИнформацияОФайле = Новый Структура;
			ИнформацияОФайле.Вставить("АдресФайлаВоВременномХранилище",АдресВременногоХранилищаФайла);
			ИнформацияОФайле.Вставить("АдресВременногоХранилищаТекста","");
			ИнформацияОФайле.Вставить("ИмяБезРасширения"              ,ФайлИзображения.ИмяБезРасширения);
			ИнформацияОФайле.Вставить("ДатаМодификацииУниверсальная"  ,ТекущаяДата());
			ИнформацияОФайле.Вставить("Расширение"                    ,СтрЗаменить(ФайлИзображения.Расширение,".",""));
			
			ПрисоединенныеФайлы.ОбновитьПрисоединенныйФайл(ВыборкаСтрока.ПрисоединенныйФайл,ИнформацияОФайле);
		Иначе
			ПрисоединенныйФайл = ПрисоединенныеФайлы.ДобавитьФайл(ВыборкаСтрока.Номенклатура,
			ФайлИзображения.ИмяБезРасширения,
			СтрЗаменить(ФайлИзображения.Расширение,".",""),
			ВыборкаСтрока.ВремяИзменения,
			,
			АдресВременногоХранилищаФайла,,);
			
			ВыборкаСтрока.ПрисоединенныйФайл = ПрисоединенныйФайл;	
		КонецЕсли;	
	КонецЦикла;
	
КонецПроцедуры


&НаСервереБезКонтекста
Функция ЗагрузитьКартинкиСервер(СтруктураПараметров)
	
	УстановитьПривилегированныйРежим(Истина);
	
	ПрисоединенныйФайл = СтруктураПараметров.ПрисоединенныйФайл; 
	
	//ИмяВременногоФайла = "";	
	//Если ЭтоАдресВременногоХранилища(СтруктураПараметров.АдресФайлаХранилище) Тогда
	//	ИмяВременногоФайла = ПолучитьИмяВременногоФайла(СтруктураПараметров.ФайлНаДискеРасширение);
	//	ДвоичныеДанные = ПолучитьИзВременногоХранилища(СтруктураПараметров.АдресФайлаХранилище);
	//	ДвоичныеДанные.Записать(ИмяВременногоФайла);
	//КонецЕсли;	

	АдресВременногоХранилищаФайла = СтруктураПараметров.АдресФайлаХранилище;
	
	Если ЗначениеЗаполнено(СтруктураПараметров.ПрисоединенныйФайл) Тогда
		ИнформацияОФайле = Новый Структура;
		ИнформацияОФайле.Вставить("АдресФайлаВоВременномХранилище",АдресВременногоХранилищаФайла);
		ИнформацияОФайле.Вставить("АдресВременногоХранилищаТекста","");
		ИнформацияОФайле.Вставить("ИмяБезРасширения"              ,СтруктураПараметров.ИмяБезРасширения);
		ИнформацияОФайле.Вставить("ДатаМодификацииУниверсальная"  ,ТекущаяДата());
		ИнформацияОФайле.Вставить("Расширение"                    ,СтрЗаменить(СтруктураПараметров.ФайлНаДискеРасширение,".",""));
		
		ПрисоединенныеФайлы.ОбновитьПрисоединенныйФайл(СтруктураПараметров.ПрисоединенныйФайл,ИнформацияОФайле);
	Иначе
		ПрисоединенныйФайл = ПрисоединенныеФайлы.ДобавитьФайл(СтруктураПараметров.Номенклатура,
		СтруктураПараметров.ИмяБезРасширения,
		СтрЗаменить(СтруктураПараметров.ФайлНаДискеРасширение,".",""),
		СтруктураПараметров.ВремяИзмененияФайла,
		,
		АдресВременногоХранилищаФайла,,);
	КонецЕсли;	
	
	Возврат ПрисоединенныйФайл;
		
КонецФункции

&НаКлиенте
Процедура ЗагрузитьКартинкиКоманда(Команда)
	
	ОчиститьСообщения();

	Ответ = Вопрос("Вы уверены ?", РежимДиалогаВопрос.ДаНет, ,КодВозвратаДиалога.Нет, "Дополнительный вопрос");		
	Если Ответ <> КодВозвратаДиалога.Да Тогда
		Возврат;
	КонецЕсли;	
		
	Для Каждого ВыборкаСтрока Из Объект.ТаблицаКартинок Цикл		
		Если НЕ ВыборкаСтрока.Пометка Тогда
			Продолжить;
		КонецЕсли;
		Если НЕ ЗначениеЗаполнено(ВыборкаСтрока.Номенклатура) Тогда
			Продолжить;
		КонецЕсли;
		Если НЕ ЗначениеЗаполнено(ВыборкаСтрока.Путь) Тогда
			Продолжить;
		КонецЕсли;
				
		ФайлИзображения = Новый Файл(ВыборкаСтрока.Путь);
		Если НЕ ФайлИзображения.Существует() Тогда
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru = 'Файл не найден в рабочем каталоге.'"));
			Продолжить;
		КонецЕсли;
		
		ИмяБезРасширения = ФайлИзображения.ИмяБезРасширения;
		ФайлНаДискеРасширение = ФайлИзображения.Расширение;	 
		ВремяИзмененияФайла = ФайлИзображения.ПолучитьВремяИзменения();
		РазмерФайла = ФайлИзображения.Размер();
		
		АдресФайлаХранилище = "";
		Если ПоместитьФайл(АдресФайлаХранилище, ВыборкаСтрока.Путь, ВыборкаСтрока.Путь, Ложь, УникальныйИдентификатор) Тогда			 
			СтруктураПараметров = Новый Структура();
			СтруктураПараметров.Вставить("Номенклатура",ВыборкаСтрока.Номенклатура);
			СтруктураПараметров.Вставить("ПрисоединенныйФайл",ВыборкаСтрока.ПрисоединенныйФайл);
			СтруктураПараметров.Вставить("ПолноеИмяФайла",ВыборкаСтрока.Путь);
			СтруктураПараметров.Вставить("ИмяБезРасширения",ИмяБезРасширения);
			СтруктураПараметров.Вставить("ФайлНаДискеРасширение",ФайлНаДискеРасширение);
			СтруктураПараметров.Вставить("ВремяИзмененияФайла",ВремяИзмененияФайла);
			СтруктураПараметров.Вставить("АдресФайлаХранилище",АдресФайлаХранилище);			 
			
			ВыборкаСтрока.ПрисоединенныйФайл = ЗагрузитьКартинкиСервер(СтруктураПараметров);
		КонецЕсли;	
				
	КонецЦикла;
	
	ОбновитьОсновныеИзображенияНоменклатуры();

	Оповестить("Завершено");
	
КонецПроцедуры


//============================================================================
//ВЫГРУЗКА КАРТИНОК

&НаСервере
Процедура ВыгрузитьКартинкиНаСервере()
	
	ТекстЗапроса = "ВЫБРАТЬ
	               |	НоменклатураПрисоединенныеФайлы.Ссылка КАК Ссылка,
	               |	НоменклатураПрисоединенныеФайлы.ВладелецФайла КАК Объект,
	               |	ДвоичныеДанныеФайлов.ДвоичныеДанныеФайла КАК ДвоичныеДанныеФайла,
	               |	НоменклатураПрисоединенныеФайлы.Размер КАК Размер,
	               |	НоменклатураПрисоединенныеФайлы.Расширение КАК Расширение,
	               |	НоменклатураПрисоединенныеФайлы.ВладелецФайла.Код КАК ВладелецФайлаКод,
	               |	НоменклатураПрисоединенныеФайлы.ВладелецФайла.Артикул КАК ВладелецФайлаАртикул
	               |ИЗ
	               |	Справочник.НоменклатураПрисоединенныеФайлы КАК НоменклатураПрисоединенныеФайлы
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДвоичныеДанныеФайлов КАК ДвоичныеДанныеФайлов
	               |		ПО НоменклатураПрисоединенныеФайлы.Ссылка = ДвоичныеДанныеФайлов.Файл
	               |ИТОГИ ПО
	               |	Объект,
	               |	Ссылка";
	
	Запрос = Новый Запрос();
	Запрос.Текст = ТекстЗапроса;
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка1 = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам,"Объект");
	Пока Выборка1.Следующий() Цикл
		
		СчетчикКоличества = 0;
		Выборка2 = Выборка1.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам,"Ссылка");
		Пока Выборка2.Следующий() Цикл
			Выборка3 = Выборка2.Выбрать();
			Пока Выборка3.Следующий() Цикл
				СчетчикКоличества = СчетчикКоличества+1;
				
				Попытка
					ИмяФайла = ""+?(Объект.ВариантНаименованияКартинок = "ПоАртикулу",Выборка2.ВладелецФайлаАртикул,Выборка2.ВладелецФайлаКод)+"_"+СчетчикКоличества;			
					ДвоичныеДанные = Выборка3.ДвоичныеДанныеФайла.Получить();
					ДвоичныеДанные.Записать(Объект.КаталогКартинок+"\"+ИмяФайла+"."+Выборка3.Расширение);
				Исключение
					Сообщить("Что то пошло не так и у товара с кодом - "+Выборка2.ВладелецФайлаКод+"  картинка не выгружена.");
				КонецПопытки;
				
			КонецЦикла;	
		КонецЦикла;		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ВыгрузитьКартинки(Команда)
	
	Ответ = Вопрос("Вы уверены ?", РежимДиалогаВопрос.ДаНет, ,КодВозвратаДиалога.Нет, "Дополнительный вопрос");		
	Если Ответ <> КодВозвратаДиалога.Да Тогда
		Возврат;
	КонецЕсли;

	ВыгрузитьКартинкиНаСервере();
	
КонецПроцедуры


//============================================================================
//ВКЛАДКА НОМЕНКЛАТУРА

&НаКлиенте
Процедура ОбновитьИнформациюПоСтрокеНоменклатуры()
	
	ТекущиеДанные = Элементы.ТаблицаНоменклатуры.ТекущиеДанные;	
	Если ТекущиеДанные = Неопределено Тогда	
		Возврат;
	КонецЕсли;	
	
	ТекущиеДанныеСтроки = Новый Структура;
	ТекущиеДанныеСтроки.Вставить("ТекНоменклатура",ТекущиеДанные.Номенклатура);
	ТекущиеДанныеСтроки.Вставить("ГлавнаяКартинкаСсылка",ТекущиеДанные.ГлавнаяКартинкаСсылка);	
	
	ПоказатьПодчиненныйСправочник(ТекущиеДанныеСтроки);
	
	ИнформацияПолучитьКарусельФайлов(ТекущиеДанныеСтроки);
	
	ИнформацияПолучитьГлавнуюКартинкуИз1С(ТекущиеДанныеСтроки);		
	ОписаниеНоменклатуры = ПолучитьОписаниеНоменклатуры(ТекущиеДанные.Номенклатура);	
		
	Для Ном = 1 По 5 Цикл
		ИмяРеквизита = "КартинкаТовара"+Ном;

		ЭтотОбъект[ИмяРеквизита] = ""; 
		//Элементы[ИмяРеквизита].Видимость = Ложь;
	КонецЦикла;

	Отбор = Новый Структура();
	Отбор.Вставить("Номенклатура",ТекущиеДанныеСтроки.ТекНоменклатура);
	СписокКартинокТовара = Объект.ТаблицаКартинок.НайтиСтроки(Отбор);
	НомерКартинки = 0;	
	Для Каждого Выборка Из СписокКартинокТовара Цикл
		НомерКартинки = НомерКартинки + 1;
		ИмяРеквизита = "КартинкаТовара"+НомерКартинки;

		ДвоичныеДанные = Новый ДвоичныеДанные(Выборка.Путь);
		ЭтотОбъект[ИмяРеквизита] = ПоместитьВоВременноеХранилище(ДвоичныеДанные, УникальныйИдентификатор);
		//Элементы[ИмяРеквизита].Видимость = Истина;
	КонецЦикла;

КонецПроцедуры

&НаСервере
Процедура ИнформацияПолучитьКарусельФайлов(ТекущиеДанныеСтроки)
	
	//Отбор = Новый Структура();
	//Отбор.Вставить("Номенклатура",ТекущиеДанныеСтроки.ТекНоменклатура);
	//СписокКартинокТовара = Объект.ТаблицаКартинок.НайтиСтроки(Отбор);
	//	
	///////////////////////////////////////////////////////////
	//
	//МассивРеквизитов = Новый Массив();
	//УдаляемыеРеквизиты = Новый Массив();
	//МассивТипов = Новый Массив();
	//МассивТипов.Добавить(Тип("Строка"));
	//КвалификаторыСтроки = Новый КвалификаторыСтроки(0);
	//ОписаниеТипа = Новый ОписаниеТипов(МассивТипов, ,КвалификаторыСтроки);
	//
	//НомерКартинки = 0;	
	//Для Каждого ТекЭлемент Из Элементы.ГруппаКартинокКарусель.ПодчиненныеЭлементы Цикл
	//	НомерКартинки = НомерКартинки + 1;
	//	ИмяРеквизита = "КартинкаТовара"+НомерКартинки;
	//	УдаляемыеРеквизиты.Добавить(ИмяРеквизита);
	//КонецЦикла;
	//ИзменитьРеквизиты(,УдаляемыеРеквизиты);

	//Для Ном = 1 По 5 Цикл
	//	ИмяРеквизита = "КартинкаТовара"+Ном;
	//	МассивРеквизитов.Добавить(Новый РеквизитФормы(ИмяРеквизита,ОписаниеТипа));
	//	УдаляемыеРеквизиты.Добавить(ИмяРеквизита);
	//КонецЦикла;

	//ИзменитьРеквизиты(МассивРеквизитов);
	//	
	//Для Ном = 1 По 5 Цикл
	//	ИмяРеквизита = "КартинкаТовара"+Ном;

	//	НовыйЭлемент     = Элементы.Добавить(ИмяРеквизита, Тип("ПолеФормы"),Элементы.ГруппаКартинокКарусель);
	//	НовыйЭлемент.Вид = ВидПоляФормы.ПолеКартинки;
	//	НовыйЭлемент.ПутьКДанным = ИмяРеквизита;
	//	НовыйЭлемент.РазмерКартинки = РазмерКартинки.Пропорционально;
	//КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ИнформацияПолучитьГлавнуюКартинкуИз1С(ТекущиеДанныеСтроки)
	
	ПодборКартинкаНоменклатуры = ТекущиеДанныеСтроки.ГлавнаяКартинкаСсылка;		
	Если ЗначениеЗаполнено(ПодборКартинкаНоменклатуры) Тогда
		Попытка
			КартинкаНоменклатуры = ПолучитьНавигационнуюСсылкуКартинки(ПодборКартинкаНоменклатуры, УникальныйИдентификатор);
		Исключение
		КонецПопытки;
	Иначе
		КартинкаНоменклатуры = "";
	Конецесли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьОписаниеНоменклатуры(Номенклатура)
	
	ОписаниеНоменклатуры = Номенклатура.Описание;
	
	Возврат ОписаниеНоменклатуры;
	
КонецФункции

&НаКлиенте
Процедура ТаблицаНоменклатурыПриАктивизацииСтроки(Элемент)
	
	ОбновитьИнформациюПоСтрокеНоменклатуры();

КонецПроцедуры



//============================================================================
//ВКЛАДКА НОМЕНКЛАТУРА

&НаСервере
Процедура УдалитьВсеИзображенияКарточкиНаСервере(ТекущиеДанныеСтроки)
	
	ТекНоменклатура = ТекущиеДанныеСтроки.ТекНоменклатура;
	
	ОбъектНоменклатура = ТекНоменклатура.ПолучитьОбъект(); 
	ОбъектНоменклатура.ФайлКартинки = "";
	ОбъектНоменклатура.Записать();  
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	НоменклатураПрисоединенныеФайлы.Ссылка КАК Ссылка,
	|	НоменклатураПрисоединенныеФайлы.ДатаСоздания КАК ДатаСоздания,
	|	НоменклатураПрисоединенныеФайлы.ДатаМодификацииУниверсальная КАК ДатаМодификацииУниверсальная,
	|	НоменклатураПрисоединенныеФайлы.Размер КАК Размер,
	|	НоменклатураПрисоединенныеФайлы.Описание КАК Описание
	|ИЗ
	|	Справочник.НоменклатураПрисоединенныеФайлы КАК НоменклатураПрисоединенныеФайлы
	|ГДЕ
	|	НоменклатураПрисоединенныеФайлы.ВладелецФайла = &ТекНоменклатура";	
	
	Запрос = Новый Запрос();
	Запрос.УстановитьПараметр("ТекНоменклатура",ТекущиеДанныеСтроки.ТекНоменклатура);
	Запрос.Текст = ТекстЗапроса;
	
	РезультатЗапроса = Запрос.Выполнить();
	Выборка = РезультатЗапроса.Выбрать();
	Пока Выборка.Следующий() Цикл
		ОбъектНоменклатура = Выборка.Ссылка.ПолучитьОбъект(); 
		ОбъектНоменклатура.Удалить();  
	КонецЦикла;

КонецПроцедуры

&НаКлиенте
Процедура УдалитьВсеИзображенияКарточки(Команда)
	
	Ответ = Вопрос("Вы уверены ?", РежимДиалогаВопрос.ДаНет, ,КодВозвратаДиалога.Нет, "Дополнительный вопрос");		
	Если Ответ <> КодВозвратаДиалога.Да Тогда
		Возврат;
	КонецЕсли;

	ТекущиеДанные = Элементы.ТаблицаНоменклатуры.ТекущиеДанные;	
	Если ТекущиеДанные = Неопределено Тогда	
		Возврат;
	КонецЕсли;	
	
	ТекущиеДанные.ГлавнаяКартинкаСсылка = "";

	ТекущиеДанныеСтроки = Новый Структура;
	ТекущиеДанныеСтроки.Вставить("ТекНоменклатура",ТекущиеДанные.Номенклатура);

	УдалитьВсеИзображенияКарточкиНаСервере(ТекущиеДанныеСтроки);
	ОбновитьИнформациюПоСтрокеНоменклатуры();
	
КонецПроцедуры

&НаСервере
Процедура ОчиститьОсновноеИзображениеНаСервере(ТекущиеДанныеСтроки)
	
	ТекНоменклатура = ТекущиеДанныеСтроки.ТекНоменклатура;

	ОбъектНоменклатура = ТекНоменклатура.ПолучитьОбъект(); 
	ОбъектНоменклатура.ФайлКартинки = "";
	ОбъектНоменклатура.Записать();  
	
КонецПроцедуры

&НаКлиенте
Процедура ОчиститьОсновноеИзображение(Команда)
	
	Ответ = Вопрос("Вы уверены ?", РежимДиалогаВопрос.ДаНет, ,КодВозвратаДиалога.Нет, "Дополнительный вопрос");		
	Если Ответ <> КодВозвратаДиалога.Да Тогда
		Возврат;
	КонецЕсли;

	ТекущиеДанные = Элементы.ТаблицаНоменклатуры.ТекущиеДанные;	
	Если ТекущиеДанные = Неопределено Тогда	
		Возврат;
	КонецЕсли;	
	
	ТекущиеДанные.ГлавнаяКартинкаСсылка = "";

	ТекущиеДанныеСтроки = Новый Структура;
	ТекущиеДанныеСтроки.Вставить("ТекНоменклатура",ТекущиеДанные.Номенклатура);

	ОчиститьОсновноеИзображениеНаСервере(ТекущиеДанныеСтроки);
	ОбновитьИнформациюПоСтрокеНоменклатуры();
		
КонецПроцедуры

&НаКлиенте
Процедура ДетализацияПрисоединенныеФайлыПеретаскивание(Элемент, ПараметрыПеретаскивания, СтандартнаяОбработка, Строка, Поле)
	
КонецПроцедуры

&НаКлиенте
Процедура Синхронизация(Команда)
	
	СинхронизацияКартинок();
	
КонецПроцедуры





