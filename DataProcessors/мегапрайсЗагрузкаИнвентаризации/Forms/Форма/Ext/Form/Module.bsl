&НаКлиенте
Перем ЗакрытьОбработку;


&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ИнициализироватьНастройкиСервер();
	
КонецПроцедуры

&НаСервере
Процедура ИнициализироватьНастройкиСервер()
	
	Объект.НастройкиКолонокЛиста.Очистить();
	
	ОбработкаОбъект = РеквизитФормыВЗначение("Объект");
	ОбработкаОбъект.ИнициализироватьНастройки(Объект.НастройкиКолонокЛиста);
	
КонецПроцедуры


&НаКлиенте
Процедура КомандаАвтонастройкаИмпорта(Команда)
	
	АвтонастройкаИмпортаСервер();
	
	УсловноеОформлениеТаблицыБуфер();
	
КонецПроцедуры

&НаСервере
Процедура АвтонастройкаИмпортаСервер()
	
	ОбработкаОбъект = РеквизитФормыВЗначение("Объект");
	
	ОбработкаОбъект.мАвтонастройкаКолонокИмпортаБуфер(Объект.ТабличныйДокумент,Объект.НастройкиКолонокЛиста,НомерСтрокиШапка);
	
КонецПроцедуры

&НаКлиенте
Процедура УсловноеОформлениеТаблицыБуфер()
	
	мЖирныйШрифт = Новый Шрифт(, 8, Истина);

	ОбластьТабличногоПоля = Объект.ТабличныйДокумент.Область("R"+Формат(1, "ЧГ="));
	ОбластьТабличногоПоля.РазмещениеТекста = ТипРазмещенияТекстаТабличногоДокумента.Переносить;
	ОбластьТабличногоПоля.ЦветФона = WebЦвета.СеребристоСерый;
	ОбластьТабличногоПоля.ВертикальноеПоложение = ВертикальноеПоложение.Центр;
	Для Каждого СтрокаНастройки Из Объект.НастройкиКолонокЛиста Цикл	
		Если СтрокаНастройки.НомерКолонки = 0 Тогда
			Продолжить;
		КонецЕсли;
		
		ОбластьТабличногоПоля = Объект.ТабличныйДокумент.Область("R"+Формат(1, "ЧГ=")+"C"+Формат(СтрокаНастройки.НомерКолонки, "ЧГ="));
		ОбластьТабличногоПоля.Примечание.Текст = "Определена колонка "+СтрокаНастройки.Представление;
		ОбластьТабличногоПоля.Шрифт    = мЖирныйШрифт;
		Если СтрокаНастройки.ГруппаПолей = "Цены" ИЛИ СтрокаНастройки.ГруппаПолей = "Документ"	Тогда
			ОбластьТабличногоПоля.ЦветФона = WebЦвета.ЦветМорскойВолныТемный;
		ИначеЕсли СтрокаНастройки.ГруппаПолей = "Характеристики" Тогда
			ОбластьТабличногоПоля.ЦветФона = WebЦвета.СветлоКоралловый;	
		ИначеЕсли СтрокаНастройки.ГруппаПолей = "ДопРеквизиты" Тогда
			ОбластьТабличногоПоля.ЦветФона = WebЦвета.Хаки;			
		Иначе
			ОбластьТабличногоПоля.ЦветФона = WebЦвета.СероСиний;
		КонецЕсли;	
	КонецЦикла;	
	
КонецПроцедуры

&НаКлиенте
Процедура НастройкиКолонокЛистаНомерКолонкиПриИзменении(Элемент)	
	
	УсловноеОформлениеТаблицыБуфер();
	
КонецПроцедуры


//============================================================================
// СЛУЖЕБНЫЕ

Функция глУбратьСимволыСтроки(пКатНом,УбиратьВсеПробелы = Истина) Экспорт
	
	КатНом = пКатНом;
	
	КатНом = СтрЗаменить(КатНом,"-"," ");
	КатНом = СтрЗаменить(КатНом,"_"," ");
	КатНом = СтрЗаменить(КатНом,"("," ");	
	КатНом = СтрЗаменить(КатНом,")"," ");
	КатНом = СтрЗаменить(КатНом,"/"," ");
	КатНом = СтрЗаменить(КатНом,"\"," ");
	КатНом = СтрЗаменить(КатНом,"["," ");	
	КатНом = СтрЗаменить(КатНом,"]"," ");
	КатНом = СтрЗаменить(КатНом,"."," ");
	КатНом = СтрЗаменить(КатНом,":"," ");
	КатНом = СтрЗаменить(КатНом,","," ");
	КатНом = СтрЗаменить(КатНом,";"," ");
	КатНом = СтрЗаменить(КатНом,""""," ");
	КатНом = СтрЗаменить(КатНом,"*"," ");
	КатНом = СтрЗаменить(КатНом,"="," ");
	КатНом = СтрЗаменить(КатНом,"%"," ");
	КатНом = СтрЗаменить(КатНом,">"," ");
	КатНом = СтрЗаменить(КатНом,"<"," ");
	КатНом = СтрЗаменить(КатНом,"~"," ");
	
	КатНом = СтрЗаменить(КатНом,"  "," ");
	
	Если УбиратьВсеПробелы Тогда
		КатНом = СтрЗаменить(КатНом," ","");
	КонецЕсли;
	
	КатНом = ВРег(СокрЛП(КатНом));
	
	Возврат КатНом;
	
КонецФункции

Функция глУбратьКрайниеНули(Строка) Экспорт
	
	////ВАРИАНТ1
	//СтрокаПередачи = СокрЛП(Строка);
	//ВремСтрока  = СтрокаПередачи;
	//ДлинаСтроки = СтрДлина(СтрокаПередачи);
	//Пока 1 = 1 Цикл
	//	Если Лев(ВремСтрока,1) = "0" Тогда
	//		ВремСтрока = Прав(ВремСтрока,ДлинаСтроки - 1);
	//		ДлинаСтроки = ДлинаСтроки - 1;
	//	Иначе
	//		Прервать;
	//	КонецЕсли;
	//КонецЦикла;
	
	////ВАРИАНТ2
	//ДлинаСтроки = СтрДлина(СтрокаПередачи);
	//Начало = 0;
	//Конец = 0;
	//Для й=1 по ДлинаСтроки Цикл
	//	Если Сред(СтрокаПередачи,й)<>"0" Тогда
	//		Если Начало=0 Тогда
	//			Начало = й;
	//		КонецЕсли;
	//		Конец = й;
	//	КонецЕсли;  
	//КонецЦикла;
	//Результат = Сред(СтрокаПередачи,Начало,Конец-Начало+1);
	
	//ВАРИАНТ3
	Строка = СокрЛП(Строка);
	
	Строка = СтрЗаменить(Строка," ","?");
	Строка = СтрЗаменить(Строка,"0"," ");
	Строка = СокрЛП(Строка);
	Строка = СтрЗаменить(Строка," ","0");
	Строка = СтрЗаменить(Строка,"?","");
	
	Возврат Строка;
	
КонецФункции

Функция глПрочитатьСимволыВСтроке(Строка1) Экспорт
	
	НовСтрока = "";
	ПравильныеСимволы = "0123456789,.";
	
	Для Сч = 1 по СтрДлина(Строка1) Цикл
		
		ТекСимв = Сред(Строка1, Сч, 1);
		
		Если Найти(ПравильныеСимволы, ТекСимв) = 0 Тогда
			НовСтрока = НовСтрока + ТекСимв;
		КонецЕсли;
		
		Если Сч = СтрДлина(Строка1) Тогда
			Если ТекСимв = "." Тогда
				НовСтрока = НовСтрока + ТекСимв;
			КонецЕсли;
		КонецЕсли;
		
	КонецЦикла;
	
	НовСтрока = СокрЛП(НовСтрока);
	
	Возврат НовСтрока;	
	
КонецФункции   

Функция глПолучитьСтавкуНДС(Значение)
	
	Если Значение = "10%" ИЛИ Значение = "10" Тогда
		Возврат Перечисления.СтавкиНДС.НДС10;
	ИначеЕсли Значение = "18%" ИЛИ Значение = "18" Тогда
		Возврат Перечисления.СтавкиНДС.НДС18;
	ИначеЕсли Значение = "20%" ИЛИ Значение = "20" Тогда
		Возврат Перечисления.СтавкиНДС.НДС20;	
	ИначеЕсли Значение = "0%" ИЛИ Значение = "0" Тогда
		Возврат Перечисления.СтавкиНДС.НДС0;	
	КонецЕсли;
	
	Возврат Перечисления.СтавкиНДС.БезНДС;
	
КонецФункции


&НаСервере
Процедура ЗаполнитьТаблицуРезультат() Экспорт
	
	Объект.ТабличнаяЧасть.Очистить();
	
	ЕстьАртикул = Ложь;
	ЕстьЕдиница = Ложь;
	ЕстьЦена    = Ложь;
	ЕстьКолонкаКод = Ложь;	
	ЕстьУпаковка = Ложь;
	
	Для Каждого Колонка ИЗ Объект.НастройкиКолонокЛиста Цикл
		Если Колонка.НомерКолонки = 0 Тогда
			Продолжить;
		КонецЕсли;
		
		Название     = СокрЛП(Колонка.ПолеЗагрузки);
		
		Если Название = "Поле_Артикул" Тогда
			ЕстьАртикул = Истина;
		КонецЕсли;
		
		Если Название = "Поле_БазоваяЕдиница" Тогда
			ЕстьЕдиница = Истина;
		КонецЕсли;
		
		Если Название = "Поле_Код" Тогда
			ЕстьКолонкаКод = Истина;
		КонецЕсли;
		
		Если Название = "Поле_ЦенаЗакупки" ИЛИ Название = "Поле_ЦенаПродажи" Тогда
			ЕстьЦена = Истина;				
		КонецЕсли;
		
		Если Название = "Поле_УпаковкаЕдиница" Тогда
			ЕстьУпаковка = Истина;
		КонецЕсли;
	КонецЦикла;
		
	КолСтрок = Объект.ТабличнаяЧасть.Количество();
	
	Для НомерСтроки = 2 По Объект.ТабличныйДокумент.ВысотаТаблицы Цикл	
		КолСтрок = КолСтрок +1;
		КлючНомерСтроки = 0;
		
		СтруктураЗаполнения = Новый Структура();	
		СработалКонтрольЗаполнения = Ложь;
		
		Для Каждого Колонка ИЗ Объект.НастройкиКолонокЛиста Цикл
			Если Колонка.НомерКолонки = 0 Тогда
				Продолжить;
			КонецЕсли;
			
			Название     = СокрЛП(Колонка.ПолеЗагрузки);
			НомерКолонки = Колонка.НомерКолонки;
			
			Значение = СокрЛП(Объект.ТабличныйДокумент.Область("R"+Формат(НомерСтроки,"ЧГ=")+"C"+Формат(НомерКолонки,"ЧГ=")).Текст);
			Значение = СтрЗаменить(Значение,"  "," ");
			
			Если Колонка.КонтрольЗаполнения Тогда
				КонтрольДлиныПоля  = Колонка.КонтрольДлиныПоля;
				Если КонтрольДлиныПоля = 0 Тогда
					Если ПустаяСтрока(Значение) Тогда
						СработалКонтрольЗаполнения = Истина;
						Продолжить;
					КОнецЕсли;
				ИначеЕсли КонтрольДлиныПоля > 0 И СтрДлина(Значение) < КонтрольДлиныПоля Тогда
					СработалКонтрольЗаполнения = Истина;
					Продолжить;
				КонецЕсли;
			КонецЕсли;
									
			Если Название = "Поле_Наименование" Тогда				
				Если Значение = "Товар" Тогда
					СработалКонтрольЗаполнения = Истина;
					Продолжить;
				КонецЕсли;
			КонецЕсли;
			
			Если Название = "Поле_Штрихкод" Тогда
				Значение = СтрЗаменить(Значение," ","");
			КонецЕсли;
						
			Если Название = "Поле_ЦенаЗакупки" ИЛИ Название = "Поле_ЦенаПродажи" ИЛИ Название = "Вес" ИЛИ Название = "Объем" ИЛИ Название = "Поле_Сумма" Тогда
				Значение = СтрЗаменить(Значение,"-",".");
				Значение = СтрЗаменить(Значение," ","");
				Значение = СтрЗаменить(Значение, Символы.Таб, "");
				Значение = СтрЗаменить(Значение, Символы.НПП, "");
				Если Найти(Значение,".") > 0 И Найти(Значение,",") > 0 Тогда
					Значение = СтрЗаменить(Значение,",","");
				ИначеЕсли Найти(Значение,",") > 0 Тогда
					Значение = СтрЗаменить(Значение,",",".");	
				КонецЕсли;
				
				Попытка
					Значение = Число(СокрЛП(Значение));
				Исключение
				КонецПопытки;
			КонецЕсли;
			
			Если Название = "СтавкаНДС" Тогда
				Значение = СтрЗаменить(Значение," ","");
				
				Если ЗначениеЗаполнено(Значение) Тогда
					Значение = глПолучитьСтавкуНДС(Значение);
				КонецЕсли;
			КонецЕсли;
			
			СтруктураЗаполнения.Вставить(Название,Значение);
			
		КонецЦикла;
		
		Если СработалКонтрольЗаполнения Тогда
			Продолжить;
		КонецЕсли;
				
		НовСтрока = Объект.ТабличнаяЧасть.Добавить(); 
		ЗаполнитьЗначенияСвойств(НовСтрока,СтруктураЗаполнения);			
		НовСтрока.Пометка    = Истина;			
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура КомандаСинхронизироватьНаСервере() Экспорт
	
	 ОбработкаОбъект = РеквизитФормыВЗначение("Объект");
	 ОбработкаОбъект.мСинхронизироватьСервер();	
	 ЗначениеВРеквизитФормы(ОбработкаОбъект, "Объект");

	Для Каждого ВыборкаСтрока ИЗ Объект.ТабличнаяЧасть Цикл
						
		Если НЕ ПустаяСтрока(ВыборкаСтрока.Поле_Ячейка) Тогда
			ВыборкаСтрока.Серия = Справочники.СерииНоменклатуры.НайтиПоНаименованию(ВыборкаСтрока.Поле_Серия);
		КонецЕсли;
		Если НЕ ПустаяСтрока(ВыборкаСтрока.Поле_Ячейка) Тогда
			ВыборкаСтрока.Ячейка = Справочники.СкладскиеЯчейки.НайтиПоНаименованию(ВыборкаСтрока.Поле_Ячейка);
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры


&НаКлиенте
Процедура КомандаСинхронизировать(Команда)
	
	ЗаполнитьТаблицуРезультат();
	КомандаСинхронизироватьНаСервере();
	
	Элементы.Страницы.ТекущаяСтраница = Элементы.Страницы.ПодчиненныеЭлементы.СоздатьДокумент;

КонецПроцедуры


&НаСервере
Процедура КомандаЗаполнитьДокументНаСервере()
	
	ДокументОбъект = Объект.Документ.ПолучитьОбъект();
	
	Если Объект.ТолькоОтклонения Тогда
		ДокументОбъект.Товары.Очистить();
	КонецЕсли;		
	
	Для Каждого ВыборкаСтрока ИЗ Объект.ТабличнаяЧасть Цикл
		
		Если Объект.ТолькоОтклонения Тогда
			Если ВыборкаСтрока.Отклонение = 0 Тогда
				Продолжить;
			КонецЕсли;
	
			НоваяСтрока = ДокументОбъект.Товары.Добавить();
			НоваяСтрока.Номенклатура = ВыборкаСтрока.Номенклатура;
			НоваяСтрока.Характеристика = ВыборкаСтрока.Характеристика;
			НоваяСтрока.Упаковка = ВыборкаСтрока.Упаковка;
			НоваяСтрока.Серия    = ВыборкаСтрока.Серия;
			НоваяСтрока.Ячейка   = ВыборкаСтрока.Ячейка;
			НоваяСтрока.Количество         = ВыборкаСтрока.КоличествоДокумент;
			НоваяСтрока.КоличествоУпаковок = ВыборкаСтрока.КоличествоДокумент; 
			НоваяСтрока.КоличествоФакт         = ВыборкаСтрока.Поле_Количество;
			НоваяСтрока.КоличествоУпаковокФакт = ВыборкаСтрока.Поле_Количество; 
		Иначе
			ПараметрыОтбора = Новый Структура;
			ПараметрыОтбора.Вставить("Номенклатура", ВыборкаСтрока.Номенклатура);
			ПараметрыОтбора.Вставить("Характеристика", ВыборкаСтрока.Характеристика);
			ПараметрыОтбора.Вставить("Упаковка", ВыборкаСтрока.Упаковка);
			ПараметрыОтбора.Вставить("Серия", ВыборкаСтрока.Серия);
			ПараметрыОтбора.Вставить("Ячейка", ВыборкаСтрока.Ячейка);
			
			НайденныеСтроки = ДокументОбъект.Товары.НайтиСтроки(ПараметрыОтбора);
			Если НайденныеСтроки.Количество() > 0 Тогда
				Для Каждого НайденнаяСтрока ИЗ НайденныеСтроки Цикл 
					НайденнаяСтрока.КоличествоФакт         = ВыборкаСтрока.Поле_Количество;
					НайденнаяСтрока.КоличествоУпаковокФакт = ВыборкаСтрока.Поле_Количество;
				КонецЦикла;
			Иначе
				Если ВыборкаСтрока.Поле_Количество = 0 Тогда
					Продолжить;
				КонецЕсли;			
					
				НоваяСтрока = ДокументОбъект.Товары.Добавить();
				НоваяСтрока.Номенклатура = ВыборкаСтрока.Номенклатура;
				НоваяСтрока.Характеристика = ВыборкаСтрока.Характеристика;
				НоваяСтрока.Упаковка = ВыборкаСтрока.Упаковка;
				НоваяСтрока.Серия    = ВыборкаСтрока.Серия;
				НоваяСтрока.Ячейка   = ВыборкаСтрока.Ячейка;
				НоваяСтрока.КоличествоФакт         = ВыборкаСтрока.Поле_Количество;
				НоваяСтрока.КоличествоУпаковокФакт = ВыборкаСтрока.Поле_Количество; 
			КонецЕсли;
		КонецЕсли;
			
	КонецЦикла;
	
	ДокументОбъект.Записать();	
		
КонецПроцедуры


&НаКлиенте
Процедура КомандаЗаполнитьДокумент(Команда)
	
	Если НЕ Значениезаполнено(Объект.Документ) Тогда
		Сообщить("Вы выбран документ!");
		Возврат
	КонецЕсли;
	
	КомандаЗаполнитьДокументНаСервере();
	
	ОткрытьЗначение(Объект.Документ);

КонецПроцедуры


//============================================================================
 // НОВАЯ НОМЕНКЛАТУРА
 
 &НаСервере
 Процедура СоздатьНовуюНоменклатуруСервер()
	 
	 ОбработкаОбъект = РеквизитФормыВЗначение("Объект");
	 
	 ОбработкаОбъект.СоздатьНовуюНоменклатуруСервер(Объект.ТабличнаяЧасть);	 
	 
 КонецПроцедуры
 
 &НаКлиенте
 Процедура СоздатьНовуюНоменклатуру(Команда)
	 
	 Отказ = Ложь;
	 Если НЕ ЗначениеЗаполнено(Объект.ГруппаНоменклатурыПоУмолчанию) Тогда
		 Сообщить("Настройки номенклатуры - Не указана Группа номенклатуры (по умолчанию)!");
		 Отказ = Истина;
	 КонецЕсли;	 
	 Если НЕ ЗначениеЗаполнено(Объект.ЕдиницаИзмеренияПоУмолчанию) Тогда
		 Сообщить("Настройки номенклатуры - Не указана Единица измерения (по умолчанию)!");
		 Отказ = Истина;
	 КонецЕсли; 	 
	 Если НЕ ЗначениеЗаполнено(Объект.СтавкаНДСПоУмолчанию) Тогда
		 Сообщить("Настройки номенклатуры - Не указана Ставка НДС (по умолчанию)!");
		 Отказ = Истина;
	 КонецЕсли; 	 
	 Если Отказ Тогда
		 Сообщить("Перед началом работы - заполните обязательные настройки номенклатуры.");
		 Элементы.ВкладкиДанных.ТекущаяСтраница = Элементы.ВкладкиДанных.ПодчиненныеЭлементы.НоваяНоменклатура;
		 Возврат;
	 КонецЕсли;

	 #Если Клиент Тогда
		 Ответ = Вопрос("Вы уверены что хотите Создать новую номенклатуру?", РежимДиалогаВопрос.ДаНет, ,КодВозвратаДиалога.Нет, "Дополнительный вопрос");		
		 Если Ответ <> КодВозвратаДиалога.Да Тогда
			 Возврат;
		 КонецЕсли;
	 #КонецЕсли
	 
	 СоздатьНовуюНоменклатуруСервер();	 
	 Состояние("Завершено");
	 
 КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	
	Если НЕ ЗакрытьОбработку Тогда
		Отказ = Истина;
		ПоказатьВопрос(Новый ОписаниеОповещения("ПередЗакрытиемЗавершение", ЭтотОбъект), НСтр("ru = 'Работа будет завершена, все введенные данные будут потеряны. Закрыть?'"), РежимДиалогаВопрос.ДаНет);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытиемЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	Если РезультатВопроса = КодВозвратаДиалога.Да Тогда
		ЗакрытьОбработку = Истина;
        Закрыть();
    КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура ДокументПриИзмененииНаСервере()
	
		
КонецПроцедуры


&НаСервере
Процедура СравнитьНаСервере()
	
	//Придется пробежаться на случай нажатия второй раз с другими данными документа
	Для Каждого ВыборкаСтрока из Объект.ТабличнаяЧасть Цикл	
		ВыборкаСтрока.КоличествоДокумент = 0;
		ВыборкаСтрока.Отклонение = 0; 
		ВыборкаСтрока.Пометка = Ложь;	
	КонецЦикла;	
	
	ВремТовары = Новый ТаблицаЗначений;
	ВремТовары = Объект.Документ.Товары.Выгрузить();
	
	Для Каждого ВыборкаСтрока Из ВремТовары Цикл		
		ПараметрыОтбора = Новый Структура;
		ПараметрыОтбора.Вставить("Номенклатура", ВыборкаСтрока.Номенклатура);
		ПараметрыОтбора.Вставить("Характеристика", ВыборкаСтрока.Характеристика);
		ПараметрыОтбора.Вставить("Упаковка", ВыборкаСтрока.Упаковка);
		ПараметрыОтбора.Вставить("Серия", ВыборкаСтрока.Серия);
		ПараметрыОтбора.Вставить("Ячейка", ВыборкаСтрока.Ячейка);
		
		НайденныеСтроки = Объект.ТабличнаяЧасть.НайтиСтроки(ПараметрыОтбора);
		Если НайденныеСтроки.Количество() > 0 Тогда
			Для Каждого НайденнаяСтрока ИЗ НайденныеСтроки Цикл 
				НайденнаяСтрока.КоличествоДокумент = ВыборкаСтрока.Количество;
			КонецЦикла;
		Иначе
			НоваяСтрока = Объект.ТабличнаяЧасть.Добавить();
			НоваяСтрока.Номенклатура = ВыборкаСтрока.Номенклатура;
			НоваяСтрока.Характеристика = ВыборкаСтрока.Характеристика;
			НоваяСтрока.Упаковка = ВыборкаСтрока.Упаковка;
			НоваяСтрока.Серия    = ВыборкаСтрока.Серия;
			НоваяСтрока.Ячейка   = ВыборкаСтрока.Ячейка;
			НоваяСтрока.КоличествоДокумент = ВыборкаСтрока.Количество;			
		КонецЕсли;
	КонецЦикла;			
	
	Для Каждого ВыборкаСтрока из Объект.ТабличнаяЧасть Цикл	
		ВыборкаСтрока.Отклонение = ВыборкаСтрока.Поле_Количество - ВыборкаСтрока.КоличествоДокумент; 
		Если ВыборкаСтрока.Отклонение = 0 Тогда
			ВыборкаСтрока.Пометка = Ложь;
		Иначе
			ВыборкаСтрока.Пометка = Истина;;
		КонецЕсли;	
	КонецЦикла;	

КонецПроцедуры

&НаКлиенте
Процедура Сравнить(Команда)
	
	Если НЕ ЗначениеЗаполнено(Объект.Документ) Тогда
		Сообщить("Не выбран документ!");
		Возврат;
	КонецЕсли;

	СравнитьНаСервере();

КонецПроцедуры


&НаКлиенте
Процедура ТолькоОтклоненияПриИзменении(Элемент)
	
	Если Объект.ТолькоОтклонения Тогда
		Элементы.ТабличнаяЧасть.ОтборСтрок = Новый ФиксированнаяСтруктура("Пометка",Истина);
	Иначе
		Элементы.ТабличнаяЧасть.ОтборСтрок = Неопределено;
	КонецЕсли;
		
КонецПроцедуры



//============================================================================
// 

&НаСервере
Процедура ПриСохраненииДанныхВНастройкахНаСервере(Настройки)

	Настройки.Вставить("НастройкиКолонокЛиста", Объект.НастройкиКолонокЛиста.Выгрузить());
	
КонецПроцедуры

&НаСервере
Процедура ПриЗагрузкеДанныхИзНастроекНаСервере(Настройки)
	
	НастройкиКолонокЛиста = Настройки.Получить("НастройкиКолонокЛиста");
	Если НастройкиКолонокЛиста <> Неопределено Тогда
		Объект.НастройкиКолонокЛиста.Загрузить(НастройкиКолонокЛиста);
	КонецЕсли; 
				
КонецПроцедуры

//============================================================================
// 

&НаСервере
Функция ИзменитьЦеныНаСервере()
	
	НовыйДокумент = Документы.УстановкаЦенНоменклатуры.СоздатьДокумент();	 
	НовыйДокумент.Дата = ТекущаяДата();
	
	//НомерВПределахДня = УстановкаЦенВызовСервера.РассчитатьНомерВПределахДня(ТекущаяДата(), НовыйДокумент.Ссылка);
	//НовыйДокумент.Дата = УстановкаЦенКлиентСервер.РассчитатьДатуДокумента(ТекущаяДата(), НомерВПределахДня);
	
	НовыйДокумент.Ответственный = ПараметрыСеанса.ТекущийПользователь;
	НовыйДокумент.Комментарий = "Загрузка из инвентаризации";
	НовыйДокумент.Согласован = Истина;
	НовыйДокумент.Статус     = Перечисления.СтатусыУстановокЦенНоменклатуры.Согласован;
	
	СтрокаТЧ = НовыйДокумент.ВидыЦен.Добавить();
	СтрокаТЧ.ВидЦены = Объект.ВидЦенЗакупочная;	

	Для Каждого Стр Из Объект.ТабличнаяЧасть Цикл		 
		Если НЕ ЗначениеЗаполнено(Стр.Номенклатура) Тогда
			Продолжить;
		КонецЕсли; 
				
		Если НЕ ЗначениеЗаполнено(Стр.Поле_Цена) Тогда
			Продолжить;
		КонецЕсли;		
		
		СтрокаТЧ = НовыйДокумент.Товары.Добавить();
		СтрокаТЧ.ВидЦены          = Объект.ВидЦенЗакупочная;
		СтрокаТЧ.Номенклатура     = Стр.Номенклатура;
		СтрокаТЧ.Характеристика   = Стр.Характеристика;
		СтрокаТЧ.Упаковка         = Стр.Упаковка;
		СтрокаТЧ.Цена             = Стр.Поле_Цена;				 	
	КонецЦикла;
	
	Если НовыйДокумент.Товары.Количество() > 0 Тогда
		НовыйДокумент.Записать(РежимЗаписиДокумента.Запись);	 
		Попытка 
			НовыйДокумент.Записать(РежимЗаписиДокумента.Проведение);
			ТекстСообщения = "УСТАНОВКА ЦЕН - "+НовыйДокумент.Ссылка+" - проведен.";
		Исключение
			НовыйДокумент.Записать();
			ТекстСообщения = "УСТАНОВКА ЦЕН - "+НовыйДокумент.Ссылка+" - НЕ проведен.";
		КонецПопытки; 
	Иначе
		Сообщить("Нет строк для переоценки");
		Возврат Неопределено;
	КонецЕсли;
	
	Возврат НовыйДокумент.Ссылка;

КонецФункции

&НаКлиенте
Процедура ИзменитьЦены(Команда)
	
	ДокументОбъект = ИзменитьЦеныНаСервере();
	Если НЕ ДокументОбъект = Неопределено Тогда 
		ФормаДока = ПолучитьФорму("Документ.УстановкаЦенНоменклатуры.Форма.ФормаДокумента", Новый Структура("Ключ", ДокументОбъект));    
		ФормаДока.Открыть();	
	КонецЕсли;
	
КонецПроцедуры





ЗакрытьОбработку = Ложь;


