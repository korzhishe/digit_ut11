

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Попытка 
		Константы.Б_НомерВерсииМодуляОбменаССайтом.Получить();
		Объект.ИспользоватьБитрикс = Истина;
	Исключение
		Объект.ИспользоватьБитрикс = Ложь;
	КонецПопытки;

	
	СхемаКомпоновкиДанных = РеквизитФормыВЗначение("Объект").ПолучитьМакет("СхемаЗапроса");
	URLСхемы = ПоместитьВоВременноеХранилище(СхемаКомпоновкиДанных, Новый УникальныйИдентификатор());
	ИсточникНастроек = Новый ИсточникДоступныхНастроекКомпоновкиДанных(URLСхемы);
	Объект.КомпоновщикНастроек.Инициализировать(ИсточникНастроек);
	Объект.КомпоновщикНастроек.ЗагрузитьНастройки(СхемаКомпоновкиДанных.НастройкиПоУмолчанию);

КонецПроцедуры

 &НаКлиенте
 Процедура ФайлКаталогНаЛокальномДискеНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	 
	 СтандартнаяОбработка = Ложь;
	 
	 ДиалогОткрытияФайла = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.ВыборКаталога);
	 ДиалогОткрытияФайла.Заголовок = НСтр("ru = 'Выберите путь'");
	 
	 ДиалогОткрытияФайла.Показать(Новый ОписаниеОповещения("ФайлКаталогНаЛокальномДискеНачалоВыбораЗавершение", ЭтотОбъект, Новый Структура("ДиалогОткрытияФайла", ДиалогОткрытияФайла)));		
	 
 КонецПроцедуры
 
 &НаКлиенте
 Процедура ФайлКаталогНаЛокальномДискеНачалоВыбораЗавершение(ВыбранныеФайлы, ДополнительныеПараметры) Экспорт
	 
	 ДиалогОткрытияФайла = ДополнительныеПараметры.ДиалогОткрытияФайла;
	 	 
	 Если (ВыбранныеФайлы <> Неопределено) Тогда
		 Объект.ПутьКФайлу = ДиалогОткрытияФайла.Каталог;
	 КонецЕсли;

КонецПроцедуры


&НаСервере
Функция ВыгрузитьНаСервере()
	
	ОбработкаОбъект = РеквизитФормыВЗначение("Объект");
	Адрес = ОбработкаОбъект.СформироватьВыгрузку();
	
	Возврат Адрес;
		
КонецФункции

&НаКлиенте
Процедура Выгрузить(Команда)
	
	Адрес = ВыгрузитьНаСервере();

	Путь = Объект.ПутьКФайлу+"\megaprice_export.csv";
    ВремФайл = ПолучитьИмяВременногоФайла("csv");
    
    Данные = ПолучитьИзВременногоХранилища(Адрес);
    Данные.Записать(Путь);	
	
	Сообщить("Выгрузка успешно завершена.");
	
КонецПроцедуры

&НаСервере
Процедура ЗагрузитьНаСервере(СтруктураПараметров)
	
	 Если ЭтоАдресВременногоХранилища(СтруктураПараметров.АдресФайлаХранилище) Тогда
		 ИмяВременногоФайла = ПолучитьИмяВременногоФайла();
		 ДвоичныеДанные     = ПолучитьИзВременногоХранилища(СтруктураПараметров.АдресФайлаХранилище);
		 ДвоичныеДанные.Записать(ИмяВременногоФайла);
	 Иначе
		 Сообщить("Ошибка загрузки файла - "+ОписаниеОшибки());
		 Возврат;
	 КонецЕсли;	

	Объект.ТабличнаяЧасть.Очистить();
	
	ТекстовыйФайл = Новый ЧтениеТекста(ИмяВременногоФайла,КодировкаТекста.ANSI);            
	ВыборкаСтрока = ТекстовыйФайл.ПрочитатьСтроку();
	
	Пока ВыборкаСтрока <> Неопределено Цикл // строки читаются до символа перевода строки
		
		//Сообщить(ВыборкаСтрока);
		ВыборкаСтрока =  ТекстовыйФайл.ПрочитатьСтроку();
		Если ПустаяСтрока(ВыборкаСтрока) Тогда
			Продолжить;
		КонецЕсли;
		
		Массив = СтрРазделить(ВыборкаСтрока,";");
		НоваяСтрока = Объект.ТабличнаяЧасть.Добавить();
		НоваяСтрока.Поле_Родитель = Массив.Получить(0);
		НоваяСтрока.Поле_Код = Массив.Получить(1);
		НоваяСтрока.Поле_Артикул = Массив.Получить(2);
		НоваяСтрока.Поле_Наименование = Массив.Получить(3);
		НоваяСтрока.Поле_Характеристика = Массив.Получить(4);
		НоваяСтрока.Поле_ID_Склад = Массив.Получить(5);
		НоваяСтрока.Поле_Склад = Массив.Получить(6);
		НоваяСтрока.Поле_Количество = Массив.Получить(7);
		НоваяСтрока.Поле_Цена = Массив.Получить(8);
		
	КонецЦикла;	
	
	ТекстовыйФайл.Закрыть(); 
	УдалитьИзВременногоХранилища(СтруктураПараметров.АдресФайлаХранилище);		
	
КонецПроцедуры

&НаКлиенте
Процедура Загрузить(Команда)
	
	АдресФайлаХранилище = "";
	ВыбранныйПутьКФайлу = Объект.ПутьКФайлу+"\megaprice_export.csv";
	
	Если ПоместитьФайл(АдресФайлаХранилище, ВыбранныйПутьКФайлу, ВыбранныйПутьКФайлу, Ложь, УникальныйИдентификатор) Тогда			 
		СтруктураПараметров = Новый Структура();
		СтруктураПараметров.Вставить("АдресФайлаХранилище",АдресФайлаХранилище);			 
		
		ЗагрузитьНаСервере(СтруктураПараметров);
	КонецЕсли;	
	
	Сообщить("Загрузка успешно завершена.");
	
КонецПроцедуры

&НаСервере
Процедура СинхронизироватьНаСервере()
	
	ОбработкаОбъект = РеквизитФормыВЗначение("Объект");
	ОбработкаОбъект.мСинхронизироватьСервер();	
	ЗначениеВРеквизитФормы(ОбработкаОбъект, "Объект");

	Для Каждого ВыборкаСтрока ИЗ Объект.ТабличнаяЧасть Цикл
		
		Если НЕ ПустаяСтрока(ВыборкаСтрока.Поле_Склад) Тогда
			
			//Если Объект.ИспользоватьБитрикс Тогда 
			//	НайтиСклад = Справочники.Склады.НайтиПоРеквизиту("Б_Идентификатор",ВыборкаСтрока.Поле_ID_Склад);
			//КонецЕсли;
			//
			//НайтиСклад = Справочники.Склады.НайтиПоНаименованию(ВыборкаСтрока.Поле_Склад);
			//Если НайтиСклад = Справочники.Склады.ПустаяСсылка() Тогда
			//	НайтиСклад = Справочники.Склады.СоздатьЭлемент();
			//	НайтиСклад.Наименование = ВыборкаСтрока.Поле_Склад;
			//	Если Объект.ИспользоватьБитрикс Тогда
			//		НайтиСклад.Б_Идентификатор = ВыборкаСтрока.Поле_ID_Склад;
			//	КонецЕсли;			
			//	НайтиСклад.Записать();
			//КонецЕсли;		
			
			Если ЗначениеЗаполнено(ВыборкаСтрока.Поле_ID_Склад) Тогда
				НайтиСклад = Справочники.Склады.ПолучитьСсылку(Новый УникальныйИдентификатор(ВыборкаСтрока.Поле_ID_Склад));
				Если СтрНайти(Строка(НайтиСклад),"Объект не найден") > 0 Тогда
					ДобавитьСклад = Справочники.Склады.СоздатьЭлемент();
					ДобавитьСклад.УстановитьСсылкуНового(НайтиСклад);
					ДобавитьСклад.Наименование = ВыборкаСтрока.Поле_Склад; 
					ДобавитьСклад.Записать();
					
					НайтиСклад = НайтиСклад.Ссылка;
				КонецЕсли;	
			КонецЕсли;	
			Если НайтиСклад = Справочники.Склады.ПустаяСсылка() Тогда
				Справочники.Склады.НайтиПоНаименованию(ВыборкаСтрока.Поле_Склад);
			КонецЕсли;	
			
			ВыборкаСтрока.Склад = НайтиСклад.Ссылка;
		КонецЕсли;
		
		Если НЕ ПустаяСтрока(ВыборкаСтрока.Поле_Характеристика) Тогда
			ВыборкаСтрока.Характеристика = Справочники.ХарактеристикиНоменклатуры.НайтиПоНаименованию(ВыборкаСтрока.Поле_Характеристика,,,ВыборкаСтрока.Номенклатура);
		КонецЕсли;
		
	КонецЦикла;
	
	
	
	
КонецПроцедуры

&НаКлиенте
Процедура Синхронизировать(Команда)
	
	СинхронизироватьНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура МегапрайсРегистрацияНаСервере()
	
	
	Если НЕ ЗначениеЗаполнено(Объект.ПрофильПрайсЛиста) Тогда
		Сообщить("Не выбран профиль прайса поставщика");
		Возврат;
	КонецЕсли;
	
	РегистрыСведений.мегапрайсЦеныНоменклатурыПоставщиков.УдалитьПрайсЛист(Объект.ПрофильПрайсЛиста);
	
	ПустаяСсылка  = Справочники.Номенклатура.ПустаяСсылка();
		
	НаборЗаписей = РегистрыСведений.мегапрайсЦеныНоменклатурыПоставщиков.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.ПрайсПартнера.Установить(Объект.ПрофильПрайсЛиста);
	
	МаксСтрокЗапись = 10000;
	КолОбработанныхСтрок = 0;
	Для Каждого Стр из Объект.ТабличнаяЧасть Цикл			
		КолОбработанныхСтрок = КолОбработанныхСтрок +1;
		
		НоваяЗапись = НаборЗаписей.Добавить();
		НоваяЗапись.Период        = ТекущаяДата();	
		НоваяЗапись.КлючСтроки    = Стр.НомерСтроки;
		НоваяЗапись.ПрайсПартнера = Объект.ПрофильПрайсЛиста;
		ЗаполнитьЗначенияСвойств(НоваяЗапись, Стр);
		НоваяЗапись.Количество   = Стр.Поле_Количество;	
		НоваяЗапись.Валюта       = "";			
		НоваяЗапись.Цена         = 0;
		НоваяЗапись.ЦенаПродажи  = Стр.Поле_Цена;	
		НоваяЗапись.МинимальныйЗаказ  = 0;	
		//Если КолОбработанныхСтрок = 20000 Тогда
		//	//НаборЗаписей.ОбменДанными.Загрузка = Истина;
		//	НаборЗаписей.Записать(Ложь);
		//	НаборЗаписей.Очистить();
		//	КолОбработанныхСтрок = 0;
		//КонецЕсли;
	КонецЦикла;
	
	Если НаборЗаписей.Количество() > 0 Тогда
		НаборЗаписей.Записать(Истина);
	КонецЕсли;
	
	//ТекстСОобщения = "Прайс загружен (вручную). - "+ПрайсПартнера+"  идентификатор прайса - "+ИдентификаторПрайса;
	//СообщениеВЖурнал(ТекстСОобщения);
	//Если НЕ ЗагруженРоботом Тогда
	//	мегапрайсЗаписатьСобытиеВЖурнал(ПрайсПартнера,ТекстСОобщения);	
	//КонецЕсли;
	
	//ПрофильОбъект = ПрайсПартнера.ПолучитьОбъект();
	//ПрофильОбъект.ИдентификаторПрайса = ИдентификаторПрайса;
	//ПрофильОбъект.Записать();
	
КонецПроцедуры

&НаКлиенте
Процедура МегапрайсРегистрация(Команда)
	
	МегапрайсРегистрацияНаСервере();
	
КонецПроцедуры





&НаКлиенте
 Процедура Справочники_СоздатьНоменклатуруПоставщикаКнопка(Команда)
	 
	 Если НЕ ЗначениеЗаполнено(Объект.ПрофильПрайсЛиста) Тогда
		 Сообщить("Не указан Партнер!");
		 Возврат;
	 КонецЕсли;
	 
	 ПоказатьВопрос(Новый ОписаниеОповещения("Справочники_СоздатьНоменклатуруПоставщикаЗавершение", ЭтотОбъект), НСтр("ru = 'Выберите действие со справочником Номенклатура поставщиков.
	 |Да - создать новые и обновить всю номенклатуру поставщика.
	 |Нет - только создать новые элементы.
	 |Отмена - отменить команду.'"), РежимДиалогаВопрос.ДаНетОтмена);

 КонецПроцедуры

  &НаКлиенте
 Процедура Справочники_СоздатьНоменклатуруПоставщикаЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
	 
	 Если РезультатВопроса = КодВозвратаДиалога.Отмена Тогда
		 Возврат;
	 КонецЕсли;	
	 
	 Если РезультатВопроса = КодВозвратаДиалога.Да Тогда
		 Справочники_СоздатьНоменклатуруПоставщикаСервер(Истина);
	 ИначеЕсли РезультатВопроса =  КодВозвратаДиалога.Нет Тогда
		 Справочники_СоздатьНоменклатуруПоставщикаСервер();
	 КонецЕсли;
	 
	 Сообщить("Загрузка успешно завершена.");
	 
 КонецПроцедуры
 
  &НаСервере
 Процедура Справочники_СоздатьНоменклатуруПоставщикаСервер(Изменить=Ложь)
	 
	 УстановитьПривилегированныйРежим(Истина);
	 
	 ОбработкаОбъект = РеквизитФормыВЗначение("Объект");
	 
	 СтруктураПараметров = Новый Структура;
	 СтруктураПараметров.Вставить("ПрофильПрайсЛиста",Объект.ПрофильПрайсЛиста); 
	 ОбработкаОбъект.Справочники_СоздатьНоменклатуруПоставщика(СтруктураПараметров,Объект.ТабличнаяЧасть,Изменить);	 
	 
 КонецПроцедуры

 
 
