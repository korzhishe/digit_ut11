
&НаКлиенте
Перем ТекущаяСтраницаНавигации;
&НаКлиенте
Перем НавигацияПоИерархии;
&НаКлиенте
Перем НавигацияПоВидамНоменклатуры;
&НаКлиенте
Перем НавигацияПоСегментам;
&НаКлиенте
Перем НавигацияПоПроизводителям;

&НаКлиенте
Процедура ПанельНавигацииПоказатьСкрыть(Команда)
	
	ОбновитьВсеОтборыСервер();
	
	Элементы.Навигация.Видимость = ИспользоватьНавигацию;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьВсеОтборыСервер()
	
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(СписокНоменклатура,"Родитель",Неопределено,ВидСравненияКомпоновкиДанных.ВИерархии, ,Ложь);
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(СписокНоменклатура,"Производитель",Неопределено,ВидСравненияКомпоновкиДанных.Равно, ,Ложь);	
	
КонецПроцедуры

&НаКлиенте
Процедура ВариантОтбораПриИзменении()
	
	// Удаление всех наложенных отборов.
	СписокНоменклатура.Отбор.Элементы.Очистить();
	
	Элементы.ИерархияНоменклатуры.ТекущаяСтрока = Неопределено;
	
КонецПроцедуры

&НаКлиенте
Процедура ВариантыНавигацииПриСменеСтраницы(Элемент, ТекущаяСтраница)
	
	ВариантОтбораПриИзменении();
	
	ТекущаяСтраницаНавигации = Элементы.Навигация.ТекущаяСтраница;
	
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(СписокНоменклатура.Отбор,"Родитель",Неопределено,ВидСравненияКомпоновкиДанных.Равно, ,Ложь);
	ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(СписокНоменклатура,"ГруппаНоменклатуры", Неопределено, Ложь);
	
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(СписокНоменклатура.Отбор,"Производитель",Неопределено,ВидСравненияКомпоновкиДанных.Равно, ,Ложь);	
	
КонецПроцедуры

&НаКлиенте
Процедура НавигацияПриАктивизацииСтроки(Элемент)
	
	Если НЕ ИспользоватьНавигацию Тогда
		Возврат;
	КонецЕсли;

	ЭлементыВариантыНавигации = Элементы.Навигация.ТекущаяСтраница;
	
	Если ТекущаяСтраницаНавигации = НавигацияПоИерархии Тогда
		ОтборЗначение = Элементы.ИерархияНоменклатуры.ТекущаяСтрока;
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(СписокНоменклатура.Отбор,"Родитель",ОтборЗначение,ВидСравненияКомпоновкиДанных.ВИерархии, ,Истина);
		
	ИначеЕсли ТекущаяСтраницаНавигации = НавигацияПоПроизводителям Тогда		
		ОтборЗначение = Элементы.ПроизводителиНоменклатуры.ТекущаяСтрока;
		
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(СписокНоменклатура.Отбор,"Производитель",ОтборЗначение,ВидСравненияКомпоновкиДанных.Равно, ,Истина);				
	КонецЕсли;
	
КонецПроцедуры





&НаСервереБезКонтекста
Функция ИнформацияЦеныПоставщиков(ПараметрыЗапроса) 
	
	ТаблицаРезультат = Новый Массив;
	
	ТекстЗапроса =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ЦеныНоменклатурыКонтрагентов.ПрайсПартнера.Партнер КАК Поставщик,
	|	ЦеныНоменклатурыКонтрагентов.Валюта КАК Валюта,
	|	МИНИМУМ(ЦеныНоменклатурыКонтрагентов.Цена) КАК ЦенаПоставщика,
	|	СУММА(ЦеныНоменклатурыКонтрагентов.Количество) КАК ОстатокКонтрагента,
	|	МАКСИМУМ(ЦеныНоменклатурыКонтрагентов.СрокПоставки) КАК СрокПоставки,
	|	МАКСИМУМ(ЦеныНоменклатурыКонтрагентов.Период) КАК ДатаЦены,
	|	ЦеныНоменклатурыКонтрагентов.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
	|	0 КАК ЦенаПересчет
	|ИЗ
	|	РегистрСведений.мегапрайсЦеныНоменклатурыПоставщиков.СрезПоследних(, Номенклатура = &ВыбНоменклатура) КАК ЦеныНоменклатурыКонтрагентов
	|
	|СГРУППИРОВАТЬ ПО
	|	ЦеныНоменклатурыКонтрагентов.ПрайсПартнера.Партнер,
	|	ЦеныНоменклатурыКонтрагентов.Валюта,
	|	ЦеныНоменклатурыКонтрагентов.Период,
	|	ЦеныНоменклатурыКонтрагентов.ХарактеристикаНоменклатуры
	|
	|УПОРЯДОЧИТЬ ПО
	|	ЦеныНоменклатурыКонтрагентов.ПрайсПартнера.Партнер.Наименование";
	
	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапроса;
	Запрос.УстановитьПараметр("ВыбНоменклатура",ПараметрыЗапроса.Номенклатура);
	
	ВозможныеПоставщикиТаб = Запрос.Выполнить().Выгрузить();
	
	Если ЗначениеЗаполнено(ПараметрыЗапроса.ВидЦенНоменклатуры) Тогда
		ВалютаРасчетная = ПараметрыЗапроса.ВидЦенНоменклатуры.ВалютаЦены;
	Иначе
		ВалютаРасчетная = ПараметрыЗапроса.Валюта;
	КонецЕсли;
	СтруктураВалютыРасчета = РаботаСКурсамиВалют.ПолучитьКурсВалюты(ВалютаРасчетная, ТекущаяДата());
	
	Для Каждого ВыборкаСтрока Из ВозможныеПоставщикиТаб Цикл
		Если ВыборкаСтрока.ЦенаПоставщика = 0  Тогда
			Продолжить;
		КонецЕсли;
		
		Если ВалютаРасчетная <> ВыборкаСтрока.Валюта Тогда
			//РаботаСКурсамиВалют.ПересчитатьВВалюту(ВыборкаСтрока.ЦенаПоставщика,ВыборкаСтрока.Валюта,ВалютаУпр,ТекущаяДата());	
			СтруктураВалюты = РаботаСКурсамиВалют.ПолучитьКурсВалюты(ВыборкаСтрока.Валюта, ТекущаяДата());
			ВыборкаСтрока.ЦенаПересчет = РаботаСКурсамиВалютКлиентСервер.ПересчитатьПоКурсу(ВыборкаСтрока.ЦенаПоставщика, СтруктураВалюты, СтруктураВалютыРасчета);
		Иначе
			ВыборкаСтрока.ЦенаПересчет = ВыборкаСтрока.ЦенаПоставщика;
		КонецЕсли;
		
		НоваяСтрока = Новый Структура("ДатаЦены, Поставщик, СрокПоставки, ОстатокКонтрагента, ЦенаПоставщика, Валюта, ЦенаПересчет");
		ЗаполнитьЗначенияСвойств(НоваяСтрока, ВыборкаСтрока);
		
		ТаблицаРезультат.Добавить(НоваяСтрока);		
	КонецЦикла;	
	
	Возврат Новый Структура("ТаблицаРезультат",ТаблицаРезультат);
	
КонецФункции


&НаСервереБезКонтекста
Функция ПолучитьНавигационнуюСсылкуКартинки(ФайлКартинки, ИдентификаторФормы)
	
	УстановитьПривилегированныйРежим(Истина);
	
	Возврат ПрисоединенныеФайлы.ПолучитьДанныеФайла(ФайлКартинки).СсылкаНаДвоичныеДанныеФайла;
	
КонецФункции

&НаСервере
Функция ПолучитьОсновноеИзображение(Ссылка)

	ПодборКартинкаНоменклатуры = Ссылка.ФайлКартинки;		
	Если ЗначениеЗаполнено(ПодборКартинкаНоменклатуры) Тогда
		КартинкаНоменклатуры = ПолучитьНавигационнуюСсылкуКартинки(ПодборКартинкаНоменклатуры, УникальныйИдентификатор)
	Иначе
		КартинкаНоменклатуры = "";
	Конецесли;
		
КонецФункции

&НаСервереБезКонтекста
Функция ПолучитьОписаниеНоменклатуры(Номенклатура)
	
	ОписаниеНоменклатуры = Номенклатура.Описание;
	
	Возврат ОписаниеНоменклатуры;
	
КонецФункции

&НаСервере
Процедура ПолучитьКартинкиТекущегоЭлементаСервер(Ссылка)
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	НоменклатураПрисоединенныеФайлы.Ссылка КАК ПрисоединенныйФайл
	|ИЗ
	|	Справочник.НоменклатураПрисоединенныеФайлы КАК НоменклатураПрисоединенныеФайлы
	|ГДЕ
	|	НоменклатураПрисоединенныеФайлы.ВладелецФайла = &ТекНоменклатура";	
	
	Запрос = Новый Запрос();
	Запрос.УстановитьПараметр("ТекНоменклатура",Ссылка);
	Запрос.Текст = ТекстЗапроса;
	
	СписокКартинокТовара = Запрос.Выполнить().Выгрузить();
	
	НомерКартинки = 0;
	Для Каждого Выборка Из СписокКартинокТовара Цикл		
		НомерКартинки = НомерКартинки + 1;
		ИмяРеквизита = "КартинкаТовара"+НомерКартинки;
		
		ЭтотОбъект[ИмяРеквизита] = ПолучитьНавигационнуюСсылкуКартинки(Выборка.ПрисоединенныйФайл, УникальныйИдентификатор);
		
		Если НомерКартинки = 5 Тогда
			Прервать;
		КонецЕсли;
	КонецЦикла;		
	
КонецПроцедуры

&НаКлиенте
Процедура ПоказатьКартинкиТекущегоЭлемента(Ссылка)
	
	Для Ном = 1 По 5 Цикл
		ИмяРеквизита = "КартинкаТовара"+Ном;
		
		ЭтаФорма[ИмяРеквизита] = ""; 
	КонецЦикла;
		
	ПолучитьКартинкиТекущегоЭлементаСервер(Ссылка);
	
КонецПроцедуры


&НаКлиенте
Процедура СписокНоменклатураПриАктивизацииСтроки(Элемент)
	
	ТекущиеДанныеНоменклатура = Элементы.СписокНоменклатура.ТекущиеДанные;
	
	Если ТекущиеДанныеНоменклатура = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если Элементы.ДопИнформация.ТекущаяСтраница = Элементы.СтраницаПоставщики Тогда
		
		ПараметрыЗапроса = Новый Структура;
		ПараметрыЗапроса.Вставить("Номенклатура", ТекущиеДанныеНоменклатура.Ссылка);
		ПараметрыЗапроса.Вставить("ВидЦенНоменклатуры", Объект.ВидЦенНоменклатуры);
		ПараметрыЗапроса.Вставить("Валюта", Объект.Валюта);
		
		СтруктураИнформации = ИнформацияЦеныПоставщиков(ПараметрыЗапроса);
		РасшифровкаЦеныПоставщиков.Очистить();
		
		Для Каждого ВыборкаСтрока Из СтруктураИнформации.ТаблицаРезультат Цикл				
			НоваяСтрока = РасшифровкаЦеныПоставщиков.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока,ВыборкаСтрока);
		КонецЦикла;	
		
	ИначеЕсли Элементы.ДопИнформация.ТекущаяСтраница = Элементы.СтраницаОписаниеТовара Тогда
		
		ОписаниеНоменклатуры = ПолучитьОписаниеНоменклатуры(ТекущиеДанныеНоменклатура.Ссылка);		
		ПолучитьОсновноеИзображение(ТекущиеДанныеНоменклатура.Ссылка);
		
	ИначеЕсли Элементы.ДопИнформация.ТекущаяСтраница = Элементы.СтраницаКартинкиНоменклатуры Тогда
		
		ПоказатьКартинкиТекущегоЭлемента(ТекущиеДанныеНоменклатура.Ссылка);
		
	КонецЕсли;

	
КонецПроцедуры




&НаКлиенте
Процедура ПоискПоСтроке(Команда)
	ПрименитьПоиск();
КонецПроцедуры


&НаСервере
Функция мРазложитьСтрокуВМассивПодстрок(Знач Стр, Разделитель = ";")
	
	МассивСтрок = Новый Массив();
	
	Если Разделитель = " " Тогда
		Стр = СокрЛП(Стр);
		Пока 1=1 Цикл
			Поз = Найти(Стр,Разделитель);
			Если Поз=0 Тогда
				МассивСтрок.Добавить(Стр);
				Возврат МассивСтрок;
			КонецЕсли;		
			МассивСтрок.Добавить(Лев(Стр,Поз-1));
			Стр = СокрЛ(Сред(Стр,Поз));
		КонецЦикла;
	Иначе
		ДлинаРазделителя = СтрДлина(Разделитель);
		Пока 1=1 Цикл
			Поз = Найти(Стр,Разделитель);
			Если Поз=0 Тогда
				МассивСтрок.Добавить(Стр);
				Возврат МассивСтрок;
			КонецЕсли;
			МассивСтрок.Добавить(Лев(Стр,Поз-1));
			Стр = Сред(Стр,Поз+ДлинаРазделителя);
		КонецЦикла;
	КонецЕсли;
	
КонецФункции 

&НаСервере
Функция ПеревестиВРег(МассивСлов)
	
	НовыйМассив = Новый Массив; 
	
	Для Каждого Стр Из МассивСлов Цикл
		НовыйМассив.Добавить(ВРег(СокрЛП(Стр)));
	КонецЦикла;
	
	Возврат НовыйМассив; 
	
КонецФункции

&НаСервере
Процедура ПоискПоПодстрокеНаКлиенте()
	
	ШаблонПоиска = СокрЛП(СтрокаПоиска);
	МассивСлов   = мРазложитьСтрокуВМассивПодстрок(ШаблонПоиска," ");
	//МассивСлов   = ПеревестиВРег(МассивСлов);
	КоличествоСлов = МассивСлов.Количество();
	
	Если КоличествоСлов = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	СпрНоменклатура.Ссылка КАК Номенклатура
	|ИЗ
	|	Справочник.Номенклатура КАК СпрНоменклатура
	|ГДЕ
	|	(НЕ СпрНоменклатура.ЭтоГруппа)";
	
	Для k = 0 По КоличествоСлов - 1 Цикл
		СтрКлючевоеСлово = СокрЛП(МассивСлов[k]);
		
		ТекстЗапроса = ТекстЗапроса + 
		" И СпрНоменклатура.Наименование ПОДОБНО &Слово"+k;
		Запрос.УстановитьПараметр("Слово"+k, "%"+СтрКлючевоеСлово+"%");
	КонецЦикла;  
	Запрос.Текст = ТекстЗапроса;
	
	РезультатЗапроса = Запрос.Выполнить().Выгрузить();
	РезультатЗапроса.Свернуть("Номенклатура");
	
	МассивОтбора = Новый СписокЗначений();	
	Для Каждого ВыбСтрока Из РезультатЗапроса Цикл
		МассивОтбора.Добавить(ВыбСтрока.Номенклатура);
	КонецЦикла;
	
	Если МассивОтбора.Количество() > 0 Тогда				
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(СписокНоменклатура.Отбор,"Ссылка",МассивОтбора,ВидСравненияКомпоновкиДанных.ВСписке,,Истина);
		
		ПоискИстина = Истина;
	Иначе
		ПоискИстина = Ложь;
	КонецЕсли;
	
	//СпискиВыбораКлиентСервер.ОбновитьСписокВыбора(Элементы.СтрокаПоиска.СписокВыбора, СтрокаПоиска);
	
КонецПроцедуры


&НаКлиенте
Процедура ПрименитьПоиск()
	
	Использование = ЗначениеЗаполнено(СтрокаПоиска);	
	Если НЕ Использование Тогда
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(СписокНоменклатура.Отбор,"Ссылка",Неопределено,ВидСравненияКомпоновкиДанных.Равно,,Ложь);
		
		//СпискиВыбораКлиентСервер.ОбновитьСписокВыбора(Элементы.СтрокаПоиска.СписокВыбора, СтрокаПоиска);
		Возврат;
	КонецЕсли;	
	
	ПоискПоПодстрокеНаКлиенте();		
	
	Если ПоискИстина = Ложь Тогда
		Состояние("Ничего не найдено");
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ТолькоВНаличииПриИзменении(Элемент)
	
	ГруппаОтбораТолькоВНаличииНоменклатура = ОбщегоНазначенияКлиентСервер.СоздатьГруппуЭлементовОтбора(
	СписокНоменклатура.Отбор.Элементы,
	"ГруппаТолькоВНаличии",
	ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИли);
	
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(
	ГруппаОтбораТолькоВНаличииНоменклатура,
	"Количество",
	0,
	ВидСравненияКомпоновкиДанных.Больше,,ТолькоВНаличии);
	
КонецПроцедуры

&НаКлиенте
Процедура СтрокаПоискаОчистка(Элемент, СтандартнаяОбработка)
	
	ПрименитьПоиск();
	
КонецПроцедуры

&НаКлиенте
Процедура СтрокаПоискаПриИзменении(Элемент)
	
	ПрименитьПоиск();
	
КонецПроцедуры

&НаКлиенте
Процедура СтрокаПоискаАвтоПодбор(Элемент, Текст, ДанныеВыбора, Ожидание, СтандартнаяОбработка)
	
	//СпискиВыбораКлиентСервер.АвтоПодбор(Элемент, Текст, ДанныеВыбора, Ожидание, СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ЭлементыВариантыНавигации = Элементы.Навигация;
	ТекущаяСтраницаНавигации  = ЭлементыВариантыНавигации.ТекущаяСтраница;
	
	НавигацияПоИерархии = ЭлементыВариантыНавигации.ПодчиненныеЭлементы.НавигацияИерархияНоменклатуры;
	НавигацияПоПроизводителям = ЭлементыВариантыНавигации.ПодчиненныеЭлементы.НавигацияПроизводители;
	
	ИспользоватьНавигацию = Ложь;
	Элементы.Навигация.Видимость = ИспользоватьНавигацию;
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Объект.Валюта = Константы.ВалютаРегламентированногоУчета.Получить();

КонецПроцедуры

&НаКлиенте
Процедура СписокНоменклатураВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ТекущиеДанные = Элементы.СписокНоменклатура.ТекущиеДанные;
	
	Попытка
		ФормаДока = ПолучитьФорму("Справочник.Номенклатура.Форма.мегапрайсФормаЭлемента", Новый Структура("Ключ", ТекущиеДанные.Ссылка)); 
	Исключение
		ФормаДока = ПолучитьФорму("Справочник.Номенклатура.Форма.ФормаЭлемента", Новый Структура("Ключ", ТекущиеДанные.Ссылка)); 
	КонецПопытки;
	ФормаДока.Открыть();

КонецПроцедуры




