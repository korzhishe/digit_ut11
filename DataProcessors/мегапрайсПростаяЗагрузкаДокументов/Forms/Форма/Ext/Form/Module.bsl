&НаКлиенте
Перем ЗакрытьОбработку;


&НаСервере
Функция глРазложитьСтрокуВМассивПодстрок(Знач Стр, Разделитель=" ") Экспорт
	
	МассивСтрок = Новый Массив();
	Если Разделитель = " " Тогда
		Стр = СокрЛП(Стр);
		Пока 1 = 1 Цикл
			Поз = Найти(Стр,Разделитель);
			
			Если Поз = 0 Тогда
				СтрокаВМассив = СокрЛП(Стр);
				
				МассивСтрок.Добавить(СтрокаВМассив);
				Возврат МассивСтрок;
			КонецЕсли;
			
			СтрокаВМассив = СокрЛП(Лев(Стр,Поз-1));
			
			МассивСтрок.Добавить(СтрокаВМассив);
			Стр = СокрЛ(Сред(Стр,Поз));
		КонецЦикла;
	Иначе
		ДлинаРазделителя = СтрДлина(Разделитель);
		Пока 1 = 1 Цикл
			Поз = Найти(Стр,Разделитель);
			
			Если Поз = 0 Тогда
				СтрокаВМассив = СокрЛП(Стр);
				
				МассивСтрок.Добавить(СтрокаВМассив);
				Возврат МассивСтрок;
			КонецЕсли;
			
			СтрокаВМассив = СокрЛП(Лев(Стр,Поз-1));
			
			МассивСтрок.Добавить(СтрокаВМассив);
			Стр = Сред(Стр,Поз+ДлинаРазделителя);
		КонецЦикла;
	КонецЕсли;
	
КонецФункции 





&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Попытка 
		Константы.мегапрайсРегистрационныйКлюч.Получить();
		Объект.ИспользоватьМегапрайс = Истина;
	Исключение
		Объект.ИспользоватьМегапрайс = Ложь;
	КонецПопытки;
	
	ИнициализироватьНастройкиСервер();
	
КонецПроцедуры

&НаСервере
Процедура ИнициализироватьНастройкиСервер()
	
	Объект.НастройкиКолонокЛиста.Очистить();
	
	ОбработкаОбъект = РеквизитФормыВЗначение("Объект");
	ОбработкаОбъект.ИнициализироватьНастройки();
	ЗначениеВРеквизитФормы(ОбработкаОбъект, "Объект");
	
КонецПроцедуры


&НаКлиенте
Процедура КомандаАвтонастройкаИмпорта(Команда)
	
	АвтонастройкаИмпортаСервер();
	
	УсловноеОформлениеТаблицыБуфер();
	
КонецПроцедуры

&НаСервере
Процедура АвтонастройкаИмпортаСервер()
	
	ОбработкаОбъект = РеквизитФормыВЗначение("Объект");
	
	ОбработкаОбъект.мАвтонастройкаКолонокИмпортаБуфер(Объект.ТабличныйДокумент,Объект.НастройкиКолонокЛиста,НомерСтрокиШапка);
	
КонецПроцедуры

&НаКлиенте
Процедура УсловноеОформлениеТаблицыБуфер()
	
	мЖирныйШрифт = Новый Шрифт(, 8, Истина);
	
	ОбластьТабличногоПоля = Объект.ТабличныйДокумент.Область("R"+Формат(1, "ЧГ="));
	ОбластьТабличногоПоля.РазмещениеТекста = ТипРазмещенияТекстаТабличногоДокумента.Переносить;
	ОбластьТабличногоПоля.ЦветФона = WebЦвета.СеребристоСерый;
	ОбластьТабличногоПоля.ВертикальноеПоложение = ВертикальноеПоложение.Центр;
	Для Каждого СтрокаНастройки Из Объект.НастройкиКолонокЛиста Цикл	
		Если СтрокаНастройки.НомерКолонки = 0 Тогда
			Продолжить;
		КонецЕсли;
		
		ОбластьТабличногоПоля = Объект.ТабличныйДокумент.Область("R"+Формат(1, "ЧГ=")+"C"+Формат(СтрокаНастройки.НомерКолонки, "ЧГ="));
		ОбластьТабличногоПоля.Примечание.Текст = "Определена колонка "+СтрокаНастройки.Представление;
		ОбластьТабличногоПоля.Шрифт    = мЖирныйШрифт;
		Если СтрокаНастройки.ГруппаПолей = "Цены" ИЛИ СтрокаНастройки.ГруппаПолей = "Документ"	Тогда
			ОбластьТабличногоПоля.ЦветФона = WebЦвета.ЦветМорскойВолныТемный;
		ИначеЕсли СтрокаНастройки.ГруппаПолей = "Характеристики" Тогда
			ОбластьТабличногоПоля.ЦветФона = WebЦвета.СветлоКоралловый;	
		ИначеЕсли СтрокаНастройки.ГруппаПолей = "ДопРеквизиты" Тогда
			ОбластьТабличногоПоля.ЦветФона = WebЦвета.Хаки;			
		Иначе
			ОбластьТабличногоПоля.ЦветФона = WebЦвета.СероСиний;
		КонецЕсли;	
	КонецЦикла;	
	
КонецПроцедуры

&НаКлиенте
Процедура НастройкиКолонокЛистаНомерКолонкиПриИзменении(Элемент)	
	
	УсловноеОформлениеТаблицыБуфер();
	
КонецПроцедуры


//============================================================================
// СЛУЖЕБНЫЕ

Функция глУбратьСимволыСтроки(пКатНом,УбиратьВсеПробелы = Истина) Экспорт
	
	КатНом = пКатНом;
	
	КатНом = СтрЗаменить(КатНом,"-"," ");
	КатНом = СтрЗаменить(КатНом,"_"," ");
	КатНом = СтрЗаменить(КатНом,"("," ");	
	КатНом = СтрЗаменить(КатНом,")"," ");
	КатНом = СтрЗаменить(КатНом,"/"," ");
	КатНом = СтрЗаменить(КатНом,"\"," ");
	КатНом = СтрЗаменить(КатНом,"["," ");	
	КатНом = СтрЗаменить(КатНом,"]"," ");
	КатНом = СтрЗаменить(КатНом,"."," ");
	КатНом = СтрЗаменить(КатНом,":"," ");
	КатНом = СтрЗаменить(КатНом,","," ");
	КатНом = СтрЗаменить(КатНом,";"," ");
	КатНом = СтрЗаменить(КатНом,""""," ");
	КатНом = СтрЗаменить(КатНом,"*"," ");
	КатНом = СтрЗаменить(КатНом,"="," ");
	КатНом = СтрЗаменить(КатНом,"%"," ");
	КатНом = СтрЗаменить(КатНом,">"," ");
	КатНом = СтрЗаменить(КатНом,"<"," ");
	КатНом = СтрЗаменить(КатНом,"~"," ");
	
	КатНом = СтрЗаменить(КатНом,"  "," ");
	
	Если УбиратьВсеПробелы Тогда
		КатНом = СтрЗаменить(КатНом," ","");
	КонецЕсли;
	
	КатНом = ВРег(СокрЛП(КатНом));
	
	Возврат КатНом;
	
КонецФункции

Функция глУбратьКрайниеНули(Строка) Экспорт
	
	////ВАРИАНТ1
	//СтрокаПередачи = СокрЛП(Строка);
	//ВремСтрока  = СтрокаПередачи;
	//ДлинаСтроки = СтрДлина(СтрокаПередачи);
	//Пока 1 = 1 Цикл
	//	Если Лев(ВремСтрока,1) = "0" Тогда
	//		ВремСтрока = Прав(ВремСтрока,ДлинаСтроки - 1);
	//		ДлинаСтроки = ДлинаСтроки - 1;
	//	Иначе
	//		Прервать;
	//	КонецЕсли;
	//КонецЦикла;
	
	////ВАРИАНТ2
	//ДлинаСтроки = СтрДлина(СтрокаПередачи);
	//Начало = 0;
	//Конец = 0;
	//Для й=1 по ДлинаСтроки Цикл
	//	Если Сред(СтрокаПередачи,й)<>"0" Тогда
	//		Если Начало=0 Тогда
	//			Начало = й;
	//		КонецЕсли;
	//		Конец = й;
	//	КонецЕсли;  
	//КонецЦикла;
	//Результат = Сред(СтрокаПередачи,Начало,Конец-Начало+1);
	
	//ВАРИАНТ3
	Строка = СокрЛП(Строка);
	
	Строка = СтрЗаменить(Строка," ","?");
	Строка = СтрЗаменить(Строка,"0"," ");
	Строка = СокрЛП(Строка);
	Строка = СтрЗаменить(Строка," ","0");
	Строка = СтрЗаменить(Строка,"?","");
	
	Возврат Строка;
	
КонецФункции

Функция глПрочитатьСимволыВСтроке(Строка1) Экспорт
	
	НовСтрока = "";
	ПравильныеСимволы = "0123456789,.";
	
	Для Сч = 1 по СтрДлина(Строка1) Цикл
		
		ТекСимв = Сред(Строка1, Сч, 1);
		
		Если Найти(ПравильныеСимволы, ТекСимв) = 0 Тогда
			НовСтрока = НовСтрока + ТекСимв;
		КонецЕсли;
		
		Если Сч = СтрДлина(Строка1) Тогда
			Если ТекСимв = "." Тогда
				НовСтрока = НовСтрока + ТекСимв;
			КонецЕсли;
		КонецЕсли;
		
	КонецЦикла;
	
	НовСтрока = СокрЛП(НовСтрока);
	
	Возврат НовСтрока;	
	
КонецФункции   

Функция глПолучитьСтавкуНДС(Значение)
	
	Если Значение = "10%" ИЛИ Значение = "10" Тогда
		Возврат Перечисления.СтавкиНДС.НДС10;
	ИначеЕсли Значение = "18%" ИЛИ Значение = "18" Тогда
		Возврат Перечисления.СтавкиНДС.НДС18;
	ИначеЕсли Значение = "20%" ИЛИ Значение = "20" Тогда
		Возврат Перечисления.СтавкиНДС.НДС20;	
	ИначеЕсли Значение = "0%" ИЛИ Значение = "0" Тогда
		Возврат Перечисления.СтавкиНДС.НДС0;	
	КонецЕсли;
	
	Возврат Перечисления.СтавкиНДС.БезНДС;
	
КонецФункции


&НаСервере
Процедура ЗаполнитьТаблицуРезультат() Экспорт
	
	Объект.ТабличнаяЧасть.Очистить();
	
	ЕстьАртикул = Ложь;
	ЕстьЕдиница = Ложь;
	ЕстьЦена    = Ложь;
	ЕстьКолонкаКод = Ложь;	
	ЕстьУпаковка = Ложь;
	
	Для Каждого Колонка ИЗ Объект.НастройкиКолонокЛиста Цикл
		Если Колонка.НомерКолонки = 0 Тогда
			Продолжить;
		КонецЕсли;
		
		Название     = СокрЛП(Колонка.ПолеЗагрузки);
		
		Если Название = "Поле_Артикул" Тогда
			ЕстьАртикул = Истина;
		КонецЕсли;
		
		Если Название = "Поле_БазоваяЕдиница" Тогда
			ЕстьЕдиница = Истина;
		КонецЕсли;
		
		Если Название = "Поле_Код" Тогда
			ЕстьКолонкаКод = Истина;
		КонецЕсли;
		
		Если Название = "Поле_ЦенаЗакупки" ИЛИ Название = "Поле_ЦенаПродажи" Тогда
			ЕстьЦена = Истина;				
		КонецЕсли;
		
		Если Название = "Поле_УпаковкаЕдиница" Тогда
			ЕстьУпаковка = Истина;
		КонецЕсли;
	КонецЦикла;
	
	КолСтрок = Объект.ТабличнаяЧасть.Количество();
	
	Для НомерСтроки = 2 По Объект.ТабличныйДокумент.ВысотаТаблицы Цикл	
		КолСтрок = КолСтрок +1;
		КлючНомерСтроки = 0;
		
		СтруктураЗаполнения = Новый Структура();	
		СработалКонтрольЗаполнения = Ложь;
		
		Для Каждого Колонка ИЗ Объект.НастройкиКолонокЛиста Цикл
			Если Колонка.НомерКолонки = 0 Тогда
				Продолжить;
			КонецЕсли;
			
			Название     = СокрЛП(Колонка.ПолеЗагрузки);
			НомерКолонки = Колонка.НомерКолонки;
			
			Значение = СокрЛП(Объект.ТабличныйДокумент.Область("R"+Формат(НомерСтроки,"ЧГ=")+"C"+Формат(НомерКолонки,"ЧГ=")).Текст);
			Значение = СтрЗаменить(Значение,"  "," ");
			
			Если Колонка.КонтрольЗаполнения Тогда
				КонтрольДлиныПоля  = Колонка.КонтрольДлиныПоля;
				Если КонтрольДлиныПоля = 0 Тогда
					Если ПустаяСтрока(Значение) Тогда
						СработалКонтрольЗаполнения = Истина;
						Продолжить;
					КОнецЕсли;
				ИначеЕсли КонтрольДлиныПоля > 0 И СтрДлина(Значение) < КонтрольДлиныПоля Тогда
					СработалКонтрольЗаполнения = Истина;
					Продолжить;
				КонецЕсли;
			КонецЕсли;
			
			Если Название = "Поле_Наименование" Тогда				
				Если Значение = "Товар" Тогда
					СработалКонтрольЗаполнения = Истина;
					Продолжить;
				КонецЕсли;
			КонецЕсли;
			
			Если Название = "Поле_Штрихкод" Тогда
				Значение = СтрЗаменить(Значение," ","");
			КонецЕсли;
			
			Если Название = "Поле_ЦенаЗакупки" ИЛИ Название = "Поле_ЦенаПродажи" ИЛИ Название = "Вес" ИЛИ Название = "Объем" ИЛИ Название = "Поле_Сумма" Тогда
				Значение = СтрЗаменить(Значение,"-",".");
				Значение = СтрЗаменить(Значение," ","");
				Значение = СтрЗаменить(Значение, Символы.Таб, "");
				Значение = СтрЗаменить(Значение, Символы.НПП, "");
				Если Найти(Значение,".") > 0 И Найти(Значение,",") > 0 Тогда
					Значение = СтрЗаменить(Значение,",","");
				ИначеЕсли Найти(Значение,",") > 0 Тогда
					Значение = СтрЗаменить(Значение,",",".");	
				КонецЕсли;
				
				Попытка
					Значение = Число(СокрЛП(Значение));
				Исключение
				КонецПопытки;
			КонецЕсли;
			
			Если Название = "СтавкаНДС" Тогда
				Значение = СтрЗаменить(Значение," ","");
				
				Если ЗначениеЗаполнено(Значение) Тогда
					Значение = глПолучитьСтавкуНДС(Значение);
				КонецЕсли;
			КонецЕсли;
			
			Если Название = "Поле_Количество" ИЛИ Название = "Поле_ЦенаЗакупки" Тогда 
				Если НЕ ЗначениеЗаполнено(Значение) Тогда
					СработалКонтрольЗаполнения = Истина;
					Продолжить;
				КонецЕсли;
			КонецЕсли;
			
			СтруктураЗаполнения.Вставить(Название,Значение);
			
		КонецЦикла;
		
		Если СработалКонтрольЗаполнения Тогда
			Продолжить;
		КонецЕсли;
		
		НовСтрока = Объект.ТабличнаяЧасть.Добавить(); 
		ЗаполнитьЗначенияСвойств(НовСтрока,СтруктураЗаполнения);			
		НовСтрока.Пометка    = Истина;			
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура КомандаСинхронизироватьНаСервере() Экспорт
	
	Для Каждого ВыборкаСтрока ИЗ Объект.ТабличнаяЧасть Цикл
		
		Для Каждого ВариантПоиска Из Объект.НастройкаПоиска Цикл
			
			Если НЕ ВариантПоиска.Пометка Тогда
				Продолжить;
			КонецЕсли;
			
			Если ЗначениеЗаполнено(ВыборкаСтрока.Номенклатура) Тогда
				Продолжить;
			КонецЕсли;
			
			Если ВариантПоиска.Наименование = "РегистрШтрихкод" Тогда
				Если НЕ ЗначениеЗаполнено(ВыборкаСтрока.Номенклатура) И ЗначениеЗаполнено(ВыборкаСтрока.Поле_Штрихкод) Тогда			
					Запрос = Новый Запрос();
					Запрос.Текст = 
					"ВЫБРАТЬ ПЕРВЫЕ 1
					|	ШтрихкодыНоменклатуры.Штрихкод КАК Штрихкод,
					|	ШтрихкодыНоменклатуры.Номенклатура КАК Ссылка,
					|	ШтрихкодыНоменклатуры.Характеристика КАК Характеристика,
					|	ШтрихкодыНоменклатуры.Упаковка КАК Упаковка
					|ИЗ
					|	РегистрСведений.ШтрихкодыНоменклатуры КАК ШтрихкодыНоменклатуры
					|ГДЕ
					|	ШтрихкодыНоменклатуры.Штрихкод = &Поле_Штрихкод";
					
					Запрос.УстановитьПараметр("Поле_Штрихкод", ВыборкаСтрока.Поле_Штрихкод);
					РезультатЗапроса = Запрос.Выполнить();
					
					Если НЕ РезультатЗапроса.Пустой() Тогда
						Выборка = РезультатЗапроса.Выбрать();
						Пока Выборка.Следующий() Цикл
							ВыборкаСтрока.Номенклатура = Выборка.Ссылка;
							ВыборкаСтрока.ХарактеристикаНоменклатуры = Выборка.Характеристика;
						КонецЦикла;
					КонецЕсли;	
				КонецЕсли;   
			КонецЕсли;  
			
			Если ВариантПоиска.Наименование = "НоменклатураКонтрагентовИдентификатор" Тогда
				Если НЕ ЗначениеЗаполнено(ВыборкаСтрока.Номенклатура) И ЗначениеЗаполнено(ВыборкаСтрока.Поле_Идентификатор) Тогда			
					Запрос = Новый Запрос();
					Запрос.Текст = 
					"ВЫБРАТЬ ПЕРВЫЕ 1
					|	СпрНоменклатура.Номенклатура КАК Ссылка,
					|	СпрНоменклатура.Характеристика КАК Характеристика
					|ИЗ
					|	Справочник.НоменклатураПоставщиков КАК СпрНоменклатура
					|ГДЕ
					|	СпрНоменклатура.Идентификатор = &Поле_Идентификатор
					|	И СпрНоменклатура.ЭтоГруппа = ЛОЖЬ
					|	И СпрНоменклатура.ПометкаУдаления = ЛОЖЬ";
					
					Запрос.УстановитьПараметр("Поле_Идентификатор", ВыборкаСтрока.Поле_Идентификатор);
					РезультатЗапроса = Запрос.Выполнить();
					
					Если НЕ РезультатЗапроса.Пустой() Тогда
						Выборка = РезультатЗапроса.Выбрать();
						Пока Выборка.Следующий() Цикл
							ВыборкаСтрока.Номенклатура = Выборка.Ссылка;
							ВыборкаСтрока.ХарактеристикаНоменклатуры = Выборка.Характеристика;
						КонецЦикла;
					КонецЕсли;	
				КонецЕсли;    
			КонецЕсли;  
			
			Если ВариантПоиска.Наименование = "НоменклатураКонтрагентовАртикул" Тогда
				Если НЕ ЗначениеЗаполнено(ВыборкаСтрока.Номенклатура) И ЗначениеЗаполнено(ВыборкаСтрока.Поле_Артикул) Тогда			
					Запрос = Новый Запрос();
					Запрос.Текст = 
					"ВЫБРАТЬ ПЕРВЫЕ 1
					|	СпрНоменклатура.Номенклатура КАК Ссылка,
					|	СпрНоменклатура.Характеристика КАК Характеристика
					|ИЗ
					|	Справочник.НоменклатураПоставщиков КАК СпрНоменклатура
					|ГДЕ
					|	СпрНоменклатура.Артикул = &Поле_Артикул
					|	И СпрНоменклатура.ЭтоГруппа = ЛОЖЬ
					|	И СпрНоменклатура.ПометкаУдаления = ЛОЖЬ";
					
					Запрос.УстановитьПараметр("Поле_Артикул", ВыборкаСтрока.Поле_Артикул);
					РезультатЗапроса = Запрос.Выполнить();
					
					Если НЕ РезультатЗапроса.Пустой() Тогда
						Выборка = РезультатЗапроса.Выбрать();
						Пока Выборка.Следующий() Цикл
							ВыборкаСтрока.Номенклатура = Выборка.Ссылка;
							ВыборкаСтрока.ХарактеристикаНоменклатуры = Выборка.Характеристика;
						КонецЦикла;
					КонецЕсли;	
				КонецЕсли;    
			КонецЕсли;  
			
			Если ВариантПоиска.Наименование = "НоменклатураКонтрагентовНаименование" Тогда
				Если НЕ ЗначениеЗаполнено(ВыборкаСтрока.Номенклатура) И ЗначениеЗаполнено(ВыборкаСтрока.Поле_Наименование) Тогда			
					Запрос = Новый Запрос();
					Запрос.Текст = 
					"ВЫБРАТЬ ПЕРВЫЕ 1
					|	СпрНоменклатура.Номенклатура КАК Ссылка,
					|	СпрНоменклатура.Характеристика КАК Характеристика
					|ИЗ
					|	Справочник.НоменклатураПоставщиков КАК СпрНоменклатура
					|ГДЕ
					|	СпрНоменклатура.Наименование = &Поле_Наименование
					|	И СпрНоменклатура.ЭтоГруппа = ЛОЖЬ
					|	И СпрНоменклатура.ПометкаУдаления = ЛОЖЬ";
					
					Запрос.УстановитьПараметр("Поле_Наименование", ВыборкаСтрока.Поле_Наименование);
					РезультатЗапроса = Запрос.Выполнить();
					
					Если НЕ РезультатЗапроса.Пустой() Тогда
						Выборка = РезультатЗапроса.Выбрать();
						Пока Выборка.Следующий() Цикл
							ВыборкаСтрока.Номенклатура = Выборка.Ссылка;
							ВыборкаСтрока.ХарактеристикаНоменклатуры = Выборка.Характеристика;
						КонецЦикла;
					КонецЕсли;	
				КонецЕсли;    
			КонецЕсли; 
			
			Если ВариантПоиска.Наименование = "СправочникАртикул" Тогда
				Если ЗначениеЗаполнено(ВыборкаСтрока.Поле_Артикул) Тогда			
					Запрос = Новый Запрос();
					Запрос.Текст = 
					"ВЫБРАТЬ ПЕРВЫЕ 1
					|	СпрНоменклатура.Ссылка КАК Ссылка
					|ИЗ
					|	Справочник.Номенклатура КАК СпрНоменклатура
					|ГДЕ
					|	СпрНоменклатура.Артикул = &Поле_Артикул
					|	И СпрНоменклатура.ЭтоГруппа = ЛОЖЬ
					|	И СпрНоменклатура.ПометкаУдаления = ЛОЖЬ";
					
					Запрос.УстановитьПараметр("Поле_Артикул", ВыборкаСтрока.Поле_Артикул);
					РезультатЗапроса = Запрос.Выполнить();
					
					Если НЕ РезультатЗапроса.Пустой() Тогда
						Выборка = РезультатЗапроса.Выбрать();
						Пока Выборка.Следующий() Цикл
							ВыборкаСтрока.Номенклатура = Выборка.Ссылка;
						КонецЦикла;
					КонецЕсли;   
				КонецЕсли;
			КонецЕсли;
			
			Если ВариантПоиска.Наименование = "СправочникНаименование" Тогда
				Если НЕ ЗначениеЗаполнено(ВыборкаСтрока.Номенклатура) И ЗначениеЗаполнено(ВыборкаСтрока.Поле_Наименование) Тогда			
					Запрос = Новый Запрос();
					Запрос.Текст = 
					"ВЫБРАТЬ ПЕРВЫЕ 1
					|	СпрНоменклатура.Ссылка КАК Ссылка
					|ИЗ
					|	Справочник.Номенклатура КАК СпрНоменклатура
					|ГДЕ
					|	СпрНоменклатура.Наименование = &Поле_Наименование
					|	И СпрНоменклатура.ЭтоГруппа = ЛОЖЬ
					|	И СпрНоменклатура.ПометкаУдаления = ЛОЖЬ";
					
					Запрос.УстановитьПараметр("Поле_Наименование", ВыборкаСтрока.Поле_Наименование);
					РезультатЗапроса = Запрос.Выполнить();
					
					Если НЕ РезультатЗапроса.Пустой() Тогда
						Выборка = РезультатЗапроса.Выбрать();
						Пока Выборка.Следующий() Цикл
							ВыборкаСтрока.Номенклатура = Выборка.Ссылка;
						КонецЦикла;
					КонецЕсли;	
				КонецЕсли;    
			КонецЕсли;  
			
		КонецЦикла;
		
		//Если НЕ ЗначениеЗаполнено(ВыборкаСтрока.Номенклатура) Тогда
		//	Сообщить("Не найден товар! "+ВыборкаСтрока.НомерСтроки);
		//КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры


&НаКлиенте
Процедура КомандаСинхронизировать(Команда)
	
	ЗаполнитьТаблицуРезультат();
	КомандаСинхронизироватьНаСервере();
	
	Элементы.Страницы.ТекущаяСтраница = Элементы.Страницы.ПодчиненныеЭлементы.СоздатьДокумент;
	
КонецПроцедуры


&НаСервере
Процедура КомандаЗаполнитьДокументНаСервере()
	
	ДокументОбъект = Объект.Документ.ПолучитьОбъект();
	
	ДокументОбъект.Товары.Очистить();
	
	Для Каждого ВыборкаСтрока ИЗ Объект.ТабличнаяЧасть Цикл
		
		НоваяСтрока = ДокументОбъект.Товары.Добавить();
		НоваяСтрока.Номенклатура = ВыборкаСтрока.Номенклатура;
		НоваяСтрока.Характеристика = ВыборкаСтрока.ХарактеристикаНоменклатуры;
		НоваяСтрока.Количество = ВыборкаСтрока.Поле_Количество;
		НоваяСтрока.КоличествоУпаковок = ВыборкаСтрока.Поле_Количество;
		НоваяСтрока.Цена = ВыборкаСтрока.Поле_Цена;
		НоваяСтрока.Сумма = ВыборкаСтрока.Поле_Сумма;
		НоваяСтрока.Склад = ДокументОбъект.Склад;
		
		Если ТипЗнч(Объект.Документ.Ссылка) = Тип("ДокументСсылка.ПриобретениеТоваровУслуг") Тогда 
			СтрНомерГТД = СокрЛП(ВыборкаСтрока.Поле_НомерГТД);	
			Если ЗначениеЗаполнено(СтрНомерГТД) Тогда
				НайденНомерГТД = Справочники.НомераГТД.НайтиПоКоду(СтрНомерГТД);
				Если НайденНомерГТД = Справочники.НомераГТД.ПустаяСсылка() Тогда
					НайденНомерГТД = Справочники.НомераГТД.СоздатьЭлемент();
					НайденНомерГТД.Код = СтрНомерГТД;
					
					Попытка
						ДопРеквизитыГТД = Справочники.НомераГТД.РегистрационныйНомерИСтранаВвоза(СтрНомерГТД);
						ЗаполнитьЗначенияСвойств(НайденНомерГТД, ДопРеквизитыГТД, "РегистрационныйНомер,СтранаВвозаНеРФ,ПорядковыйНомерТовара");
					Исключение
					КонецПопытки;
					
					Если ЗначениеЗаполнено(ВыборкаСтрока.Поле_СтранаПроисхождения) Тогда
						НайденНомерГТД.СтранаПроисхождения = Справочники.СтраныМира.НайтиПоНаименованию(ВыборкаСтрока.Поле_СтранаПроисхождения);
					Иначе
						Сообщить("В строке отсутствует страна происхождения. Номер ГТД "+СтрНомерГТД+" записан без страны");
					КОнецЕсли;
					
					НайденНомерГТД.Записать();
				КонецЕсли;
				
				НоваяСтрока.НомерГТД = НайденНомерГТД.Ссылка;
			КонецЕсли;			
		КонецЕсли;
		
	КонецЦикла;
	
	ДокументОбъект.СуммаДокумента = ДокументОбъект.Товары.Итог("Сумма");
	//ДокументОбъект.СуммаВзаиморасчетов = ДокументОбъект.СуммаДокумента;
	
	Попытка
		СтруктураПересчетаСуммы = ОбработкаТабличнойЧастиКлиентСервер.ПараметрыПересчетаСуммыНДСВСтрокеТЧ(ДокументОбъект);
	Исключение
		СтруктураПересчетаСуммы = ОбработкаТабличнойЧастиКлиентСервер.ПолучитьСтруктуруПересчетаСуммыНДСВСтрокеТЧ(ДокументОбъект);
	КонецПопытки;
		
	СтруктураДействий = Новый Структура;
	
	Если ТипЗнч(Объект.Документ.Ссылка) = Тип("ДокументСсылка.ПриобретениеТоваровУслуг") Тогда 
		СтруктураДействий.Вставить("ЗаполнитьНоменклатуруПоставщикаПоНоменклатуре", ДокументОбъект.Партнер);
	КонецЕсли;
	
	СтруктураДействий.Вставить("ЗаполнитьСтавкуНДС",Новый Структура("НалогообложениеНДС, Дата", ДокументОбъект.НалогообложениеНДС, ДокументОбъект.Дата));
	СтруктураДействий.Вставить("ПересчитатьКоличествоЕдиниц");
	СтруктураДействий.Вставить("ПересчитатьСуммуНДС", СтруктураПересчетаСуммы);
	СтруктураДействий.Вставить("ПересчитатьСуммуСНДС", СтруктураПересчетаСуммы);
	
	СтруктураТЧ = Новый Структура;
	СтруктураТЧ.Вставить("СтрокиТЧ" , ДокументОбъект.Товары);
	ОбработкаТабличнойЧастиСервер.ОбработатьТЧ(ДокументОбъект.Товары, СтруктураДействий, Неопределено);
	
	ДокументОбъект.Записать();
	
	
КонецПроцедуры


&НаКлиенте
Процедура КомандаЗаполнитьДокумент(Команда)
	
	Если НЕ Значениезаполнено(Объект.Документ) Тогда
		Сообщить("Вы выбран документ!");
		Возврат
	КонецЕсли;
	
	КомандаЗаполнитьДокументНаСервере();
	
	ОткрытьЗначение(Объект.Документ);
	
КонецПроцедуры


//============================================================================
// НОВАЯ НОМЕНКЛАТУРА

&НаСервере
Процедура СоздатьНовуюНоменклатуруСерверУТ114() 
	
	Отказ = Ложь;
	Если НЕ ЗначениеЗаполнено(Объект.ЕдиницаИзмеренияПоУмолчанию) Тогда
		Сообщить("Настройки номенклатуры - Не указана Единица измерения (по умолчанию)!");
		Отказ = Истина;
	КонецЕсли; 	 
	Если НЕ ЗначениеЗаполнено(Объект.СтавкаНДСПоУмолчанию) Тогда
		Сообщить("Настройки номенклатуры - Не указана Ставка НДС (по умолчанию)!");
		Отказ = Истина;
	КонецЕсли; 	 
	Если Отказ Тогда
		Сообщить("Перед началом работы - заполните обязательные настройки номенклатуры.");
		Возврат;
	КонецЕсли;
	
	ПустаяСсылкаНоменклатура = Справочники.Номенклатура.ПустаяСсылка();
	ТипНоменклатурыПоУмолчанию = Объект.ВидНоменклатурыПоУмолчанию.ТипНоменклатуры;
	ИспользованиеХарактеристикПоУмолчанию = Объект.ВидНоменклатурыПоУмолчанию.ИспользованиеХарактеристик;
	ИспользоватьУпаковкиПоУмолчанию       = Объект.ВидНоменклатурыПоУмолчанию.ИспользоватьУпаковки;
	ВариантОформленияПродажи = Перечисления.ВариантыОформленияПродажи.РеализацияТоваровУслуг;
	
	
	КоличествоОбработанных = 0;
	
	Для Каждого Стр Из Объект.ТабличнаяЧасть Цикл		 
		Если ЗначениеЗаполнено(Стр.Номенклатура) Тогда
			Продолжить;
		КонецЕсли;
		Если ПустаяСтрока(Стр.Поле_Наименование) Тогда
			Продолжить;
		КонецЕсли;		 
		
		КоличествоОбработанных = КоличествоОбработанных + 1;
		
		СоздатьНоменклатуру = Ложь;
		НайденнаяСсылка = ПустаяСсылкаНоменклатура;
		
		Если НайденнаяСсылка = ПустаяСсылкаНоменклатура Тогда
			// создание новой номенклатуры
			НоваяНоменклатура = Справочники.Номенклатура.СоздатьЭлемент();
			
			//ОСНОВНЫЕ
			НоваяНоменклатура.Наименование       = Стр.Поле_Наименование;
			НоваяНоменклатура.НаименованиеПолное = Стр.Поле_Наименование; //?(ПустаяСтрока(Стр.Поле_ПолноеНаименование),Стр.Поле_Наименование,Стр.Поле_ПолноеНаименование);
			НоваяНоменклатура.Артикул  = Стр.Поле_Артикул;
			НоваяНоменклатура.Родитель = Объект.ГруппаНоменклатурыПоУмолчанию;	
			
			НоваяНоменклатура.ВидНоменклатуры    = Объект.ВидНоменклатурыПоУмолчанию;
			НоваяНоменклатура.ТипНоменклатуры    = ТипНоменклатурыПоУмолчанию;
			НоваяНоменклатура.ГруппаФинансовогоУчета = Объект.ВидНоменклатурыПоУмолчанию.ГруппаФинансовогоУчета;
			НоваяНоменклатура.ГруппаАналитическогоУчета = Объект.ВидНоменклатурыПоУмолчанию.ГруппаАналитическогоУчета;
			НоваяНоменклатура.ИспользованиеХарактеристик = Объект.ВидНоменклатурыПоУмолчанию.ИспользованиеХарактеристик;
			НоваяНоменклатура.ВестиУчетПоГТД = Объект.ВидНоменклатурыПоУмолчанию.ВестиУчетПоГТД;
			
			Справочники.Номенклатура.ЗаполнитьРеквизитыПоВидуНоменклатуры(НоваяНоменклатура);
			
			НоваяНоменклатура.ИспользоватьУпаковки = Объект.ВидНоменклатурыПоУмолчанию.ИспользоватьУпаковки;
			Если НоваяНоменклатура.ИспользоватьУпаковки Тогда
				НоваяНоменклатура.НаборУпаковок = Объект.ВидНоменклатурыПоУмолчанию.НаборУпаковок;
			КонецЕсли;		
			
			//ОБЕСПЕЧЕНИЕ
			Попытка
				НоваяНоменклатура.СпособОбеспеченияПотребностей = Объект.ВидНоменклатурыПоУмолчанию.СпособОбеспеченияПотребностей;
				НоваяНоменклатура.СхемаОбеспечения = Объект.ВидНоменклатурыПоУмолчанию.СхемаОбеспечения;
			Исключение
			КонецПопытки;
			
			НоваяНоменклатура.ВариантОформленияПродажи = Объект.ВидНоменклатурыПоУмолчанию.ВариантОформленияПродажи;
			НоваяНоменклатура.Качество = Перечисления.ГрадацииКачества.Новый;
			
			//РЕГЛАМЕНТНЫЙ УЧЕТ
			НоваяНоменклатура.СтавкаНДС = ?(ЗначениеЗаполнено(Стр.СтавкаНДС),Стр.СтавкаНДС,Объект.СтавкаНДСПоУмолчанию);
			
			//ЕДИНИЦЫ И СКЛАД
			Если ЗначениеЗаполнено(Стр.Поле_БазоваяЕдиница) Тогда
				НоваяНоменклатура.ЕдиницаИзмерения = Справочники.УпаковкиЕдиницыИзмерения.НайтиПоНаименованию(Стр.Поле_БазоваяЕдиница);
			Иначе
				НоваяНоменклатура.ЕдиницаИзмерения = Объект.ЕдиницаИзмеренияПоУмолчанию;
			КонецЕсли;
			
			СтрКодТНВЭД = СокрЛП(Стр.Поле_КодТНВЭД);		
			Если ЗначениеЗаполнено(СтрКодТНВЭД) Тогда
				НайденЭлемент = Справочники.КлассификаторТНВЭД.НайтиПоКоду(СтрКодТНВЭД);
				Если НайденЭлемент = Справочники.КлассификаторТНВЭД.ПустаяСсылка() Тогда
					НайденЭлемент = Справочники.КлассификаторТНВЭД.НайтиПоНаименованию(СтрКодТНВЭД,Истина);
				КОнецЕсли;
				Если НайденЭлемент = Справочники.КлассификаторТНВЭД.ПустаяСсылка() Тогда
					НовыйЭлемент = Справочники.КлассификаторТНВЭД.СоздатьЭлемент();
					НовыйЭлемент.Наименование = СтрКодТНВЭД;
					НовыйЭлемент.НаименованиеПолное = СтрКодТНВЭД;
					НовыйЭлемент.Записать();
					
					НайденЭлемент = НовыйЭлемент.Ссылка;
				КонецЕсли;
			Иначе
				НайденЭлемент = Справочники.КлассификаторТНВЭД.ПустаяСсылка();
			КонецЕсли;				
			НоваяНоменклатура.КодТНВЭД = НайденЭлемент;
			
			
			//СтрНомерГТД = СокрЛП(Стр.Поле_НомерГТД);		
			//Если ЗначениеЗаполнено(СтрНомерГТД) Тогда			
			//	НайденЭлемент = Справочники.НомераГТД.ПустаяСсылка();
			//	
			//	НайденЭлемент = Справочники.НомераГТД.НайтиПоКоду(СтрНомерГТД);
			//	Если НайденЭлемент = Справочники.НомераГТД.ПустаяСсылка() Тогда
			//		НовыйЭлемент = Справочники.НомераГТД.СоздатьЭлемент();
			//		НовыйЭлемент.Код = СтрНомерГТД;							
			//		НовыйЭлемент.Записать();
			//		
			//		НайденЭлемент = НовыйЭлемент.Ссылка;
			//	КонецЕсли;
			//	
			//	НоваяНоменклатура.НомерГТД = НайденЭлемент.Ссылка;
			//КонецЕсли;
			//
			//СтрСтранаПроисхождения = СокрЛП(Стр.Поле_СтранаПроисхождения);		
			//Если ЗначениеЗаполнено(СтрСтранаПроисхождения) Тогда
			//	НайденЭлемент = Справочники.СтраныМира.НайтиПоКоду(СтрСтранаПроисхождения);
			//	Если НайденЭлемент = Справочники.СтраныМира.ПустаяСсылка() Тогда
			//		НайденЭлемент = Справочники.СтраныМира.НайтиПоНаименованию(СтрСтранаПроисхождения,Истина);
			//	КОнецЕсли;
			//	Если НайденЭлемент = Справочники.СтраныМира.ПустаяСсылка() Тогда
			//		Сообщить("Новая страна "+СтрСтранаПроисхождения+" ВНИМАНИЕ! При создании серий страны должны быть идентифицированы.");
			//	КонецЕсли;
			//Иначе
			//	НайденСтрана = Справочники.СтраныМира.ПустаяСсылка();
			//КонецЕсли;				
			//НоваяНоменклатура.СтранаПроисхождения = НайденЭлемент.Ссылка;
			
			НоваяНоменклатура.ОбменДанными.Загрузка = Истина;
			НоваяНоменклатура.УстановитьНовыйКод();
			НоваяНоменклатура.Записать();
			
			НайденнаяСсылка = НоваяНоменклатура.Ссылка;
		КонецЕсли;
		
		Если НайденнаяСсылка = ПустаяСсылкаНоменклатура Тогда
			Сообщить("Номенклатура не создана: "+Стр.Поле_Наименование);
			Продолжить;
		КонецЕсли;
		
		Стр.Номенклатура = НайденнаяСсылка.Ссылка;
		Стр.Пометка = Истина;		
	КонецЦикла;	
	
	
КонецПроцедуры


&НаКлиенте
Процедура СоздатьНовуюНоменклатуру(Команда)
	
	Отказ = Ложь;
	Если НЕ ЗначениеЗаполнено(Объект.ГруппаНоменклатурыПоУмолчанию) Тогда
		Сообщить("Настройки номенклатуры - Не указана Группа номенклатуры (по умолчанию)!");
		Отказ = Истина;
	КонецЕсли;	 
	Если НЕ ЗначениеЗаполнено(Объект.ЕдиницаИзмеренияПоУмолчанию) Тогда
		Сообщить("Настройки номенклатуры - Не указана Единица измерения (по умолчанию)!");
		Отказ = Истина;
	КонецЕсли; 	 
	Если НЕ ЗначениеЗаполнено(Объект.СтавкаНДСПоУмолчанию) Тогда
		Сообщить("Настройки номенклатуры - Не указана Ставка НДС (по умолчанию)!");
		Отказ = Истина;
	КонецЕсли; 	 
	Если Отказ Тогда
		Сообщить("Перед началом работы - заполните обязательные настройки номенклатуры.");
		Элементы.ВкладкиДанных.ТекущаяСтраница = Элементы.ВкладкиДанных.ПодчиненныеЭлементы.НоваяНоменклатура;
		Возврат;
	КонецЕсли;
	
	
	ПоказатьВопрос(Новый ОписаниеОповещения("СоздатьНовуюНоменклатуруЗавершение", ЭтотОбъект), НСтр("ru = 'Вы уверены?'"), РежимДиалогаВопрос.ДаНет);
	
КонецПроцедуры

&НаКлиенте
Процедура СоздатьНовуюНоменклатуруЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	Если РезультатВопроса = КодВозвратаДиалога.Нет Тогда
		Возврат;
	КонецЕсли;	
	
	СоздатьНовуюНоменклатуруСерверУТ114();	 
	
КонецПроцедуры



&НаСервере
Процедура КомандаЗагрузитьШтрихкодыСервер()
	
	НачатьТранзакцию();
	КоличествоОбработанных = 0;
	
	Для Каждого Строка Из Объект.ТабличнаяЧасть Цикл
		Если НЕ ЗначениеЗаполнено(Строка.Номенклатура) Тогда
			Продолжить;
		КонецЕсли;
		Если НЕ ЗначениеЗаполнено(Строка.Поле_ШтрихКод) Тогда
			Продолжить;
		КонецЕсли;
		
		МассивСтрок = глРазложитьСтрокуВМассивПодстрок(Строка.Поле_ШтрихКод," ");
		
		Для Каждого ВыборкаПодстрока Из МассивСтрок Цикл		 
			ТекстЗапроса = 
			"ВЫБРАТЬ
			|	ШтрихкодыНоменклатуры.Номенклатура КАК Номенклатура
			|ИЗ
			|	РегистрСведений.ШтрихкодыНоменклатуры КАК ШтрихкодыНоменклатуры
			|ГДЕ
			|	ШтрихкодыНоменклатуры.Номенклатура = &Номенклатура
			|	И ШтрихкодыНоменклатуры.Характеристика = &Характеристика
			|	И ШтрихкодыНоменклатуры.Штрихкод = &ВыборкаПодстрока";
			
			Запрос = Новый Запрос;
			Запрос.Текст = ТекстЗапроса;
			Запрос.УстановитьПараметр("Номенклатура", Строка.Номенклатура);
			Запрос.УстановитьПараметр("Характеристика", Строка.ХарактеристикаНоменклатуры);  
			Запрос.УстановитьПараметр("ВыборкаПодстрока", ВыборкаПодстрока);
			
			РезультатЗапроса = Запрос.Выполнить();	
			Если НЕ РезультатЗапроса.Пустой() Тогда
				Сообщить("У данной номенклатуры штрихкод уже есть (строка пропущена)  "+Строка.Номенклатура);
				Продолжить;
			КонецЕсли;	 
			
			КоличествоОбработанных = КоличествоОбработанных + 1;
			
			ТекЗапись = РегистрыСведений.ШтрихкодыНоменклатуры.СоздатьМенеджерЗаписи();
			ЗаполнитьЗначенияСвойств(ТекЗапись, Строка);
			ТекЗапись.Прочитать();
			
			ТекЗапись.Номенклатура   = Строка.Номенклатура;
			ТекЗапись.Характеристика = Строка.ХарактеристикаНоменклатуры;
			ТекЗапись.Упаковка     = Строка.Упаковка;
			ТекЗапись.Штрихкод     = ВыборкаПодстрока;
			ТекЗапись.Записать();
		КонецЦикла;
		
		Если КоличествоОбработанных = 100 Тогда
			// промежуточную транзакцию закрываем и открываем новую
			ЗафиксироватьТранзакцию();
			НачатьТранзакцию();
			КоличествоОбработанных = 0;
		КонецЕсли;
		
	КонецЦикла;
	
	ЗафиксироватьТранзакцию();	
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаЗагрузитьШтрихкоды(Команда)
	
	КомандаЗагрузитьШтрихкодыСервер();
	
	Сообщить("Загрузка штрихкодов завершена");
	
КонецПроцедуры




&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	
	Если НЕ ЗакрытьОбработку Тогда
		Отказ = Истина;
		ПоказатьВопрос(Новый ОписаниеОповещения("ПередЗакрытиемЗавершение", ЭтотОбъект), НСтр("ru = 'Работа будет завершена, все введенные данные будут потеряны. Закрыть?'"), РежимДиалогаВопрос.ДаНет);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытиемЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	Если РезультатВопроса = КодВозвратаДиалога.Да Тогда
		ЗакрытьОбработку = Истина;
		Закрыть();
	КонецЕсли;
	
КонецПроцедуры



&НаСервере
Процедура ЗаписатьСоответствияНаСервере()
	
	Для Каждого Стр Из Объект.ТабличнаяЧасть Цикл		 
		Если НЕ ЗначениеЗаполнено(Стр.Номенклатура) Тогда
			Продолжить;
		КонецЕсли;
		//Если Изменить = Ложь И ЗначениеЗаполнено(Стр.НоменклатураПоставщика) Тогда
		//	Продолжить;
		//КонецЕсли;
		
		НаименованиеДляПоиска = СокрЛП(Стр.Поле_Наименование);	
		Если НЕ ЗначениеЗаполнено(НаименованиеДляПоиска) Тогда
			Сообщить(""+Стр.НомерСтроки+" - В импорте отсутствует наименование по строке. Запись по строке не будет выполнена.");
			Продолжить;
		КонецЕсли;
		
		НоменклатураПоставщикаИмеетНесколькоСоответствий = Ложь;
		Если Объект.ИспользоватьМегапрайс Тогда
			НоменклатураПоставщикаИмеетНесколькоСоответствий = Объект.ПрайсПартнера.НоменклатураПоставщикаИмеетНесколькоСоответствий;
		КонецЕсли;
		
		Запрос = Новый Запрос();
		ТекстЗапроса = 
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	НоменклатураПоставщиков.Ссылка,
		|	НоменклатураПоставщиков.Номенклатура КАК Номенклатура,
		|	НоменклатураПоставщиков.Характеристика КАК ХарактеристикаНоменклатуры,
		|	НоменклатураПоставщиков.Упаковка
		|ИЗ
		|	Справочник.НоменклатураПоставщиков КАК НоменклатураПоставщиков
		|ГДЕ
		|	НоменклатураПоставщиков.Номенклатура = &Номенклатура
		|	И НоменклатураПоставщиков.Характеристика = &Характеристика
		|	И НоменклатураПоставщиков.Владелец = &Партнер";  	 
		Если НоменклатураПоставщикаИмеетНесколькоСоответствий Тогда
			ТекстЗапроса = ТекстЗапроса + "
			|	И НоменклатураПоставщиков.Идентификатор = &Поле_Идентификатор
			|	И НоменклатураПоставщиков.Артикул = &Поле_Артикул
			|	И НоменклатураПоставщиков.Наименование = &Поле_Наименование"; 
			
			Запрос.УстановитьПараметр("Поле_Идентификатор", Стр.Поле_Идентификатор);
			Запрос.УстановитьПараметр("Поле_Артикул", Стр.Поле_Артикул);
			Запрос.УстановитьПараметр("Поле_Наименование", Стр.Поле_Наименование);
		КонецЕсли;
		
		Запрос.УстановитьПараметр("Номенклатура", Стр.Номенклатура);
		Запрос.УстановитьПараметр("Характеристика", Стр.ХарактеристикаНоменклатуры);
		Запрос.УстановитьПараметр("Партнер", Объект.Партнер);
		
		Запрос.Текст = ТекстЗапроса;
		РезультатЗапроса = Запрос.Выполнить();
		
		Если РезультатЗапроса.Пустой() Тогда				 
			Запись = Справочники.НоменклатураПоставщиков.СоздатьЭлемент();
			Запись.Владелец       = Объект.Партнер;
			Запись.Номенклатура   = Стр.Номенклатура;
			Запись.Характеристика = Стр.ХарактеристикаНоменклатуры;
			Запись.Наименование   = НаименованиеДляПоиска;
			Если ЗначениеЗаполнено(Стр.Поле_Артикул) Тогда
				Запись.Артикул = СокрЛП(Стр.Поле_Артикул);
			КонецЕсли;
			Если ЗначениеЗаполнено(Стр.Поле_Идентификатор) Тогда
				Запись.Идентификатор  = СокрЛП(Стр.Поле_Идентификатор);
			КонецЕсли;	
			Запись.УстановитьНовыйКод();
			Запись.ОбменДанными.Загрузка = Истина;
			Запись.Записать();
			Стр.НоменклатураПоставщика = Запись.Ссылка;			 
		Иначе			 
			Выборка  = РезультатЗапроса.Выбрать();
			Пока Выборка.Следующий() Цикл				
				Запись = Выборка.Ссылка.ПолучитьОбъект();
				ТекстСообщения = "Был найден элемент Номенклатуры поставщика по товару "+Стр.Номенклатура+" - элемент обновлен новыми данными";
				
				Запись.Владелец       = Объект.Партнер;
				Запись.Номенклатура   = Стр.Номенклатура;
				Запись.Характеристика = Стр.ХарактеристикаНоменклатуры;
				Запись.Наименование   = НаименованиеДляПоиска;
				Если ЗначениеЗаполнено(Стр.Поле_Артикул) Тогда
					Запись.Артикул = СокрЛП(Стр.Поле_Артикул);
				КонецЕсли;
				Если ЗначениеЗаполнено(Стр.Поле_Идентификатор) Тогда
					Запись.Идентификатор  = СокрЛП(Стр.Поле_Идентификатор);
				КонецЕсли;	
				Запись.ОбменДанными.Загрузка = Истина;
				Запись.Записать();	
				Стр.НоменклатураПоставщика = Запись.Ссылка;
			КонецЦикла;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаписатьСоответствия(Команда)
	ЗаписатьСоответствияНаСервере();
КонецПроцедуры

&НаСервере
Процедура ИзменитьАртикулыНоменклатурыНаСервере()
	
	Для Каждого СтрокаВыборка Из Объект.ТабличнаяЧасть Цикл
		Если НЕ ЗначениеЗаполнено(СтрокаВыборка.Номенклатура) Тогда
			Продолжить;
		КонецЕсли;
		
		ТекОбъект = СтрокаВыборка.Номенклатура.ПолучитьОбъект();
		ИзменениеПроизошло = Ложь;
		
		Если ЗначениеЗаполнено(СтрокаВыборка.Поле_Артикул) Тогда
			ТекОбъект.Артикул = СокрЛП(СтрокаВыборка.Поле_Артикул);
			ИзменениеПроизошло = Истина;
		КонецЕсли;
		
		Если ИзменениеПроизошло Тогда
			ТекОбъект.ОбменДанными.Загрузка = Истина;
			ТекОбъект.Записать();	
		КонецЕсли;		
	КонецЦикла;	 
	
КонецПроцедуры

&НаКлиенте
Процедура ИзменитьАртикулыНоменклатуры(Команда)
	
	#Если Клиент Тогда
		Ответ = Вопрос("Вы уверены?", РежимДиалогаВопрос.ДаНет, ,КодВозвратаДиалога.Нет, "Дополнительный вопрос");		
		Если Ответ <> КодВозвратаДиалога.Да Тогда
			Возврат;
		КонецЕсли;
	#КонецЕсли
	
	ПоказатьВопрос(Новый ОписаниеОповещения("ИзменитьАртикулыНоменклатурыЗавершение", ЭтотОбъект), НСтр("ru = 'Вы уверены?'"), РежимДиалогаВопрос.ДаНет);
	
КонецПроцедуры

&НаКлиенте
Процедура ИзменитьАртикулыНоменклатурыЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	Если РезультатВопроса = КодВозвратаДиалога.Нет Тогда
		Возврат;
	КонецЕсли;	
	
	ИзменитьАртикулыНоменклатурыНаСервере(); 
	
КонецПроцедуры




&НаСервере
Процедура ИзменитьНаименованияНоменклатурыНаСервере()
	
	Для Каждого СтрокаВыборка Из Объект.ТабличнаяЧасть Цикл
		Если НЕ ЗначениеЗаполнено(СтрокаВыборка.Номенклатура) Тогда
			Продолжить;
		КонецЕсли;
		
		ТекОбъект = СтрокаВыборка.Номенклатура.ПолучитьОбъект();
		ИзменениеПроизошло = Ложь;
		
		Если ЗначениеЗаполнено(СтрокаВыборка.Поле_Наименование) Тогда
			ТекОбъект.Наименование = СокрЛП(СтрокаВыборка.Поле_Наименование);
			ИзменениеПроизошло = Истина;
		КонецЕсли;
		
		Если ИзменениеПроизошло Тогда
			ТекОбъект.ОбменДанными.Загрузка = Истина;
			ТекОбъект.Записать();	
		КонецЕсли;		
	КонецЦикла;	 
	
КонецПроцедуры

&НаКлиенте
Процедура ИзменитьНаименованияНоменклатуры(Команда)
	
	#Если Клиент Тогда
		Ответ = Вопрос("Вы уверены?", РежимДиалогаВопрос.ДаНет, ,КодВозвратаДиалога.Нет, "Дополнительный вопрос");		
		Если Ответ <> КодВозвратаДиалога.Да Тогда
			Возврат;
		КонецЕсли;
	#КонецЕсли
	
	ИзменитьНаименованияНоменклатурыНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьЖурналЗаказовПокупателей(Команда)
	
	ОткрытьФорму("Документ.ЗаказКлиента.ФормаСписка");
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьЖурналЗаказовПоставщикам(Команда)
	
	ОткрытьФорму("Документ.ЗаказПоставщику.ФормаСписка");
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьЖурналПоступлений(Команда)
	
	ОткрытьФорму("Документ.ПриобретениеТоваровУслуг.ФормаСписка");
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьЖурналРеализаций(Команда)
	
	ОткрытьФорму("Документ.РеализацияТоваровУслуг.ФормаСписка");
	
КонецПроцедуры



ЗакрытьОбработку = Ложь;


