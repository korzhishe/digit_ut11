
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	УстановитьПривилегированныйРежим(Истина);

	СтруктураПараметров = ПолучитьИзВременногоХранилища(Параметры.Адрес);
	
	Валюта = Константы.ВалютаРегламентированногоУчета.Получить();

	Объект.Партнер                      = СтруктураПараметров.Партнер;
	Объект.ВидЦеныПоставщика            = СтруктураПараметров.ВидЦеныПоставщика;
	Объект.СоглашениеСПоставщиком       = СтруктураПараметров.СоглашениеСПоставщиком;
	
	Объект.ДокументОрганизация = СтруктураПараметров.ДокументОрганизация;
	Объект.ДокументСклад       = СтруктураПараметров.ДокументСклад;

	Объект.ТоварыПоступление.Очистить();
	
	Для Каждого Строка из СтруктураПараметров.ТабличнаяЧасть Цикл
		Если НЕ ЗначениеЗаполнено(Строка.Номенклатура) Тогда
			Продолжить;
		КонецЕсли;
		
		НоваяСтрока = Объект.ТоварыПоступление.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока,Строка);
		НоваяСтрока.КоличествоУпаковок = НоваяСтрока.Поле_Количество;	
		Если НоваяСтрока.Поле_Количество > 0 И НоваяСтрока.Поле_Сумма = 0 Тогда	
			НоваяСтрока.Поле_Сумма = НоваяСтрока.Поле_ЦенаЗакупки * НоваяСтрока.Поле_Количество;
		КонецЕсли;
		НоваяСтрока.ВидНоменклатурыСсылка = НоваяСтрока.Номенклатура.ВидНоменклатуры;
		НоваяСтрока.НаборУпаковок = НоваяСтрока.Номенклатура.НаборУпаковок;
		
		СтрСтранаПроисхождения = СокрЛП(НоваяСтрока.СтранаПроисхождения);
		
		Если ЗначениеЗаполнено(СтрСтранаПроисхождения) Тогда
			НайденСтрана = Справочники.СтраныМира.НайтиПоКоду(СтрСтранаПроисхождения);
			Если НайденСтрана = Справочники.СтраныМира.ПустаяСсылка() Тогда
				НайденСтрана = Справочники.СтраныМира.НайтиПоНаименованию(СтрСтранаПроисхождения,Истина);
			КОнецЕсли;
			Если НайденСтрана = Справочники.СтраныМира.ПустаяСсылка() Тогда
				Сообщить("Новая страна "+СтрСтранаПроисхождения+" ВНИМАНИЕ! При создании серий страны должны быть идентифицированы.");
				
				//Попытка
				//	НовыйЭлементСтр = Справочники.СтраныМира.СоздатьЭлемент();
				//	НовыйЭлементСтр.НаименованиеПолное = СтрСтранаПроисхождения;
				//	НовыйЭлементСтр.Записать();
				//	
				//	НайденСтрана = НовыйЭлементСтр.Ссылка;
				//Исключение
				//КонецПопытки;
			КонецЕсли;
		Иначе
			НайденСтрана = Справочники.СтраныМира.ПустаяСсылка();
		КОнецЕсли;
		
		Если НЕ ЗначениеЗаполнено(НоваяСтрока.Упаковка) И ЗначениеЗаполнено(НоваяСтрока.Поле_УпаковкаЕдиница) Тогда
			Если НоваяСтрока.НаборУпаковок = Справочники.НаборыУпаковок.ИндивидуальныйДляНоменклатуры Тогда
				ВладелецУпаковки = НоваяСтрока.Номенклатура;
			Иначе
				ВладелецУпаковки = НоваяСтрока.НаборУпаковок;				
			КонецЕсли;
						
			НоваяСтрока.Упаковка = Справочники.УпаковкиЕдиницыИзмерения.НайтиПоНаименованию(НоваяСтрока.Поле_УпаковкаЕдиница,Истина,,ВладелецУпаковки);
			
			КоэффициентУпаковки = ПолучитьКоэффициентУпаковки(НоваяСтрока.Упаковка);

			НоваяСтрока.КоличествоУпаковок = НоваяСтрока.Поле_Количество;
			НоваяСтрока.Поле_Количество    = НоваяСтрока.Поле_Количество * КоэффициентУпаковки;
		КонецЕсли;
		
		НоваяСтрока.СтранаПроисхожденияСсылка = НайденСтрана;
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Функция ПолучитьКоэффициентУпаковки(ТекУпаковка) Экспорт
	
	Если ЗначениеЗаполнено(ТекУпаковка) Тогда
		ТекКоэффициент = ТекУпаковка.КоличествоУпаковок;
	Иначе
		ТекКоэффициент = 1;
	КонецЕсли;
	
	Возврат ТекКоэффициент;
	
КонецФункции

&НаСервере
Функция СоздатьПоступлениеТоваровСервер(СтруктураПараметров)
	
	УстановитьПривилегированныйРежим(Истина);

	ИспользоватьПоступлениеПоНесколькимЗаказам = ПолучитьФункциональнуюОпцию("ИспользоватьПоступлениеПоНесколькимЗаказам");

	Попытка
		НовыйДокумент = Документы.ПриобретениеТоваровУслуг.СоздатьДокумент();
	Исключение
		НовыйДокумент = Документы.ПоступлениеТоваровУслуг.СоздатьДокумент();
	КонецПопытки;
	НовыйДокумент.Дата         = ТекущаяДата();
	НовыйДокумент.Согласован   = Истина;
	
	НовыйДокумент.ПоступлениеПоЗаказам  = Ложь;
	НовыйДокумент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ЗакупкаУПоставщика;	
	НовыйДокумент.Организация  = Объект.ДокументОрганизация;
	НовыйДокумент.Партнер      = Объект.Партнер;
	НовыйДокумент.Соглашение   = Объект.СоглашениеСПоставщиком;	
	НовыйДокумент.ФормаОплаты  = Перечисления.ФормыОплаты.Безналичная;
	НовыйДокумент.Валюта       = СтруктураПараметров.Валюта;
	НовыйДокумент.ВалютаВзаиморасчетов = СтруктураПараметров.Валюта;

	Если ЗначениеЗаполнено(Объект.СоглашениеСПоставщиком) Тогда
		НовыйДокумент.ЗаполнитьУсловияЗакупокПоСоглашению();
	Иначе
		НовыйДокумент.ЗаполнитьУсловияЗакупокПоУмолчанию();
	КонецЕсли;
	Если ЗначениеЗаполнено(Объект.ДокументСклад) Тогда
		НовыйДокумент.Склад         = Объект.ДокументСклад;
		НовыйДокумент.Подразделение = Объект.ДокументСклад.Подразделение;
	КонецЕсли;
	НовыйДокумент.ЦенаВключаетНДС = ЦенаВключаетНДС;
	НовыйДокумент.ЗакупкаПодДеятельность = Справочники.Организации.ЗакупкаПодДеятельность(НовыйДокумент.Организация, НовыйДокумент.Склад, НовыйДокумент.Дата);
	
	Попытка
		НовыйДокумент.ВариантПриемкиТоваров = ЗакупкиСервер.ПолучитьВариантПриемкиТоваров(Неопределено, НовыйДокумент.Договор);
	Исключение
	КонецПопытки;

	НовыйДокумент.Менеджер = ПараметрыСеанса.ТекущийПользователь;
	НовыйДокумент.Комментарий = Комментарий;
	
	ЗаказПоставщику = СтруктураПараметров.ЗаказПоставщику; 
	Если ЗначениеЗаполнено(ЗаказПоставщику) Тогда
		НовыйДокумент.ПоступлениеПоЗаказам = Истина;
		НовыйДокумент.ЗаказПоставщику  = ЗаказПоставщику;
	КонецЕсли;
	
	НеПересчитыватьСуммуЕслиНетЦены = Ложь;

	Для Каждого Стр из Объект.ТоварыПоступление Цикл	
		Если НЕ ЗначениеЗаполнено(Стр.Номенклатура) Тогда
			Продолжить;
		КонецЕсли;
		
		СтрокаТЧ = НовыйДокумент.Товары.Добавить();
		СтрокаТЧ.НоменклатураПоставщика = Стр.НоменклатураПоставщика;
		СтрокаТЧ.ЗаказПоставщику = Документы.ЗаказПоставщику.ПустаяСсылка();
		СтрокаТЧ.Сделка = Справочники.СделкиСКлиентами.ПустаяСсылка();
		//СтрокаТЧ.НомерСтрокиДокументаПоставщика = Стр.КлючСтроки;
		СтрокаТЧ.Номенклатура = Стр.Номенклатура;
		СтрокаТЧ.Характеристика = Стр.ХарактеристикаНоменклатуры;
		СтрокаТЧ.Упаковка = Стр.Упаковка;
		СтрокаТЧ.СтавкаНДС = Стр.СтавкаНДС;
		
		СтрокаТЧ.ВидЦеныПоставщика = Объект.ВидЦеныПоставщика;
		
		Если ПроизвольноеКоличество > 0 Тогда
			СтрокаТЧ.Количество = ПроизвольноеКоличество;
			СтрокаТЧ.КоличествоУпаковок = ПроизвольноеКоличество;
		Иначе	
			СтрокаТЧ.Количество = Стр.Поле_Количество;
			СтрокаТЧ.КоличествоУпаковок = Стр.КоличествоУпаковок;
		КонецЕсли;
		
		Если ЗначениеЗаполнено(Объект.ДокументСклад) Тогда
			СтрокаТЧ.Склад = Объект.ДокументСклад;
		КонецЕсли;
		
		Если ИспользоватьПоступлениеПоНесколькимЗаказам Тогда
			СтрокаТЧ.ЗаказПоставщику = Стр.ЗаказПоставщику;
		КонецЕсли;
		
		Если Стр.Поле_Сумма > 0 Тогда	
			НеПересчитыватьСуммуЕслиНетЦены = Истина;

			СтрокаТЧ.Сумма = Стр.Поле_Сумма; 
			СтрокаТЧ.Цена = Стр.Поле_Сумма/СтрокаТЧ.КоличествоУпаковок;
		Иначе
			СтрокаТЧ.Цена = Стр.Поле_ЦенаЗакупки;		
			СтрокаТЧ.Сумма = Стр.Поле_ЦенаЗакупки*СтрокаТЧ.КоличествоУпаковок;
		КонецЕсли;
		СтрокаТЧ.СуммаВзаиморасчетов = СтрокаТЧ.Сумма;
		
		СтрНомерГТД = СокрЛП(Стр.НомерГТД);
		
		Если ЗначениеЗаполнено(СтрНомерГТД) Тогда
			Если Стр.Номенклатура.ВестиУчетПоГТД = Ложь Тогда
				ОбъектНоменклатура = Стр.Номенклатура.ПолучитьОбъект();
				ОбъектНоменклатура.ВестиУчетПоГТД = Истина;
				ОбъектНоменклатура.Записать();
			КонецЕсли;
			
			НайденНомерГТД = Справочники.НомераГТД.НайтиПоКоду(СтрНомерГТД);
			Если НайденНомерГТД = Справочники.НомераГТД.ПустаяСсылка() Тогда
				НайденНомерГТД = Справочники.НомераГТД.СоздатьЭлемент();
				НайденНомерГТД.Код = СтрНомерГТД;
				Попытка
					ДопРеквизитыГТД = Справочники.НомераГТД.РегистрационныйНомерИСтранаВвоза(СтрНомерГТД);
					ЗаполнитьЗначенияСвойств(НайденНомерГТД, ДопРеквизитыГТД, "РегистрационныйНомер,СтранаВвозаНеРФ,ПорядковыйНомерТовара");
				Исключение
				КонецПопытки;
				
				Если ЗначениеЗаполнено(Стр.СтранаПроисхожденияСсылка) Тогда
					НайденНомерГТД.СтранаПроисхождения = Стр.СтранаПроисхожденияСсылка;
				Иначе
					Сообщить("В строке отсутствует страна происхождения. Номер ГТД "+СтрНомерГТД+" записан без страны");
				КОнецЕсли;
				
				НайденНомерГТД.Записать();
			КонецЕсли;
			
			СтрокаТЧ.НомерГТД = НайденНомерГТД.Ссылка;
		КонецЕсли;
	КонецЦикла;
	
	НовыйДокумент.СуммаДокумента = НовыйДокумент.Товары.Итог("Сумма");
	НовыйДокумент.СуммаВзаиморасчетов = НовыйДокумент.СуммаДокумента;
	
	Попытка
		СтруктураПересчетаСуммы = ОбработкаТабличнойЧастиКлиентСервер.ПараметрыПересчетаСуммыНДСВСтрокеТЧ(НовыйДокумент);
	Исключение //СТАРЫЕ ВЕРСИИ УТ
		СтруктураПересчетаСуммы = ОбработкаТабличнойЧастиКлиентСервер.ПолучитьСтруктуруПересчетаСуммыНДСВСтрокеТЧ(НовыйДокумент);
	КонецПопытки;
	
	СтруктураДействий = Новый Структура;
	СтруктураДействий.Вставить("ЗаполнитьНоменклатуруПоставщикаПоНоменклатуре", Объект.Партнер);
	СтруктураДействий.Вставить("ЗаполнитьСтавкуНДС",Новый Структура("НалогообложениеНДС, Дата", НовыйДокумент.НалогообложениеНДС, НовыйДокумент.Дата));
	СтруктураДействий.Вставить("ПересчитатьКоличествоЕдиниц");
	СтруктураДействий.Вставить("ПересчитатьСуммуНДС", СтруктураПересчетаСуммы);
	СтруктураДействий.Вставить("ПересчитатьСуммуСНДС", СтруктураПересчетаСуммы);
	
	Если НЕ НеПересчитыватьСуммуЕслиНетЦены Тогда
		СтруктураДействий.Вставить("ПересчитатьСумму");
	КонецЕсли;
	
	//СтруктураДействий.Вставить("ПересчитатьСуммуСУчетомРучнойСкидки", Новый Структура("Очищать", Истина));
	//СтруктураДействий.Вставить("ЗаполнитьПризнакХарактеристикиИспользуются", Новый Структура("Номенклатура", "ХарактеристикиИспользуются"));
	//СтруктураДействий.Вставить("ЗаполнитьПризнакТипНоменклатуры", Новый Структура("Номенклатура", "ТипНоменклатуры"));
	//СтруктураДействий.Вставить("ЗаполнитьПризнакАртикул", Новый Структура("Номенклатура", "Артикул"));
	//СтруктураДействий.Вставить("ЗаполнитьПризнакВедетсяУчетПоГТД", Новый Структура("Номенклатура", "ВедетсяУчетПоГТД"));

	СтруктураДействий.Вставить("ПересчитатьСуммуСверхЗаказа", Новый Структура("РеализацияПоступлениеПоЗаказу, ТребуетсяЗалогЗаТару",
		НовыйДокумент.ПоступлениеПоЗаказам, НовыйДокумент.ТребуетсяЗалогЗаТару));

	СтруктураТЧ = Новый Структура;
	СтруктураТЧ.Вставить("СтрокиТЧ" , НовыйДокумент.Товары);
	ОбработкаТабличнойЧастиСервер.ОбработатьТЧ(НовыйДокумент.Товары, СтруктураДействий, Неопределено);
	
	//НовыйДокумент.ЗаполнитьКлючиАналитикиУчетаПартийДокумента();

	ВзаиморасчетыСервер.ЗаполнитьСуммуВзаиморасчетовВПоступлении(НовыйДокумент);
	Ценообразование.РассчитатьСуммыВзаиморасчетовВТабличнойЧасти(НовыйДокумент, "Товары");
	ВзаиморасчетыСервер.ЗаполнитьСуммуНДСВзаиморасчетовВТабличнойЧасти(НовыйДокумент, "Товары");
	
	НовыйДокумент.Записать();
	
	Возврат НовыйДокумент.Ссылка;
	
КонецФункции

&НаКлиенте
Процедура СоздатьПоступлениеТоваровУслуг(Команда)
	
	Если НЕ ЗначениеЗаполнено(Объект.Партнер) Тогда
		Сообщить("Не указан Партнер!");
		Возврат;
	КонецЕсли;

	Если НЕ ЗначениеЗаполнено(Объект.ДокументСклад) Тогда
		Сообщить("Не указан Склад!");
		Возврат;
	КонецЕсли;

	СтруктураПараметров = Новый Структура;
	СтруктураПараметров.Вставить("Валюта", Валюта);
	СтруктураПараметров.Вставить("ЗаказПоставщику", ЗаказПоставщику);

	ДокументОбъект = СоздатьПоступлениеТоваровСервер(СтруктураПараметров);
	
	Попытка 
		ФормаДока = ПолучитьФорму("Документ.ПриобретениеТоваровУслуг.Форма.ФормаДокумента", Новый Структура("Ключ", ДокументОбъект)); 
	Исключение
		ФормаДока = ПолучитьФорму("Документ.ПоступлениеТоваровУслуг.Форма.ФормаДокумента", Новый Структура("Ключ", ДокументОбъект)); 
	КонецПопытки;
	
	ФормаДока.Открыть();
	
КонецПроцедуры

&НаСервере
Процедура ЗаказПоставщикуПриИзмененииСервер(ПараметрыЗапроса)
	
	ЗаказПоставщику = ПараметрыЗапроса.ЗаказПоставщику;
	
	Если ЗначениеЗаполнено(ЗаказПоставщику) Тогда 		
		ВремТовары = Новый ТаблицаЗначений;
		ВремТовары = ЗаказПоставщику.Товары.Выгрузить(,"Номенклатура,Характеристика,Упаковка,Количество,Сумма");
		ВремТовары.Свернуть("Номенклатура,Характеристика,Упаковка","Количество,Сумма");
		
		Для Каждого Строка из ВремТовары Цикл
			Номенклатура = Строка.Номенклатура;
			
			ПараметрыОтбора = Новый Структура;
			ПараметрыОтбора.Вставить("Номенклатура", Строка.Номенклатура);
			ПараметрыОтбора.Вставить("ХарактеристикаНоменклатуры", Строка.Характеристика);

			НайденныеСтроки = Объект.ТоварыПоступление.НайтиСтроки(ПараметрыОтбора);
			Если НайденныеСтроки.Количество() > 0 Тогда
				Для Каждого НайденнаяСтрока ИЗ НайденныеСтроки Цикл 
					НайденнаяСтрока.ЗаказПоставщику = ЗаказПоставщику;
					НайденнаяСтрока.КоличествоПоЗаказу = Строка.Количество;
					НайденнаяСтрока.ЦенаПоЗаказу = Строка.Сумма/Строка.Количество;  
					НайденнаяСтрока.СуммаПоЗаказу = Строка.Сумма;
					
					НайденнаяСтрока.ОтклонениеКоличество = НайденнаяСтрока.Поле_Количество - НайденнаяСтрока.КоличествоПоЗаказу;
					НайденнаяСтрока.ОтклонениеЦена = НайденнаяСтрока.Поле_ЦенаЗакупки - НайденнаяСтрока.ЦенаПоЗаказу;
					НайденнаяСтрока.ОтклонениеСумма = НайденнаяСтрока.Поле_Сумма - НайденнаяСтрока.СуммаПоЗаказу;
				КонецЦикла;
			Иначе
				НоваяСтрока = Объект.ТоварыПоступление.Добавить();
				НоваяСтрока.Номенклатура = Строка.Номенклатура;
				НоваяСтрока.ХарактеристикаНоменклатуры = Строка.Характеристика;
				НоваяСтрока.ЗаказПоставщику = ЗаказПоставщику;
				НоваяСтрока.КоличествоПоЗаказу = Строка.Количество;
				НоваяСтрока.ЦенаПоЗаказу = Строка.Сумма/Строка.Количество; 
				НоваяСтрока.СуммаПоЗаказу = Строка.Сумма;
				
				НоваяСтрока.ОтклонениеКоличество = НоваяСтрока.Поле_Количество - НоваяСтрока.КоличествоПоЗаказу; 
				НоваяСтрока.ОтклонениеЦена = НоваяСтрока.Поле_ЦенаЗакупки - НоваяСтрока.ЦенаПоЗаказу; 
				НоваяСтрока.ОтклонениеСумма = НоваяСтрока.Поле_Сумма - НоваяСтрока.СуммаПоЗаказу;
			КонецЕсли;
		КонецЦикла;		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаказПоставщикуПриИзменении(Элемент)
	
	ПараметрыЗапроса = Новый Структура;
	ПараметрыЗапроса.Вставить("ЗаказПоставщику", ЗаказПоставщику);

	ЗаказПоставщикуПриИзмененииСервер(ПараметрыЗапроса);
	
КонецПроцедуры


&НаКлиенте
Процедура ТоварыПоступлениеПриАктивизацииСтроки(Элемент)
	
	ТекущиеДанные = Элементы.ТоварыПоступление.ТекущиеДанные;	
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ПараметрыЗапроса = Новый Структура;
	ПараметрыЗапроса.Вставить("Партнер", Объект.Партнер);
	ПараметрыЗапроса.Вставить("Номенклатура", ТекущиеДанные.Номенклатура);
	ПараметрыЗапроса.Вставить("ХарактеристикаНоменклатуры", ТекущиеДанные.ХарактеристикаНоменклатуры);

	ТоварыПоступлениеПриАктивизацииСтрокиНаСервере(ПараметрыЗапроса);
	
КонецПроцедуры


&НаСервере
Процедура ТоварыПоступлениеПриАктивизацииСтрокиНаСервере(ПараметрыЗапроса)
	
	ТаблицаРасшифровкиЗаказыПоставщикам = РеквизитФормыВЗначение("РасшифровкиЗаказыПоставщикам");

	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ЗаказыПоставщикам.ЗаказПоставщику.Дата КАК Дата,
	|	ЗаказыПоставщикам.ЗаказПоставщику.ЖелаемаяДатаПоступления КАК ЖелаемаяДатаПоступления,
	|	ЗаказыПоставщикам.ЗаказПоставщику.Контрагент КАК Контрагент,
	|	ЗаказыПоставщикам.ЗаказПоставщику КАК ЗаказПоставщику,
	|	ЗаказыПоставщикам.ЗаказПоставщику.Склад КАК Склад,
	|	СУММА(ЗаказыПоставщикам.ЗаказаноОстаток) КАК Заказано,
	|	СУММА(ЗаказыПоставщикам.КОформлениюОстаток) КАК КОформлению
	|ИЗ
	|	РегистрНакопления.ЗаказыПоставщикам.Остатки(
	|			,
	|			Номенклатура = &ВыбНоменклатура
	|				И Характеристика = &ВыбХарактеристикаНоменклатуры) КАК ЗаказыПоставщикам
	|ГДЕ
	|	ЗаказыПоставщикам.ЗаказПоставщику.Партнер = &Партнер
	|
	|СГРУППИРОВАТЬ ПО
	|	ЗаказыПоставщикам.ЗаказПоставщику.Дата,
	|	ЗаказыПоставщикам.ЗаказПоставщику,
	|	ЗаказыПоставщикам.ЗаказПоставщику.Контрагент,
	|	ЗаказыПоставщикам.ЗаказПоставщику.Склад,
	|	ЗаказыПоставщикам.ЗаказПоставщику.ЖелаемаяДатаПоступления
	|
	|УПОРЯДОЧИТЬ ПО
	|	Дата УБЫВ";
	
	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапроса;
	Запрос.УстановитьПараметр("Партнер",ПараметрыЗапроса.Партнер);
	Запрос.УстановитьПараметр("ВыбНоменклатура",ПараметрыЗапроса.Номенклатура);
	Запрос.УстановитьПараметр("ВыбХарактеристикаНоменклатуры",ПараметрыЗапроса.ХарактеристикаНоменклатуры);
	
	РезультатЗапроса = Запрос.Выполнить();
	ТаблицаРасшифровкиЗаказыПоставщикам = РезультатЗапроса.Выгрузить();
	
	ЗначениеВРеквизитФормы(ТаблицаРасшифровкиЗаказыПоставщикам, "РасшифровкиЗаказыПоставщикам");

КонецПроцедуры


&НаКлиенте
Процедура ОткрытьКлассификаторСтран(Команда)
	
	ОткрытьФорму("Справочник.СтраныМира.ФормаСписка");

КонецПроцедуры





&НаКлиенте
 Процедура Справочники_СоздатьНоменклатуруПоставщикаКнопка(Команда)
	 
	 Если НЕ ЗначениеЗаполнено(Объект.Партнер) Тогда
		 Сообщить("Не указан Партнер!");
		 Возврат;
	 КонецЕсли;
	 
	 ПоказатьВопрос(Новый ОписаниеОповещения("Справочники_СоздатьНоменклатуруПоставщикаЗавершение", ЭтотОбъект), НСтр("ru = 'Вы уверены?'"), РежимДиалогаВопрос.ОКОтмена);

 КонецПроцедуры

  &НаКлиенте
 Процедура Справочники_СоздатьНоменклатуруПоставщикаЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
	 
	 Если РезультатВопроса = КодВозвратаДиалога.Отмена Тогда
		 Возврат;
	 КонецЕсли;	
	 
	 Справочники_СоздатьНоменклатуруПоставщикаСервер(Истина);
	 	 
 КонецПроцедуры
 
  &НаСервере
 Процедура Справочники_СоздатьНоменклатуруПоставщикаСервер(Изменить=Ложь)
	 
	УстановитьПривилегированныйРежим(Истина);	 
	Для Каждого Стр Из Объект.ТоварыПоступление Цикл		 
		Если НЕ ЗначениеЗаполнено(Стр.Номенклатура) Тогда
			Продолжить;
		КонецЕсли;
		Если НЕ ЗначениеЗаполнено(Стр.НоменклатураПоставщика) Тогда
			Продолжить;
		КонецЕсли;
		Если НЕ ЗначениеЗаполнено(Стр.Упаковка) Тогда
			Продолжить;
		КонецЕсли;
		
		Запись = Стр.НоменклатураПоставщика.ПолучитьОбъект();
		Запись.Упаковка = Стр.Упаковка;
		Запись.ОбменДанными.Загрузка = Истина;
		Запись.Записать();	
		Сообщить("Элемент изменен - "+Запись.Ссылка);
	КонецЦикла;
	 
 КонецПроцедуры

 
 
