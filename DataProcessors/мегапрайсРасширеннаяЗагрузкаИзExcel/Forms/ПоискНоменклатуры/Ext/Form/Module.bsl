
 &НаКлиенте
 Перем ЗакрытьОбработку;

//============================================================================
// ФОРМА


&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ИспользоватьХарактеристикиНоменклатуры = ПолучитьФункциональнуюОпцию("ИспользоватьХарактеристикиНоменклатуры");
	
	СтруктураПараметров = ПолучитьИзВременногоХранилища(Параметры.Адрес);
	АдресВХранилище = Параметры.Адрес;
	
	Объект.ПрайсПартнера = СтруктураПараметров.ПрайсПартнера;
	Объект.Партнер = СтруктураПараметров.Партнер;
	Объект.ПоискСоответствий.Очистить();
	
	Для Каждого Строка из СтруктураПараметров.ТабличнаяЧасть Цикл
		Если ЗначениеЗаполнено(Строка.Номенклатура) Тогда
			Продолжить;
		КонецЕсли;
		Если НЕ Строка.Пометка Тогда
			Продолжить;
		КонецЕсли;
		Если Строка.ЭтоГруппа Тогда
			Продолжить;
		КонецЕсли;
		НоваяСтрока = Объект.ПоискСоответствий.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока,Строка);			
	КонецЦикла;

	Если ЗначениеЗаполнено(Объект.ПрайсПартнера) Тогда
		Объект.АлгоритмыКлючевыхСлов.Загрузить(Объект.ПрайсПартнера.АлгоритмыКлючевыхСлов.Выгрузить());
		Объект.ЗаменаКлючевыхСлов.Загрузить(Объект.ПрайсПартнера.ЗаменаКлючевыхСлов.Выгрузить());
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Элементы.ТаблицаСоответствийХарактеристикаНоменклатуры.Видимость = ИспользоватьХарактеристикиНоменклатуры;
	
	ОграничениеДлиныСлов = 4;

КонецПроцедуры

//============================================================================
// СЛУЖЕБНЫЕ

&НаСервереБезКонтекста
Функция глСтрокаПолучитьЧисло(Строка1, БезТочек = Ложь) 
	
	НовСтрока = "";
	
	Если БезТочек Тогда
		ПравильныеСимволы = "0123456789,.";
	Иначе
		ПравильныеСимволы = "0123456789";
	КонецЕсли;
	
	Для Сч = 1 по СтрДлина(Строка1) Цикл
		
		ТекСимв = Сред(Строка1, Сч, 1);
		
		Если Найти(ПравильныеСимволы, ТекСимв) = 0 Тогда
			НовСтрока = НовСтрока + ТекСимв;
		КонецЕсли;
		
		Если Сч = СтрДлина(Строка1) Тогда
			Если ТекСимв = "." Тогда
				НовСтрока = НовСтрока + ТекСимв;
			КонецЕсли;
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат НовСтрока;	
	
КонецФункции   

&НаСервереБезКонтекста
Процедура НайтиВСтрокеСловоИзБуквИЦифр(Значение) 
		
	ПравильныеСимволы = "0123456789";
	//ПравильныеСимволыБуквы = "QWERTYUIOPASDFGHJKLZXCVBNMqwertyuiopasdfghjklzxcvbnmЙЦУКЕНГШЩЗХЪФЫВАПРОЛДЖЭЯЧСМИТЬБЮйцукенгшщзхъфывапролджэячсмитьбю";
	ПравильныеСимволыБуквы = "QWERTYUIOPASDFGHJKLZXCVBNMqwertyuiopasdfghjklzxcvbnm";
	
	
	МассивКлючевыхСлов = глРазложитьСтрокуВМассивПодстрок(Значение);
	МассивКлючевыхСлов = ПеревестиВРег(МассивКлючевыхСлов);
	КоличествоСлов     = МассивКлючевыхСлов.Количество();
	
	Значение = "";

	КоличествоКлючевыхСлов = 0;
	Для инд = 0 По КоличествоСлов - 1 Цикл
		КоличествоКлючевыхСлов = КоличествоКлючевыхСлов + 1;
		
		СтрКлючевоеСлово = СокрЛП(МассивКлючевыхСлов[инд]);
		
		ЕстьБуква = 0;
		ЕстьЦифра = 0;
		
		Для Сч = 1 по СтрДлина(СтрКлючевоеСлово) Цикл	
			ТекСимв = Сред(СтрКлючевоеСлово, Сч, 1);
			
			Если ЕстьЦифра = 0 Тогда
				Если Найти(ПравильныеСимволы, ТекСимв) > 0 Тогда
					ЕстьЦифра = 1;
				КонецЕсли;
			КонецЕсли;
			
			Если ЕстьБуква = 0 Тогда
				Если Найти(ПравильныеСимволыБуквы, ТекСимв) > 0 Тогда
					ЕстьБуква = 1;
				КонецЕсли;
			КонецЕсли;	
		КонецЦикла;
		
		Если ЕстьБуква = 1 И ЕстьЦифра = 0 Тогда
			Продолжить;
		КонецЕсли;
		
		Значение = Значение+" "+СтрКлючевоеСлово;
	КонецЦикла;
	
	
КонецПроцедуры   

&НаСервереБезКонтекста
Функция ПеревестиВРег(МассивСлов)
	
	НовыйМассив = Новый Массив; 
	
	Для Каждого Стр Из МассивСлов Цикл
		НовыйМассив.Добавить(ВРег(СокрЛП(Стр)));
	КонецЦикла;
	
	Возврат НовыйМассив; 
	
КонецФункции

&НаСервереБезКонтекста
Функция ПолучитьМассивСтрокой(МассивРезультат)
	
	Результат = "";
	Кол = 0;
	
	Для Каждого Строка Из МассивРезультат Цикл	
		Если Кол = 0 Тогда
			Результат = Строка; 
		Иначе	
			Результат = Результат+" "+Строка; 
		КонецЕсли;
		Кол = Кол+1;
	КонецЦикла;	
	
	Возврат Результат;
	
КонецФункции

&НаСервереБезКонтекста
Функция глРазложитьСтрокуВМассивПодстрок(Знач Стр, Разделитель = " ")

	МассивСтрок = Новый Массив();
	Если Разделитель = " " Тогда
		Стр = СокрЛП(Стр);
		Пока 1 = 1 Цикл
			Поз = Найти(Стр,Разделитель);
			
			Если Поз = 0 Тогда
				СтрокаВМассив = СокрЛП(Стр);

				МассивСтрок.Добавить(СтрокаВМассив);
				Возврат МассивСтрок;
			КонецЕсли;
			
			СтрокаВМассив = СокрЛП(Лев(Стр,Поз-1));
			
			МассивСтрок.Добавить(СтрокаВМассив);
			Стр = СокрЛ(Сред(Стр,Поз));
		КонецЦикла;
	Иначе
		ДлинаРазделителя = СтрДлина(Разделитель);
		Пока 1 = 1 Цикл
			Поз = Найти(Стр,Разделитель);
			
			Если Поз = 0 Тогда
				СтрокаВМассив = СокрЛП(Стр);

				МассивСтрок.Добавить(СтрокаВМассив);
				Возврат МассивСтрок;
			КонецЕсли;
			
			СтрокаВМассив = СокрЛП(Лев(Стр,Поз-1));

			МассивСтрок.Добавить(СтрокаВМассив);
			Стр = Сред(Стр,Поз+ДлинаРазделителя);
		КонецЦикла;
	КонецЕсли;
	
КонецФункции 

&НаСервереБезКонтекста
Функция глМассивПеревестиСловаВРег(МассивСлов) Экспорт
	
	НовыйМассив = Новый Массив; 
	
	Для Каждого Стр Из МассивСлов Цикл
		НовыйМассив.Добавить(ВРег(СокрЛП(Стр)));
	КонецЦикла;
	
	Возврат НовыйМассив; 
	
КонецФункции

//============================================================================
// ОБРАБОТКА

&НаСервере
Функция ОбработкаЗаменаКлючевыхСлов(Строка)
	
	СтрокаЗамены = Строка;
	
	Если ТаблицаКлючевыхСлов.Количество() > 0 Тогда
		Отбор = Новый Структура();
		Отбор.Вставить("КлючевоеСлово",Строка);
		
		НайтиСтроки = ТаблицаКлючевыхСлов.НайтиСтроки(Отбор);
		Если НайтиСтроки.Количество() > 0 Тогда
			Для Каждого СтрТаблицы Из НайтиСтроки Цикл
				СтрокаЗамены = СтрТаблицы.Замена; 
			КонецЦикла;
		КонецЕсли;
	КонецЕсли;
	
	Возврат СтрокаЗамены;
		
КонецФункции

&НаСервереБезКонтекста
Функция РазложитьСтрокуНаКлючевыеСлова(Строка)
	
	МассивРезультат = Новый Массив;
		
	МассивКлючевыхСлов = глРазложитьСтрокуВМассивПодстрок(Строка);
	МассивКлючевыхСлов = ПеревестиВРег(МассивКлючевыхСлов);
	КоличествоСлов     = МассивКлючевыхСлов.Количество();
	
	КоличествоКлючевыхСлов = 0;
	Для инд = 0 По КоличествоСлов - 1 Цикл
		КоличествоКлючевыхСлов = КоличествоКлючевыхСлов + 1;
		
		СтрКлючевоеСлово = СокрЛП(МассивКлючевыхСлов[инд]);	
		Если СтрДлина(СтрКлючевоеСлово) = 0 Тогда
			Продолжить;
		КонецЕсли;
		
		МассивРезультат.Добавить(СтрКлючевоеСлово);
	КонецЦикла;
	
	Возврат МассивРезультат;
	
КонецФункции

&НаСервере
Процедура ЗаполнитьКлючевыеСловаСервер(ПараметрыЗапроса)
	
	Для Каждого Стр Из Объект.ПоискСоответствий Цикл
		
		НаименованиеДляПоиска = ВРег(СокрЛП(Стр.Поле_Наименование));

		Если Объект.ЗаменаКлючевыхСлов.Количество() > 0 Тогда
			Для Каждого СтрНастроек Из Объект.ЗаменаКлючевыхСлов Цикл
				Если Найти(НаименованиеДляПоиска,СтрНастроек.ЧтоЗаменить) > 0 Тогда
					НаименованиеДляПоиска = СтрЗаменить(НаименованиеДляПоиска,СтрНастроек.ЧтоЗаменить,СтрНастроек.Замена);
					Стр.ХарактеристикаНоменклатуры = СтрНастроек.ХарактеристикаНоменклатуры;
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;	

		Стр.Номенклатура           = Справочники.Номенклатура.ПустаяСсылка();
		Стр.КлючевыеСлова          = "";
						
		Если ПараметрыЗапроса.ГлобальныйПоискПоАртикулам Тогда		
			СтрАртикул      = СокрЛП(Стр.Поле_Артикул);
			Если НЕ ЗначениеЗаполнено(СтрАртикул) Тогда
				Продолжить;
			КонецЕсли;
			
			СтрАртикул = ВыполнитьОбработкуАлгоритмыКлючевыхСлов(СтрАртикул); 
				
			МассивКлючевыхСлов         = РазложитьСтрокуНаКлючевыеСлова(СтрАртикул);
			Стр.КлючевыеСлова          = ПолучитьМассивСтрокой(МассивКлючевыхСлов);
			Стр.КоличествоКлючевыхСлов = МассивКлючевыхСлов.Количество();
			
		Иначе
			
			Если НЕ ЗначениеЗаполнено(НаименованиеДляПоиска) Тогда
				Продолжить;
			КонецЕсли;
			
			НаименованиеДляПоиска = ВыполнитьОбработкуАлгоритмыКлючевыхСлов(НаименованиеДляПоиска);

			МассивКлючевыхСлов         = РазложитьСтрокуНаКлючевыеСлова(НаименованиеДляПоиска);
			Стр.КлючевыеСлова          = ПолучитьМассивСтрокой(МассивКлючевыхСлов);
			Стр.КоличествоКлючевыхСлов = МассивКлючевыхСлов.Количество();
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаЗаполнитьКлючевыеСлова(Команда)
		
	ПараметрыЗапроса = Новый Структура;
	ПараметрыЗапроса.Вставить("ПроизводительОтбор", ПроизводительОтбор); 
	ПараметрыЗапроса.Вставить("ГруппаОтбор", ГруппаОтбор);
	ПараметрыЗапроса.Вставить("ГлобальныйПоискПоАртикулам", ГлобальныйПоискПоАртикулам);
	
	ЗаполнитьКлючевыеСловаСервер(ПараметрыЗапроса);
	
	Элементы.Закладки.ТекущаяСтраница = Элементы.ЗакладкаПоискСоответствий;
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаОбновитьКлючевыеСлова(Элемент)
	
	КомандаЗаполнитьКлючевыеСлова("");
	
КонецПроцедуры


//============================================================================
// ОСНОВНЫЕ МОДУЛИ ПОИСКА

&НаСервереБезКонтекста
Функция ВыполнитьПоискСоответствийПоСтроке(ПараметрыЗапроса)
	
	ТаблицаРезультат = Новый Массив;

	ПоискСОтборомПоИерархии = ПараметрыЗапроса.ПоискСОтборомПоИерархии;     
	ПоискСОтборомПоПроизводителю = ПараметрыЗапроса.ПоискСОтборомПоПроизводителю;  
	ОтборСоответствийПоПроизводителю = ПараметрыЗапроса.ПроизводительОтбор; 
	ОтборСоответствийПоИерархии = ПараметрыЗапроса.ГруппаОтбор;
	ПоискТолькоЦелыеСлова = ПараметрыЗапроса.ПоискТолькоЦелыеСлова;
	
	Запрос = Новый Запрос();
	Запрос.УстановитьПараметр("ВыбГруппаСправочника",ОтборСоответствийПоИерархии);
	Запрос.УстановитьПараметр("ВыбПроизводитель",ОтборСоответствийПоПроизводителю);
	
	КоличествоСлов  = 1;
	КлючевыеСловаСтроки = СокрЛП(ПараметрыЗапроса.КлючевыеСлова);
	
	УсловиеПоискаПоАртикулу = "";
	Если ПараметрыЗапроса.ГлобальныйПоискПоАртикулам Тогда
		СтрУсловиеПоля = "Артикул";
	Иначе
		СтрУсловиеПоля = "Наименование";
	КонецЕсли;
	
	МассивКлючевыхСлов = глРазложитьСтрокуВМассивПодстрок(КлючевыеСловаСтроки," ");
	МассивКлючевыхСлов = глМассивПеревестиСловаВРег(МассивКлючевыхСлов);
	КоличествоКлючевыхСлов = МассивКлючевыхСлов.Количество();
	
	УсловиеПолейВводаПоСтроке = "";	
	Для инд = 0 По КоличествоКлючевыхСлов - 1 Цикл
		СтрКлючевоеСлово = СокрЛП(МассивКлючевыхСлов[инд]);
				
		Если ПараметрыЗапроса.ГлобальныйПоискПоАртикулам Тогда
			УсловиеПолейВводаПоСтроке = УсловиеПолейВводаПоСтроке + " И СпрНоменклатура."+СтрУсловиеПоля+" ПОДОБНО &ПодстрокаПоиска"+Строка(инд);
			
			Запрос.УстановитьПараметр("ПодстрокаПоиска"+Строка(инд),"%"+СтрКлючевоеСлово+"%");
		Иначе	
			УсловиеПолейВводаПоСтроке = УсловиеПолейВводаПоСтроке + " И СпрНоменклатура."+СтрУсловиеПоля+" ПОДОБНО &ПодстрокаПоиска"+Строка(инд);	
			
			Запрос.УстановитьПараметр("ПодстрокаПоиска"+Строка(инд),"%"+СтрКлючевоеСлово+"%");
		КонецЕсли;	
	КонецЦикла;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	СпрНоменклатура.Ссылка КАК Номенклатура,
	|	СпрНоменклатура.Наименование,
	|	СпрНоменклатура.Артикул
	|ИЗ
	|	Справочник.Номенклатура КАК СпрНоменклатура
	|ГДЕ
	|	СпрНоменклатура.ЭтоГруппа = ЛОЖЬ";
	Если ПоискСОтборомПоПроизводителю И ЗначениеЗаполнено(ОтборСоответствийПоПроизводителю) Тогда
		ТекстЗапроса = ТекстЗапроса + " И СпрНоменклатура.Производитель = &ВыбПроизводитель";
	КонецЕсли;
	Если ПоискСОтборомПоИерархии И ЗначениеЗаполнено(ОтборСоответствийПоИерархии) Тогда
		ТекстЗапроса = ТекстЗапроса + " И СпрНоменклатура.Ссылка В ИЕРАРХИИ (&ВыбГруппаСправочника)";
	КонецЕсли;
	Если ПараметрыЗапроса.ГлобальныйПоискПоАртикулам Тогда
		Если НЕ ПараметрыЗапроса.ИскатьАртикулВНаименованииНоменклатуры Тогда
			ТекстЗапроса = ТекстЗапроса + "
			|	И (НЕ СпрНоменклатура.Артикул = """")";
		КонецЕсли;
		ТекстЗапроса = ТекстЗапроса + "
		|  " + УсловиеПолейВводаПоСтроке;		
	Иначе
		ТекстЗапроса = ТекстЗапроса + " 
		|	"+УсловиеПолейВводаПоСтроке; 
	КонецЕсли;
	ТекстЗапроса = ТекстЗапроса + "
	|
	|СГРУППИРОВАТЬ ПО
	|	СпрНоменклатура.Ссылка,
	|	СпрНоменклатура.Наименование,
	|	СпрНоменклатура.Артикул";					
	
	Запрос.Текст = ТекстЗапроса;
	
	ТаблицаПолученногоЗапроса = Новый ТаблицаЗначений;
	ТаблицаПолученногоЗапроса = Запрос.Выполнить().Выгрузить();
	
	Если ТаблицаПолученногоЗапроса.Количество() = 0 Тогда
		Возврат Новый Структура("ТаблицаРезультат",ТаблицаРезультат);
	КонецЕсли;
	
	МаксимальноеСовпадение = Справочники.Номенклатура.ПустаяСсылка();
	МаксимальноСовпадений = 0;
	
	Для Каждого СтрВыборка Из ТаблицаПолученногоЗапроса Цикл
		
		КоличествоСовпаденийСлов = 0;
		
		ВыборкаАртикул      = СтрВыборка.Артикул;
		ВыборкаНаименование = СтрВыборка.Наименование;
		
		Если ПараметрыЗапроса.ГлобальныйПоискПоАртикулам Тогда
			ВыборкаОбработка = ВРег(СокрЛП(ВыборкаАртикул));
		Иначе
			ВыборкаОбработка = ВРег(СокрЛП(ВыборкаНаименование));
		КонецЕсли;
		
		
		Если ПоискТолькоЦелыеСлова Тогда
			ВыборкаМассивКлючевыхСлов = РазложитьСтрокуНаКлючевыеСлова(ВыборкаОбработка);
			ВыборкаКоличествоСлов    = ВыборкаМассивКлючевыхСлов.Количество();
			
			КоличествоСовпаденийСлов = 0;
			Для Каждого ПодстрокаПоиска Из ВыборкаМассивКлючевыхСлов Цикл					
				НомерСовпадения = МассивКлючевыхСлов.Найти(ПодстрокаПоиска);
				Если НЕ НомерСовпадения = Неопределено Тогда				
					КоличествоСовпаденийСлов = КоличествоСовпаденийСлов + 1;
				КонецЕсли;
			КонецЦикла;
		Иначе
			
			КоличествоСовпаденийСлов = 0;
			Для Каждого ПодстрокаПоиска Из МассивКлючевыхСлов Цикл					
				НомерСовпадения = Найти(ВыборкаОбработка,ПодстрокаПоиска);
				Если НомерСовпадения > 0 Тогда
					КоличествоСовпаденийСлов = КоличествоСовпаденийСлов + 1;
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
		
		МаксимальноСовпадений = МАКС(КоличествоСовпаденийСлов,МаксимальноСовпадений);
		
		НоваяСтрока = Новый Структура("Номенклатура, Артикул, КоличествоСовпадений,МаксимальноеСовпадение");
		ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрВыборка);
		Если КоличествоСовпаденийСлов >= КоличествоКлючевыхСлов Тогда
			НоваяСтрока.МаксимальноеСовпадение = СтрВыборка.Номенклатура;
		КонецЕсли;
		
		ТаблицаРезультат.Добавить(НоваяСтрока);				
	КонецЦикла;	

	Возврат Новый Структура("ТаблицаРезультат",ТаблицаРезультат);
	
КонецФункции

&НаСервереБезКонтекста
Функция ВыполнитьПоискВАртикуле1С(ПараметрыЗапроса)
	
	ТаблицаРезультат = Новый Массив;
	
	ПоискСОтборомПоИерархии = ПараметрыЗапроса.ПоискСОтборомПоИерархии;  
	ПоискСОтборомПоПроизводителю = ПараметрыЗапроса.ПоискСОтборомПоПроизводителю;
	ОтборСоответствийПоПроизводителю = ПараметрыЗапроса.ПроизводительОтбор; 
	ОтборСоответствийПоИерархии = ПараметрыЗапроса.ГруппаОтбор;
		
	КоличествоСлов  = 1;
	КлючевыеСловаСтроки = СокрЛП(ПараметрыЗапроса.КлючевыеСлова);
		
	МассивКлючевыхСлов = глРазложитьСтрокуВМассивПодстрок(КлючевыеСловаСтроки," ");
	//МассивКлючевыхСлов = глМассивПеревестиСловаВРег(МассивКлючевыхСлов);
	КоличествоКлючевыхСлов = МассивКлючевыхСлов.Количество();
	
	ЕстьРезультат = Ложь;

	Для Инд = 0 По КоличествоКлючевыхСлов - 1 Цикл				
		Если ЕстьРезультат Тогда
			Продолжить;
		КонецЕсли;
		
		СтрКлючевоеСлово = СокрЛП(МассивКлючевыхСлов[инд]);	
		Если СтрДлина(СтрКлючевоеСлово) < 3 Тогда
			Продолжить;
		КонецЕсли;
		
		ТекстЗапроса = 
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	СпрНоменклатура.Ссылка КАК Номенклатура,
		|	СпрНоменклатура.Наименование,
		|	СпрНоменклатура.Артикул
		|ИЗ
		|	Справочник.Номенклатура КАК СпрНоменклатура
		|ГДЕ
		|	СпрНоменклатура.ЭтоГруппа = ЛОЖЬ
		|	И СпрНоменклатура.Артикул = &ПодстрокаПоиска"+Строка(Инд)+"
		|	И СпрНоменклатура.ПометкаУдаления = ЛОЖЬ";
		Если ПоискСОтборомПоИерархии И ЗначениеЗаполнено(ОтборСоответствийПоИерархии) Тогда
			ТекстЗапроса = ТекстЗапроса + " И СпрНоменклатура.Ссылка В ИЕРАРХИИ (&ВыбГруппаСправочника)";
		КонецЕсли;
		Если ПоискСОтборомПоПроизводителю И ЗначениеЗаполнено(ОтборСоответствийПоПроизводителю) Тогда
			ТекстЗапроса = ТекстЗапроса + " И СпрНоменклатура.Производитель = &ВыбПроизводитель";
		КонецЕсли;
		
		Запрос = Новый Запрос();
		Запрос.Текст = ТекстЗапроса;
		Запрос.УстановитьПараметр("ПодстрокаПоиска"+Строка(Инд),СтрКлючевоеСлово);
		Запрос.УстановитьПараметр("ВыбГруппаСправочника",ОтборСоответствийПоИерархии);
	    Запрос.УстановитьПараметр("ВыбПроизводитель",ОтборСоответствийПоПроизводителю);
		
		РезультатЗапроса = Запрос.Выполнить();
		
		Если НЕ РезультатЗапроса.Пустой() Тогда
			СтрВыборка = РезультатЗапроса.Выбрать();
			Пока СтрВыборка.Следующий() Цикл
				ЕстьРезультат = Истина;

				НоваяСтрока = Новый Структура("Номенклатура, КоличествоСовпадений, МаксимальноеСовпадение");
				ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрВыборка);
				НоваяСтрока.КоличествоСовпадений   = 1;
				НоваяСтрока.МаксимальноеСовпадение = СтрВыборка.Номенклатура;
				
				ТаблицаРезультат.Добавить(НоваяСтрока);			
			КонецЦикла;
		КонецЕсли;	
	КонецЦикла;			

	Возврат Новый Структура("ТаблицаРезультат",ТаблицаРезультат);
		
КонецФункции



&НаСервере
Процедура ТаблицаОпределениеСоответствий(ПараметрыЗапроса)
	
	//ОбработкаОбъект = РеквизитФормыВЗначение("Объект");
	
	Для Каждого Стр Из Объект.ПоискСоответствий Цикл		
		Если ЗначениеЗаполнено(Стр.Номенклатура) Тогда
			Продолжить;
		КОнецЕсли;
		
		Стр.Номенклатура           = Справочники.Номенклатура.ПустаяСсылка();
		Стр.МаксимальноСовпадений  = 0;
		
		КлючевыеСлова = СокрЛП(Стр.КлючевыеСлова);
		Если НЕ ЗначениеЗаполнено(КлючевыеСлова) Тогда
			Продолжить;
		КонецЕсли;	
		
		ПараметрыЗапроса.Вставить("Поле_Наименование", Стр.Поле_Наименование);
		ПараметрыЗапроса.Вставить("Поле_Артикул", Стр.Поле_Артикул);
		ПараметрыЗапроса.Вставить("КлючевыеСлова", Стр.КлючевыеСлова);
		ПараметрыЗапроса.Вставить("ПроизводительОтбор", ?(ЗначениеЗаполнено(Стр.Поле_Производитель),Стр.Поле_Производитель,ПараметрыЗапроса.ПроизводительОтбор)); 
		ПараметрыЗапроса.Вставить("ГруппаОтбор", ?(ЗначениеЗаполнено(Стр.ГруппаСправочника),Стр.ГруппаСправочника,ПараметрыЗапроса.ГруппаОтбор));
		
		Если АртикулРасположенВНаименованииИмпорт Тогда
			СтруктураИнформации = ВыполнитьПоискВАртикуле1С(ПараметрыЗапроса);
		Иначе
			СтруктураИнформации = ВыполнитьПоискСоответствийПоСтроке(ПараметрыЗапроса);
		КонецЕсли;
		
		КоличествоСтрок = СтруктураИнформации.ТаблицаРезультат.Количество();
		Если КоличествоСтрок > 0 Тогда
			Для Каждого СтрРез Из СтруктураИнформации.ТаблицаРезультат Цикл
				Если ЗначениеЗаполнено(СтрРез.МаксимальноеСовпадение) Тогда
					Стр.Номенклатура = СтрРез.МаксимальноеСовпадение;
				КонецЕсли;
			КонецЦикла;	
		КонецЕсли;
		Стр.КоличествоСоответствий = КоличествоСтрок; 
	КонецЦикла;
	
	//Объект.ПоискСоответствий.Сортировать("КоличествоСоответствий Убыв");
	
	//ЗначениеВРеквизитФормы(ОбработкаОбъект, "Объект");
	
КонецПроцедуры

&НаКлиенте
Процедура ПоискСоответствийВыполнитьАнализСоответствий(Команда)
	
	ПараметрыЗапроса = Новый Структура;
	ПараметрыЗапроса.Вставить("ПроизводительОтбор", ПроизводительОтбор); 
	ПараметрыЗапроса.Вставить("ГруппаОтбор", ГруппаОтбор);
	ПараметрыЗапроса.Вставить("ПоискСОтборомПоИерархии", ПоискСОтборомПоИерархии);
	ПараметрыЗапроса.Вставить("ПоискСОтборомПоПроизводителю", ПоискСОтборомПоПроизводителю);
	ПараметрыЗапроса.Вставить("ПоискТолькоЦелыеСлова", ПоискТолькоЦелыеСлова);
	ПараметрыЗапроса.Вставить("ГлобальныйПоискПоАртикулам", ГлобальныйПоискПоАртикулам);
	ПараметрыЗапроса.Вставить("ИскатьАртикулВНаименованииНоменклатуры", Объект.ИскатьАртикулВНаименованииНоменклатуры);

	ТаблицаОпределениеСоответствий(ПараметрыЗапроса);
	
КонецПроцедуры


//============================================================================
// СПИСКИ

&НаКлиенте
Процедура ИнформацияПолучитьСоответствияСтроки(ПараметрыЗапроса)
		
	Если АртикулРасположенВНаименованииИмпорт Тогда
		СтруктураИнформации = ВыполнитьПоискВАртикуле1С(ПараметрыЗапроса);
	Иначе                                   
		СтруктураИнформации = ВыполнитьПоискСоответствийПоСтроке(ПараметрыЗапроса);
	КонецЕсли;
		
	Для Каждого СтрРез Из СтруктураИнформации.ТаблицаРезультат Цикл
		НовСтр = ПодборСоответствий.Добавить();
		ЗаполнитьЗначенияСвойств(НовСтр,СтрРез);
	КонецЦикла;
	
	ПодборСоответствий.Сортировать("КоличествоСовпадений УБЫВ");

КонецПроцедуры

&НаКлиенте
Процедура ПоискСоответствийПриАктивизацииСтроки(Элемент)
	
	ТекущиеДанные = Элементы.ТаблицаСоответствий.ТекущиеДанные;	
	Если ТекущиеДанные = Неопределено Тогда	
		Возврат;
	КонецЕсли;
	
	ПодборСоответствий.Очистить();
	
	Если НЕ ЗначениеЗаполнено(ТекущиеДанные.КлючевыеСлова) Тогда
		Возврат;
	КонецЕсли;
	
	ТекущиеДанные.КлючевыеСлова = ВРег(ТекущиеДанные.КлючевыеСлова);
	
	ПараметрыЗапроса = Новый Структура;
	ПараметрыЗапроса.Вставить("ИскатьАртикулВНаименованииНоменклатуры", Объект.ИскатьАртикулВНаименованииНоменклатуры);
	ПараметрыЗапроса.Вставить("ГлобальныйПоискПоАртикулам", ГлобальныйПоискПоАртикулам);
	ПараметрыЗапроса.Вставить("ПоискСОтборомПоИерархии", ПоискСОтборомПоИерархии);
	ПараметрыЗапроса.Вставить("ПоискСОтборомПоПроизводителю", ПоискСОтборомПоПроизводителю);
	ПараметрыЗапроса.Вставить("Поле_Наименование", ТекущиеДанные.Поле_Наименование);
	ПараметрыЗапроса.Вставить("Поле_Артикул", ТекущиеДанные.Поле_Артикул);
	ПараметрыЗапроса.Вставить("КлючевыеСлова", ТекущиеДанные.КлючевыеСлова);
	ПараметрыЗапроса.Вставить("ПроизводительОтбор", ?(ЗначениеЗаполнено(ТекущиеДанные.Поле_Производитель),ТекущиеДанные.Поле_Производитель,ПроизводительОтбор)); 
	ПараметрыЗапроса.Вставить("ГруппаОтбор", ГруппаОтбор);
	ПараметрыЗапроса.Вставить("ПоискТолькоЦелыеСлова", ПоискТолькоЦелыеСлова);
	
	ИнформацияПолучитьСоответствияСтроки(ПараметрыЗапроса);

КонецПроцедуры

&НаКлиенте
Процедура СоответствияВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Номенклатура = Элементы.ПодборСоответствий.ТекущиеДанные.Номенклатура;
	
	Элементы.ТаблицаСоответствий.ТекущиеДанные.Номенклатура = Номенклатура;
	
	//Для Каждого Строка Из Элементы.ТаблицаСоответствий.ВыделенныеСтроки Цикл
	//	СтрокаСоотв = Объект.ПоискСоответствий.Получить(Строка);
	//	СтрокаСоотв.Номенклатура = Номенклатура;
	//КонецЦикла;

КонецПроцедуры



//============================================================================
// ОБРАБОТКА

&НаСервере
Функция ПоместитьВоВременноеХранилищеНаСервере()
	
	СтруктураПараметров = Новый Структура;
	СтруктураПараметров.Вставить("ПоискСоответствий",Объект.ПоискСоответствий.Выгрузить());

	Возврат ПоместитьВоВременноеХранилище(СтруктураПараметров, Новый УникальныйИдентификатор);
	
КонецФункции

&НаКлиенте
Процедура ПоискСоответствийЗаполнитьИЗакрыть(Команда)
	
	СтруктураПараметров = Новый Структура;
	СтруктураПараметров.Вставить("Адрес",ПоместитьВоВременноеХранилищеНаСервере());
	
	ЗакрытьОбработку = Истина;
	Закрыть(СтруктураПараметров);
	
КонецПроцедуры



//============================================================================
// АЛГОРИТМЫ ОБРАБОТКИ  

&НаСервере
Функция ВыполнитьОбработкуАлгоритмыКлючевыхСлов(Знач Значение)
	
	Если Объект.АлгоритмыКлючевыхСлов.Количество() = 0 Тогда
		Возврат Значение;
	КОнецЕсли;
	
	// найти значение представления для поля
	ЗначениеИсходное = Значение;
	
	Для Каждого Выборка Из Объект.АлгоритмыКлючевыхСлов Цикл
		
		ТекстАлгоритма = Выборка.Алгоритм.ТекстАлгоритма;
		Если ПустаяСтрока(ТекстАлгоритма) Тогда
			Возврат Значение;
		КонецЕсли;

		Попытка
			//Значение = Вычислить(ТекАлгоритм.ТекстАлгоритма);
			Выполнить(ТекстАлгоритма);
		Исключение
			Сообщить("Ошибка Алгоритм["+Выборка.НомерСтроки+"] Значение=["+ЗначениеИсходное+"]: "+ОписаниеОшибки());
		КонецПопытки;
	КонецЦИкла;
	
	Возврат Значение;
	
КонецФункции

&НаКлиенте
Процедура ТаблицаСоответствийПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	
	ПоискСоответствийПриАктивизацииСтроки(Элемент);
	
КонецПроцедуры

//============================================================================
// ЗАПИСАТЬ СООТВЕТСТВИЯ

&НаСервере
Процедура ЗаписатьСоответствияСервер()
	
	РеквизитФормыВЗначение("Объект").мЗаписатьСоответствияНоменклатуры(Объект.ПоискСоответствий);
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаЗаписатьСоответствия(Команда)
	
	Если НЕ ЗначениеЗаполнено(Объект.Партнер) Тогда
		Сообщить("Не указан Партнер!");
		Возврат;
	КонецЕсли;

	ЗаписатьСоответствияСервер();
	
	Состояние("Обработка завершена");

КонецПроцедуры

 &НаСервере
 Процедура АвтосохранениеНастройкиМегапрайсаСервер()
	 	 
	 ПрайсОбъект = Объект.ПрайсПартнера.ПолучитьОбъект();
	 	 
	 ПрайсОбъект.АлгоритмыКлючевыхСлов.Загрузить(Объект.АлгоритмыКлючевыхСлов.Выгрузить());
	 ПрайсОбъект.ЗаменаКлючевыхСлов.Загрузить(Объект.ЗаменаКлючевыхСлов.Выгрузить());
	 
	 ПрайсОбъект.Записать();
	 
 КонецПроцедуры
 
 &НаКлиенте
 Процедура АвтосохранениеНастройкиПрайса(Команда)
	 
	 Если НЕ ЗначениеЗаполнено(Объект.ПрайсПартнера) Тогда
		 Состояние("Не выбран профиль прайса");
		 Возврат;
	 КонецЕсли;

	 АвтосохранениеНастройкиМегапрайсаСервер();
	 Состояние("Выполнено");
	 
 КонецПроцедуры

 &НаСервере
 Процедура Справочники_СоздатьНоменклатуруПоставщикаСервер(Изменить=Ложь)
	 
	 УстановитьПривилегированныйРежим(Истина);
	 
	 ОбработкаОбъект = РеквизитФормыВЗначение("Объект");
	 
	 СтруктураПараметров = Новый Структура;
	 СтруктураПараметров.Вставить("Партнер",Объект.Партнер); 
	 ОбработкаОбъект.Справочники_СоздатьНоменклатуруПоставщика(СтруктураПараметров,Объект.ТабличнаяЧасть,Изменить);	 
	 
 КонецПроцедуры
 
  &НаКлиенте
 Процедура Справочники_СоздатьНоменклатуруПоставщикаКнопка(Команда)
	 
	 Если НЕ ЗначениеЗаполнено(Объект.Партнер) Тогда
		 Сообщить("Не указан Партнер!");
		 Возврат;
	 КонецЕсли;
	 
	 ПоказатьВопрос(Новый ОписаниеОповещения("Справочники_СоздатьНоменклатуруПоставщикаЗавершение", ЭтотОбъект), НСтр("ru = 'Выберите действие со справочником Номенклатура поставщиков.
	 |Да - создать новые и обновить всю номенклатуру поставщика.
	 |Нет - только создать новые элементы.
	 |Отмена - отменить команду.'"), РежимДиалогаВопрос.ДаНетОтмена);
	 
 КонецПроцедуры
 
 &НаКлиенте
 Процедура Справочники_СоздатьНоменклатуруПоставщикаЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
	 
	 Если РезультатВопроса = КодВозвратаДиалога.Отмена Тогда
		 Возврат;
	 КонецЕсли;	
	 
	 Если РезультатВопроса = КодВозвратаДиалога.Да Тогда
		 Справочники_СоздатьНоменклатуруПоставщикаСервер(Истина);
	 ИначеЕсли РезультатВопроса =  КодВозвратаДиалога.Нет Тогда
		 Справочники_СоздатьНоменклатуруПоставщикаСервер();
	 КонецЕсли;
	 
 КонецПроцедуры
 
 
 


 &НаКлиенте
 Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	 
	 Если НЕ ЗакрытьОбработку Тогда
		 Отказ = Истина;
		 ПоказатьВопрос(Новый ОписаниеОповещения("ПередЗакрытиемЗавершение", ЭтотОбъект), НСтр("ru = 'Работа будет завершена, все введенные данные будут потеряны. Закрыть?'"), РежимДиалогаВопрос.ДаНет);
	 КонецЕсли;
	 
 КонецПроцедуры
 
 &НаКлиенте
 Процедура ПередЗакрытиемЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
	 
	 Если РезультатВопроса = КодВозвратаДиалога.Да Тогда
		 ЗакрытьОбработку = Истина;
		 Закрыть();
	 КонецЕсли;
	 
 КонецПроцедуры

  ЗакрытьОбработку = Ложь;

