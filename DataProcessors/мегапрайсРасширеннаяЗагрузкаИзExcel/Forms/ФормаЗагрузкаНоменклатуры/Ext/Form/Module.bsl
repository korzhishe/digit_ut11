&НаКлиенте
Перем ЕстьЕдиница;
&НаКлиенте
Перем ЕстьАртикул;

//============================================================================
// ФОРМА

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	УстановитьПривилегированныйРежим(Истина);
	
	СтруктураПараметров = ПолучитьИзВременногоХранилища(Параметры.Адрес);
	АдресВХранилище = Параметры.Адрес;
	
	Объект.мегапрайсКонтрольАртикулаИНаименования          = СтруктураПараметров.мегапрайсКонтрольАртикулаИНаименования;
	Объект.мегапрайсСоздаватьШтрихкодыДляНовойНоменклатуры = СтруктураПараметров.мегапрайсСоздаватьШтрихкодыДляНовойНоменклатуры;
	
	Объект.Производитель = СтруктураПараметров.Производитель;
	Объект.ОбработкаНоменклатуры.Очистить();
	
	ПустойВид = Справочники.ВидыНоменклатуры.ПустаяСсылка();
	ПустаяЦеноваяГруппа = Справочники.ЦеновыеГруппы.ПустаяСсылка();

	Для Каждого Строка из СтруктураПараметров.ТабличнаяЧасть Цикл
		
		Если ПустаяСтрока(Строка.Поле_Наименование) Тогда
			Продолжить;
		КонецЕсли;
		
		Если ЗначениеЗаполнено(Строка.Номенклатура) Тогда
			Продолжить;
		КонецЕсли;
		
		Если Строка.ЭтоГруппа Тогда
			Продолжить;
		КонецЕсли;
		
		НоваяСтрока = Объект.ОбработкаНоменклатуры.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока,Строка);
				
		Если ЗначениеЗаполнено(Строка.ВидНоменклатуры) Тогда
			НайтиВидНоменклатуры = Справочники.ВидыНоменклатуры.НайтиПоНаименованию(Строка.ВидНоменклатуры);
			
			НоваяСтрока.ВидНоменклатурыСсылка = НайтиВидНоменклатуры;
			
			Если НайтиВидНоменклатуры = ПустойВид Тогда
				Сообщить("Не найден вид номенклатуры");
			КонецЕсли;
		КонецЕсли;
		
		Если ЗначениеЗаполнено(Строка.ЦеноваяГруппа) Тогда
			НайтиЦеноваяГруппа = Справочники.ЦеновыеГруппы.НайтиПоНаименованию(Строка.ЦеноваяГруппа);
			
			НоваяСтрока.обЦеноваяГруппа = НайтиЦеноваяГруппа;
			
			Если НайтиЦеноваяГруппа = ПустаяЦеноваяГруппа Тогда
				Сообщить("Не найден вид номенклатуры");
			КонецЕсли;
		КонецЕсли;

	КонецЦикла;
	
	Объект.ВестиУчетПоГТД = Истина;
	Объект.НовыйСтавкаНДС = Перечисления.СтавкиНДС.БезНДС;
	Объект.НаборУпаковок  = Справочники.НаборыУпаковок.ИндивидуальныйДляНоменклатуры;
	
	Если Константы.ИспользоватьУпаковкиНоменклатуры.Получить() Тогда
		Объект.СоздаватьУпаковки = Истина;
	КонецЕсли;
	
	ДлинаНаименованияСправочникаНоменклатура = Метаданные.Справочники.Номенклатура.ДлинаНаименования;

	Для Каждого Стр Из Объект.ОбработкаНоменклатуры Цикл
		
		Если СтрДлина(СокрЛП(Стр.Поле_Наименование)) > ДлинаНаименованияСправочникаНоменклатура Тогда
			Сообщить(""+Стр.НомерСтроки+"   Наименование больше "+ДлинаНаименованияСправочникаНоменклатура+" Внимание! При создании наименование будет обрезано!");
			
			//НаименованиеДляПоиска = Лев(НаименованиеДляПоиска,ДлинаНаименованияСправочникаНоменклатура);
		КонецЕсли;
	КонецЦикла;

КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ЕстьЕдиница = Ложь;
	ЕстьАртикул = Ложь;

	АвтоопределениеВидимостиКолонокТаблицы();
	
КонецПроцедуры

&НаКлиенте
Процедура АвтоопределениеВидимостиКолонокТаблицы()
	
	Элементы.Поле_ШтрихКод.Видимость = Ложь;
	Элементы.Поле_Артикул.Видимость = Ложь;
	Элементы.Поле_НаименованиеПолное.Видимость = Ложь;
	
	КолСчитанных = 0;

	Для Каждого Стр Из Объект.ОбработкаНоменклатуры Цикл
		Если ЗначениеЗаполнено(Стр.Поле_ШтрихКод) Тогда
			Элементы.Поле_ШтрихКод.Видимость = Истина;
		КонецЕсли;

		Если ЗначениеЗаполнено(Стр.Поле_Артикул) Тогда
			Элементы.Поле_Артикул.Видимость = Истина;
			ЕстьАртикул = Истина;
		КонецЕсли;
	
		Если ЗначениеЗаполнено(Стр.Поле_НаименованиеПолное) Тогда
			Элементы.Поле_НаименованиеПолное.Видимость = Истина;
		КонецЕсли;
		
		Если ЗначениеЗаполнено(Стр.ЕдиницаИзмеренияСсылка) Тогда
			ЕстьЕдиница = Истина;
		КонецЕсли;
				
		Если КолСчитанных = 10 Тогда
			Прервать;
		КонецЕсли;

	КонецЦикла;

КонецПроцедуры

&НаСервере
Функция ПоместитьВоВременноеХранилищеНаСервере()
	
	Возврат ПоместитьВоВременноеХранилище(Объект.ОбработкаНоменклатуры.Выгрузить(),Новый УникальныйИдентификатор);
	
КонецФункции

//============================================================================
// КОМАНДЫ

&НаСервере
Процедура СоздатьНовуюНоменклатуруСервер()
	
	УстановитьПривилегированныйРежим(Истина);
	
	НачатьТранзакцию();
	КоличествоОбработанных = 0;

	Для Каждого Стр Из Объект.ОбработкаНоменклатуры Цикл	
		
		Если Стр.ЭтоГруппа Тогда
			Продолжить;
		КонецЕсли;
		
		КоличествоОбработанных = КоличествоОбработанных + 1;
		
		СоздатьНоменклатуру = Ложь;
		НайденнаяСсылка = Справочники.Номенклатура.ПустаяСсылка();
		
		КонтрольПоКодуНоменклатуры = Ложь;
		Если ЗначениеЗаполнено(Стр.Поле_Код) Тогда
			КонтрольПоКодуНоменклатуры = Истина;
		КонецЕсли;
		
		Если КонтрольПоКодуНоменклатуры Тогда
			
			НайденнаяСсылка = Справочники.Номенклатура.НайтиПоКоду(СокрЛП(Стр.Поле_Код));

		ИначеЕсли Объект.мегапрайсКонтрольАртикулаИНаименования Тогда	
			
			ТекстЗапроса =
			"ВЫБРАТЬ  ПЕРВЫЕ 1
			|	СпрНоменклатура.Ссылка
			|ИЗ
			|	Справочник.Номенклатура КАК СпрНоменклатура
			|ГДЕ
			|	СпрНоменклатура.Артикул = &Поле_Артикул
			|	И СпрНоменклатура.Наименование = &НаименованиеДляПоиска
			|	И СпрНоменклатура.ЭтоГруппа = ЛОЖЬ
			|	И СпрНоменклатура.ПометкаУдаления = ЛОЖЬ";
			Если ЗначениеЗаполнено(Стр.Поле_Артикул) Тогда
				ТекстЗапроса = ТекстЗапроса +"
				|	И СпрНоменклатура.Артикул = &Поле_Артикул";			
			КонецЕсли;
			
			Запрос = Новый Запрос();
			Запрос.Текст = ТекстЗапроса;
			Запрос.УстановитьПараметр("Поле_Артикул", Стр.Поле_Артикул);
			Запрос.УстановитьПараметр("НаименованиеДляПоиска", СокрЛП(Стр.Поле_Наименование));
			РезультатЗапроса = Запрос.Выполнить();
			
			Если НЕ РезультатЗапроса.Пустой() Тогда
				Выборка = РезультатЗапроса.Выбрать();
				Пока Выборка.Следующий() Цикл
					НайденнаяСсылка = Выборка.Ссылка;
				КонецЦикла;
			КонецЕсли;						
		КонецЕсли;
				
		Если НайденнаяСсылка = Справочники.Номенклатура.ПустаяСсылка() Тогда
			СоздатьНоменклатуру = Истина;
		Иначе
			Стр.Номенклатура = НайденнаяСсылка.Ссылка;
		КонецЕсли;
		
		Если ЗначениеЗаполнено(Стр.Номенклатура) Тогда
			СоздатьНоменклатуру = Ложь; //однозначно нельзя создавать
		КонецЕсли;
		
		Если СоздатьНоменклатуру Тогда
			НоваяНоменклатура = Справочники.Номенклатура.СоздатьЭлемент();
			
			НоваяНоменклатура.СтавкаНДС          = ?(ЗначениеЗаполнено(Стр.СтавкаНДС),Стр.СтавкаНДС,Объект.НовыйСтавкаНДС);
			
			НоваяНоменклатура.Наименование       = Стр.Поле_Наименование;
			НоваяНоменклатура.НаименованиеПолное = ?(ПустаяСтрока(Стр.Поле_НаименованиеПолное),Стр.Поле_Наименование,Стр.Поле_НаименованиеПолное);
			
			Если ЗначениеЗаполнено(Стр.ВидНоменклатурыСсылка) Тогда
				НоваяНоменклатура.ВидНоменклатуры    = Стр.ВидНоменклатурыСсылка;			
				НоваяНоменклатура.ТипНоменклатуры    = Стр.ВидНоменклатурыСсылка.ТипНоменклатуры;
			Иначе
				НоваяНоменклатура.ВидНоменклатуры    = Объект.НовыйВидНоменклатуры;
				НоваяНоменклатура.ТипНоменклатуры    = Объект.НовыйВидНоменклатуры.ТипНоменклатуры;
			КонецЕсли;
			
			Если ЗначениеЗаполнено(Стр.обЦеноваяГруппа) Тогда
				НоваяНоменклатура.ЦеноваяГруппа = Стр.обЦеноваяГруппа;			
			Иначе
				НоваяНоменклатура.ЦеноваяГруппа = Объект.НовыйЦеноваяГруппа;
			КонецЕсли;

			Если ЗначениеЗаполнено(Стр.ЕдиницаИзмеренияСсылка) Тогда
				НоваяНоменклатура.ЕдиницаИзмерения = Стр.ЕдиницаИзмеренияСсылка;
			Иначе
				НоваяНоменклатура.ЕдиницаИзмерения = Объект.НовыйЕдиницаИзмерения;
			КонецЕсли;
			
			Если ЗначениеЗаполнено(Стр.ПроизводительСсылка) Тогда
				НоваяНоменклатура.Производитель = Стр.ПроизводительСсылка;
			ИначеЕсли ЗначениеЗаполнено(Объект.Производитель) Тогда
				НоваяНоменклатура.Производитель = Объект.Производитель;				
			КонецЕсли;
			
			НоваяНоменклатура.ВариантОформленияПродажи = Перечисления.ВариантыОформленияПродажи.РеализацияТоваровУслуг;
			НоваяНоменклатура.Качество           = Перечисления.ГрадацииКачества.Новый;
			НоваяНоменклатура.НаборУпаковок      = Объект.НаборУпаковок;
			НоваяНоменклатура.СкладскаяГруппа    = Объект.НовыйСкладскаяГруппа;
			НоваяНоменклатура.ГруппаДоступа      = Объект.НовыйГруппаДоступа;
			НоваяНоменклатура.Вес                = Стр.Вес;
			
			Если ЗначениеЗаполнено(Стр.Описание) Тогда
				НоваяНоменклатура.Описание    = СокрЛП(Стр.Описание);
			КонецЕсли;
			
			НоваяНоменклатура.ВестиУчетПоГТД  = Объект.ВестиУчетПоГТД;
			
			Если НЕ ПустаяСтрока(Стр.Поле_Артикул) Тогда
				НоваяНоменклатура.Артикул = Стр.Поле_Артикул;
			КонецЕсли;
			
			Если ЗначениеЗаполнено(Стр.ГруппаСправочника) Тогда
				НоваяНоменклатура.Родитель = Стр.ГруппаСправочника;		
			КонецЕсли;
			
			//Попытка
				НоваяНоменклатура.Записать();
			//Исключение
			//	Сообщить(ОписаниеОшибки());
			//КонецПопытки;
			
			//Принудительно ставим код. Тк в типовой стоит обработчик установки нового кода при записи нового. Приходится это обходить только двойной записью.
			Если ЗначениеЗаполнено(Стр.Поле_Код) Тогда
				НоваяНоменклатура.Код = СокрЛП(Стр.Поле_Код);
				//НоваяНоменклатура.КодДляПоиска = СокрЛП(Стр.Поле_Код);
				НоваяНоменклатура.Записать();
			КонецЕсли;
			
			НайденнаяСсылка = НоваяНоменклатура.Ссылка;
		КонецЕсли;
		
		Если НайденнаяСсылка = Справочники.Номенклатура.ПустаяСсылка() Тогда
			Сообщить("Номенклатура не создана");
			Продолжить;
		КонецЕсли;
		
		Стр.Номенклатура = НайденнаяСсылка.Ссылка;		
		
		Если Объект.СоздаватьУпаковки Тогда
			Если НайденнаяСсылка.НаборУпаковок = Справочники.НаборыУпаковок.ИндивидуальныйДляНоменклатуры Тогда
				НоваяУпаковка = Справочники.УпаковкиНоменклатуры.СоздатьЭлемент();
				НоваяУпаковка.Владелец = НайденнаяСсылка.Ссылка;
				НоваяУпаковка.Наименование = НоваяНоменклатура.ЕдиницаИзмерения;
				НоваяУпаковка.ЕдиницаИзмерения = НоваяНоменклатура.ЕдиницаИзмерения;
				НоваяУпаковка.Коэффициент = 1;
				НоваяУпаковка.Вес = Стр.Вес;
				НоваяУпаковка.Записать();
				
				Стр.Упаковка = НоваяУпаковка.Ссылка;
			КонецЕсли;
		КонецЕсли;
		
		Если Объект.мегапрайсСоздаватьШтрихкодыДляНовойНоменклатуры Тогда
			ТекЗаписьШтрихкода = РегистрыСведений.ШтрихкодыНоменклатуры.СоздатьМенеджерЗаписи();
			
			ТекЗаписьШтрихкода.Номенклатура = Стр.Номенклатура;
			ТекЗаписьШтрихкода.Штрихкод     = РегистрыСведений.ШтрихкодыНоменклатуры.СформироватьШтрихкодEAN13(РегистрыСведений.ШтрихкодыНоменклатуры.ПрефиксШтучногоТовара());
			
			Попытка
				ТекЗаписьШтрихкода.Записать();
			Исключение
				Сообщить(ОписаниеОшибки());
			КонецПопытки;
		КОнецЕсли;

		Если КоличествоОбработанных = 100 Тогда
			
			// промежуточную транзакцию закрываем и открываем новую
			ЗафиксироватьТранзакцию();
			НачатьТранзакцию();
			
			КоличествоОбработанных = 0;
		КонецЕсли;

	КонецЦикла;	

	ЗафиксироватьТранзакцию();

КонецПроцедуры

&НаКлиенте
Процедура СоздатьНовуюНоменклатуру(Команда)
	
	Отказ = Ложь;
	Если НЕ ЗначениеЗаполнено(Объект.НовыйВидНоменклатуры) Тогда
		Сообщить("Не указан Вид номенклатуры. Заполните");
		Отказ = Истина;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Объект.НовыйЕдиницаИзмерения) Тогда
		Сообщить("Не указана Единица измерения! Но приоритет единица по строке, если не указана в строке берется общая.");
		Отказ = Истина;
	КонецЕсли;
		
	Если Отказ Тогда
		Сообщить("Значение по умолчанию обязательны для заполнения, если даже данные присутствуют в строках.");
		Возврат;
	КонецЕсли;

	#Если Клиент Тогда
	Ответ = Вопрос("Создать новую номенклатуру ? Номенклатура будет введена по пустым строкам", РежимДиалогаВопрос.ДаНет, ,КодВозвратаДиалога.Нет, "Дополнительный вопрос");		
	Если Ответ <> КодВозвратаДиалога.Да Тогда
		Возврат;
	КонецЕсли;
	#КонецЕсли
	
	СоздатьНовуюНоменклатуруСервер();
	
	Закрыть(ПоместитьВоВременноеХранилищеНаСервере());
	
КонецПроцедуры

//============================================================================
// УСТАНОВКА РЕКВИЗИТОВ

&НаКлиенте
Процедура ИерархияУстановитьГруппуПоВыделеннымСтрокам(Команда)
	
	Для Каждого Строка Из Элементы.ОбработкаНоменклатуры.ВыделенныеСтроки Цикл
		СтрокаСоотв = Объект.ОбработкаНоменклатуры.Получить(Строка);
		СтрокаСоотв.ГруппаСправочника = Объект.УстановитьГруппу;
	КонецЦикла;

	
КонецПроцедуры

&НаКлиенте
Процедура ИерархияУстановитьНаВсеСтроки(Команда)
	
	Для Каждого Стр Из Объект.ОбработкаНоменклатуры Цикл
		Стр.ГруппаСправочника = Объект.УстановитьГруппу;						
	КонецЦикла;

КонецПроцедуры

&НаКлиенте
Процедура ИерархияПроставитьГруппыПоДиапазонам(Команда)
	
	Для Каждого Стр Из Объект.ОбработкаНоменклатуры Цикл
		Для Каждого СтрУстГр Из УстановкаГруппПоСтрокам Цикл
			Если СтрУстГр.СоСтроки = 0 ИЛИ СтрУстГр.ПоСтроку = 0 Тогда
				Продолжить;
			КОнецЕсли;
			
			Если Стр.НомерСтроки >= СтрУстГр.СоСтроки И Стр.НомерСтроки <= СтрУстГр.ПоСтроку Тогда
				Стр.ГруппаСправочника = СтрУстГр.Группа;						
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
КонецПроцедуры


&НаКлиенте
Процедура УстановитьВидНоменклатурыПоВыделеннымСтрокам(Команда)
	
	Для Каждого Строка Из Элементы.ОбработкаНоменклатуры.ВыделенныеСтроки Цикл
		СтрокаСоотв = Объект.ОбработкаНоменклатуры.Получить(Строка);
		СтрокаСоотв.ВидНоменклатурыСсылка = УстановитьВидНоменклатуры;
	КонецЦикла;

КонецПроцедуры


&НаКлиенте
Процедура ПроставитьВиды(Команда)
	
	Для Каждого Стр Из Объект.ОбработкаНоменклатуры Цикл
		Для Каждого СтрУстГр Из УстановкаВидовНоменклатуры Цикл
			Если СтрУстГр.СоСтроки = 0 ИЛИ СтрУстГр.ПоСтроку = 0 Тогда
				Продолжить;
			КОнецЕсли;
			
			Если Стр.НомерСтроки >= СтрУстГр.СоСтроки И Стр.НомерСтроки <= СтрУстГр.ПоСтроку Тогда
				Стр.ВидНоменклатурыСсылка = СтрУстГр.ВидНоменклатуры;						
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьГруппуПриИзменении(Элемент)
	
КонецПроцедуры

&НаКлиенте
Процедура НовыйВидНоменклатурыПриИзменении(Элемент)
	
	Для Каждого Стр Из Объект.ОбработкаНоменклатуры Цикл
		Если ЗначениеЗаполнено(Стр.ВидНоменклатурыСсылка) Тогда
			Продолжить;
		КонецЕсли;
		
		Стр.ВидНоменклатурыСсылка = Объект.НовыйВидНоменклатуры;						
	КонецЦикла;

КонецПроцедуры

&НаКлиенте
Процедура НовыйЦеноваяГруппаПриИзменении(Элемент)
	
	Для Каждого Стр Из Объект.ОбработкаНоменклатуры Цикл
		Стр.обЦеноваяГруппа = Объект.НовыйЦеноваяГруппа;						
	КонецЦикла;

КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, СтандартнаяОбработка)
	
	//#Если Клиент Тогда
	//	Ответ = Вопрос("Вы хотите закрыть обработку?", РежимДиалогаВопрос.ДаНет, ,КодВозвратаДиалога.Да, "Дополнительный вопрос");		
	//	Если Ответ <> КодВозвратаДиалога.Да Тогда
	//		Отказ = Истина;
	//	КонецЕсли;
	//#КонецЕсли

КонецПроцедуры







