
//============================================================================
// АВТОР

&НаКлиенте
Процедура SubSysSkype(Команда)
	
	ЗапуститьПриложение("skype:shekineugeniy?chat");
	
КонецПроцедуры

&НаКлиенте
Процедура SubSysОставитьОтзыв(Команда)
	
	ЗапуститьПриложение("http://subsystems.ru/forum/?PAGE_NAME=read&FID=5&TID=54");
	
КонецПроцедуры

&НаКлиенте
Процедура SubSysПерейтиНаСайтРазработчика(Команда)
	
	ЗапуститьПриложение("http://subsystems.ru/");
	
КонецПроцедуры

&НаКлиенте
Процедура SubSysПроверитьОбновления(Команда)
	
	ЗапуститьПриложение("http://subsystems.ru/forum/?PAGE_NAME=read&FID=7&TID=28");
	
КонецПроцедуры

&НаКлиенте
Процедура СкачатьМарафетНажатие(Элемент)
	
	ЗапуститьПриложение("http://subsystems.ru/catalog/41/586/");
	
КонецПроцедуры



&НаКлиенте
Процедура ВидеоОбзор(Команда)
	
	ЗапуститьПриложение("https://www.youtube.com/watch?v=QO39ZelcqQ8&t=1788s");
	
КонецПроцедуры

//============================================================================
// СЛУЖЕБНЫЕ

&НаСервереБезКонтекста
Функция глРазложитьСтрокуВМассивПодстрок(Знач Стр, Разделитель = " ") Экспорт

	МассивСтрок = Новый Массив();
	Если Разделитель = " " Тогда
		Стр = СокрЛП(Стр);
		Пока 1 = 1 Цикл
			Поз = Найти(Стр,Разделитель);
			
			Если Поз = 0 Тогда
				СтрокаВМассив = СокрЛП(Стр);

				МассивСтрок.Добавить(СтрокаВМассив);
				Возврат МассивСтрок;
			КонецЕсли;
			
			СтрокаВМассив = СокрЛП(Лев(Стр,Поз-1));
			
			МассивСтрок.Добавить(СтрокаВМассив);
			Стр = СокрЛ(Сред(Стр,Поз));
		КонецЦикла;
	Иначе
		ДлинаРазделителя = СтрДлина(Разделитель);
		Пока 1 = 1 Цикл
			Поз = Найти(Стр,Разделитель);
			
			Если Поз = 0 Тогда
				СтрокаВМассив = СокрЛП(Стр);

				МассивСтрок.Добавить(СтрокаВМассив);
				Возврат МассивСтрок;
			КонецЕсли;
			
			СтрокаВМассив = СокрЛП(Лев(Стр,Поз-1));

			МассивСтрок.Добавить(СтрокаВМассив);
			Стр = Сред(Стр,Поз+ДлинаРазделителя);
		КонецЦикла;
	КонецЕсли;
	
КонецФункции 

&НаСервереБезКонтекста
Функция ПеревестиВРег(МассивСлов) Экспорт
	
	НовыйМассив = Новый Массив; 
	
	Для Каждого Стр Из МассивСлов Цикл
		НовыйМассив.Добавить(ВРег(СокрЛП(Стр)));
	КонецЦикла;
	
	Возврат НовыйМассив; 
	
КонецФункции

&НаСервереБезКонтекста
Функция ПолучитьМассивСтрокой(МассивРезультат)
	
	Результат = "";
	
	Для Каждого Строка Из МассивРезультат Цикл		
		Результат = Результат+" "+Строка; 
	КонецЦикла;	
	
	Возврат Результат;
	
КонецФункции

&НаСервереБезКонтекста
Функция глМассивПеревестиСловаВРег(МассивСлов) Экспорт
	
	НовыйМассив = Новый Массив; 
	
	Для Каждого Стр Из МассивСлов Цикл
		НовыйМассив.Добавить(ВРег(СокрЛП(Стр)));
	КонецЦикла;
	
	Возврат НовыйМассив; 
	
КонецФункции


//============================================================================
// 


&НаКлиенте
Процедура ВыборПериода(Команда)
	
	ПараметрыВыбора = Новый Структура("НачалоПериода,КонецПериода", Объект.НачалоПериода, Объект.КонецПериода);
	ОписаниеОповещения = Новый ОписаниеОповещения("ВыбратьПериодЗавершение", ЭтотОбъект);
	ОткрытьФорму("ОбщаяФорма.ВыборСтандартногоПериода", ПараметрыВыбора, Элементы.ВыбратьПериод, , , , ОписаниеОповещения);
	
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьПериодЗавершение(РезультатВыбора, ДопПараметры) Экспорт
	
	Если РезультатВыбора = Неопределено Тогда
		Возврат;
	КонецЕсли;
	ЗаполнитьЗначенияСвойств(Объект, РезультатВыбора, "НачалоПериода,КонецПериода");

КонецПроцедуры

//============================================================================
// 


&НаСервере
Процедура ЧисткаАртикуловНоменклатурыСервер()
	
	Для Каждого Строка Из ПодстриганиеАртикулов Цикл
		Если НЕ ЗначениеЗаполнено(Строка.АртикулПосле) Тогда
			Продолжить;
		КОнецЕсли;
		
		ОбъектСпр = Строка.Номенклатура.ПолучитьОбъект();
		ОбъектСпр.Артикул = СокрЛП(Строка.АртикулПосле);
		ОбъектСпр.ОбменДанными.Загрузка = Истина;
		ОбъектСпр.Записать();	
	КонецЦикла;

КонецПроцедуры

&НаКлиенте
Процедура КомандаЧисткаАртикуловНоменклатуры(Команда)
	
	Ответ = Вопрос("Вы уверены ?", РежимДиалогаВопрос.ДаНет, ,КодВозвратаДиалога.Нет, "Дополнительный вопрос");		
	Если Ответ <> КодВозвратаДиалога.Да Тогда
		Возврат;
	КонецЕсли;

	Сообщить("Обработка Начало - "+ТекущаяДата());

	ЧисткаАртикуловНоменклатурыСервер();
	
	Сообщить("Обработка завершена. "+ТекущаяДата());

КонецПроцедуры

&НаСервере
Процедура ЗаполнитьАртикулыСервер()
	
	ОбработкаОбъект = РеквизитФормыВЗначение("Объект");

	ПодстриганиеАртикулов.Очистить();
	
	Выборка = Справочники.Номенклатура.Выбрать();
	Пока Выборка.Следующий() Цикл
		
		Если Выборка.ЭтоГруппа Тогда
			Продолжить;
		КонецЕсли;

		АртикулДо = СокрЛП(Выборка.Артикул);
		Если НЕ ЗначениеЗаполнено(АртикулДо) Тогда
			Продолжить;
		КонецЕсли;
			
		АртикулПосле = ОбработкаОбъект.глУбратьСимволы(АртикулДо,Истина);
		
		Если АртикулДо = АртикулПосле Тогда
			Продолжить;
		КонецЕсли;
		
		НоваяСтрока = ПодстриганиеАртикулов.Добавить();
		НоваяСтрока.Номенклатура = Выборка.Ссылка;	
		НоваяСтрока.АртикулПосле = АртикулПосле;	
	КонецЦикла;

КонецПроцедуры

&НаКлиенте
Процедура КомандаЗаполнитьАртикулы(Команда)
	
	Состояние("Заполняем таблицу...");
	
	ЗаполнитьАртикулыСервер();

КонецПроцедуры


//============================================================================
// 


&НаСервере
Процедура ВыполнитьУкладкуСервер()
	
	
	Для Каждого Стр ИЗ Объект.ПравилаРазноски Цикл
		
		Запрос = Новый Запрос();
		Запрос.УстановитьПараметр("ГруппаДо",Стр.ГруппаДо);
		
		ОтборБезГрупп = Стр.ОтборБезГрупп;
		ТолькоЦелыеСлова = Стр.ТолькоЦелыеСлова;
		
		МассивКлючевыхСлов = глРазложитьСтрокуВМассивПодстрок(Стр.КлючевыеСлова," ");
		//МассивКлючевыхСлов = глМассивПеревестиСловаВРег(МассивКлючевыхСлов);
		КоличествоКлючевыхСлов = МассивКлючевыхСлов.Количество();
		
		УсловиеПолейВводаПоСтроке = "";	
		Для инд = 0 По КоличествоКлючевыхСлов - 1 Цикл
			СтрКлючевыеСлова = СокрЛП(МассивКлючевыхСлов[инд]);
			
			УсловиеПолейВводаПоСтроке = УсловиеПолейВводаПоСтроке + " И СпрНоменклатура.Наименование ПОДОБНО &ПодстрокаПоиска"+Строка(инд);	
			Запрос.УстановитьПараметр("ПодстрокаПоиска"+Строка(инд),"%"+СтрКлючевыеСлова+"%");
		КонецЦикла;
		
		Если ЗначениеЗаполнено(Стр.СловаИсключения) Тогда
			МассивКлючевыхСлов = глРазложитьСтрокуВМассивПодстрок(Стр.СловаИсключения," ");
			//МассивКлючевыхСлов = глМассивПеревестиСловаВРег(МассивКлючевыхСлов);
			КоличествоКлючевыхСлов = МассивКлючевыхСлов.Количество();
			
			Для инд = 0 По КоличествоКлючевыхСлов - 1 Цикл
				СтрКлючевыеСлова = СокрЛП(МассивКлючевыхСлов[инд]);
				
				УсловиеПолейВводаПоСтроке = УсловиеПолейВводаПоСтроке + " И НЕ СпрНоменклатура.Наименование ПОДОБНО &ПодстрокаПоискаИскл"+Строка(инд);	
				Запрос.УстановитьПараметр("ПодстрокаПоискаИскл"+Строка(инд),"%"+СтрКлючевыеСлова+"%");
			КонецЦикла;
		КонецЕсли;
		
		ТекстЗапроса = 
		"ВЫБРАТЬ
		|	СпрНоменклатура.Ссылка КАК Номенклатура,
		|	СпрНоменклатура.Наименование КАК Наименование,
		|	СпрНоменклатура.Родитель КАК ГруппаДо,
		|	СпрНоменклатура.Артикул,
		|	СпрНоменклатура.ТоварнаяКатегория
		|ИЗ
		|	Справочник.Номенклатура КАК СпрНоменклатура
		|ГДЕ
		|	СпрНоменклатура.ЭтоГруппа = ЛОЖЬ
		|	"+?(ОтборБезГрупп," И СпрНоменклатура.Родитель = &ГруппаДо"," И СпрНоменклатура.Родитель В ИЕРАРХИИ(&ГруппаДо)")+"
		|	"+УсловиеПолейВводаПоСтроке+"";	
			
		Запрос.Текст = ТекстЗапроса;
				
		ТаблицаПолученногоЗапроса = Новый ТаблицаЗначений;
		ТаблицаПолученногоЗапроса = Запрос.Выполнить().Выгрузить();
		
		Для Каждого СтрВыборка Из ТаблицаПолученногоЗапроса Цикл
			
			Если ТолькоЦелыеСлова Тогда
				ВыборкаМассивКлючевыхСлов = СтрРазделить(СтрВыборка.Наименование," ");
				ВыборкаКоличествоСлов = ВыборкаМассивКлючевыхСлов.Количество();
				
				КоличествоСовпаденийСлов = 0;
				Для Каждого ПодстрокаПоиска Из МассивКлючевыхСлов Цикл					
					НомерСовпадения = ВыборкаМассивКлючевыхСлов.Найти(ПодстрокаПоиска);
					Если НЕ НомерСовпадения = Неопределено Тогда				
						КоличествоСовпаденийСлов = КоличествоСовпаденийСлов + 1;
					КонецЕсли;
				КонецЦикла;
				
				Если КоличествоКлючевыхСлов <> КоличествоСовпаденийСлов Тогда
					Продолжить;
				КонецЕсли;
			КонецЕсли;		

			
			ОбъектСпр = СтрВыборка.Номенклатура.ПолучитьОбъект();
			Если ЗначениеЗаполнено( Стр.ГруппаПосле) Тогда
				ОбъектСпр.Родитель = Стр.ГруппаПосле;
			КонецЕсли;
			Если ЗначениеЗаполнено(Стр.ТоварнаяКатегорияПосле) Тогда
				ОбъектСпр.ТоварнаяКатегория = Стр.ТоварнаяКатегорияПосле;
			КонецЕсли;
			ОбъектСпр.ОбменДанными.Загрузка = Истина;
			ОбъектСпр.Записать();
		КонецЦикла;
		
	КонецЦикла;

КонецПроцедуры

&НаКлиенте
Процедура КомандаВыполнитьУкладку(Команда)
	
	Ответ = Вопрос("Вы уверены ?", РежимДиалогаВопрос.ДаНет, ,КодВозвратаДиалога.Нет, "Дополнительный вопрос");		
	Если Ответ <> КодВозвратаДиалога.Да Тогда
		Возврат;
	КонецЕсли;

	Сообщить("Обработка Начало - "+ТекущаяДата());

	ВыполнитьУкладкуСервер();
	
	Сообщить("Обработка завершена - "+ТекущаяДата());
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПравилаРазноскиПриАктивизацииСтрокиСервер(ТекущиеДанные)
	
	ТаблицаРезультат = Новый Массив;
	
	КлючевыеСловаСтроки = ТекущиеДанные.КлючевыеСлова;
	ТолькоЦелыеСлова = ТекущиеДанные.ТолькоЦелыеСлова;
	
	ОтборБезГрупп = ТекущиеДанные.ОтборБезГрупп;
	Если НЕ ЗначениеЗаполнено(КлючевыеСловаСтроки) Тогда
		Возврат Новый Структура("ТаблицаРезультат",ТаблицаРезультат);
	КонецЕсли;
	
	МассивКлючевыхСлов = глРазложитьСтрокуВМассивПодстрок(КлючевыеСловаСтроки," ");
	//МассивКлючевыхСлов = глМассивПеревестиСловаВРег(МассивКлючевыхСлов);
	КоличествоКлючевыхСлов = МассивКлючевыхСлов.Количество();
		
	Запрос = Новый Запрос();
	Запрос.УстановитьПараметр("ГруппаДо",ТекущиеДанные.ГруппаДо);

	УсловиеПолейВводаПоСтроке = "";	
	Для инд = 0 По КоличествоКлючевыхСлов - 1 Цикл
		СтрКлючевыеСлова = СокрЛП(МассивКлючевыхСлов[инд]);
		
		УсловиеПолейВводаПоСтроке = УсловиеПолейВводаПоСтроке + " И СпрНоменклатура.Наименование ПОДОБНО &ПодстрокаПоиска"+Строка(инд);	
		Запрос.УстановитьПараметр("ПодстрокаПоиска"+Строка(инд),"%"+СтрКлючевыеСлова+"%");
	КонецЦикла;
	
	Если ЗначениеЗаполнено(ТекущиеДанные.СловаИсключения) Тогда
		МассивКлючевыхСлов = глРазложитьСтрокуВМассивПодстрок(ТекущиеДанные.СловаИсключения," ");
		//МассивКлючевыхСлов = глМассивПеревестиСловаВРег(МассивКлючевыхСлов);
		КоличествоКлючевыхСлов = МассивКлючевыхСлов.Количество();
		
		Для инд = 0 По КоличествоКлючевыхСлов - 1 Цикл
			СтрКлючевыеСлова = СокрЛП(МассивКлючевыхСлов[инд]);
			
			УсловиеПолейВводаПоСтроке = УсловиеПолейВводаПоСтроке + " И НЕ СпрНоменклатура.Наименование ПОДОБНО &ПодстрокаПоискаИскл"+Строка(инд);	
			Запрос.УстановитьПараметр("ПодстрокаПоискаИскл"+Строка(инд),"%"+СтрКлючевыеСлова+"%");
		КонецЦикла;
	КонецЕсли;

	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	СпрНоменклатура.Ссылка КАК Номенклатура,
	|	СпрНоменклатура.Наименование КАК Наименование,
	|	СпрНоменклатура.Родитель КАК ГруппаДо,
	|	СпрНоменклатура.Артикул,
	|	СпрНоменклатура.ТоварнаяКатегория
	|ИЗ
	|	Справочник.Номенклатура КАК СпрНоменклатура
	|ГДЕ
	|	СпрНоменклатура.ЭтоГруппа = ЛОЖЬ
	|	"+?(ОтборБезГрупп," И СпрНоменклатура.Родитель = &ГруппаДо"," И СпрНоменклатура.Родитель В ИЕРАРХИИ(&ГруппаДо)")+"
	|	"+УсловиеПолейВводаПоСтроке+"";	
	
	Запрос.Текст = ТекстЗапроса;
	
	РезультатЗапроса = Запрос.Выполнить().Выгрузить();
	
	Для Каждого ВыборкаСтрока Из РезультатЗапроса Цикл		
		
		Если ТолькоЦелыеСлова Тогда
			ВыборкаМассивКлючевыхСлов = СтрРазделить(ВыборкаСтрока.Наименование," ");
			ВыборкаКоличествоСлов = ВыборкаМассивКлючевыхСлов.Количество();
			
			КоличествоСовпаденийСлов = 0;
			Для Каждого ПодстрокаПоиска Из МассивКлючевыхСлов Цикл					
				НомерСовпадения = ВыборкаМассивКлючевыхСлов.Найти(ПодстрокаПоиска);
				Если НЕ НомерСовпадения = Неопределено Тогда				
					КоличествоСовпаденийСлов = КоличествоСовпаденийСлов + 1;
				КонецЕсли;
			КонецЦикла;
			
			Если КоличествоКлючевыхСлов <> КоличествоСовпаденийСлов Тогда
				Продолжить;
			КонецЕсли;
		КонецЕсли;		
		
		НоваяСтрока = Новый Структура("Номенклатура, ГруппаДо, Артикул, ТоварнаяКатегория");
		ЗаполнитьЗначенияСвойств(НоваяСтрока, ВыборкаСтрока);
		
		ТаблицаРезультат.Добавить(НоваяСтрока);		
	КонецЦикла;	

	Возврат Новый Структура("ТаблицаРезультат",ТаблицаРезультат);
	
КонецФункции

&НаКлиенте
Процедура ОбработкаГруппОбновитьСписокНоменклатуры()
	
	ТекущиеДанные = Элементы.ПравилаРазноски.ТекущиеДанные;
	
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ТекущиеДанныеСтроки = Новый Структура;
	ТекущиеДанныеСтроки.Вставить("КлючевыеСлова",ТекущиеДанные.КлючевыеСлова);
	ТекущиеДанныеСтроки.Вставить("СловаИсключения",ТекущиеДанные.СловаИсключения);
	ТекущиеДанныеСтроки.Вставить("ГруппаДо",ТекущиеДанные.ГруппаДо);
	ТекущиеДанныеСтроки.Вставить("ОтборБезГрупп",ТекущиеДанные.ОтборБезГрупп);
	ТекущиеДанныеСтроки.Вставить("ТолькоЦелыеСлова",ТекущиеДанные.ТолькоЦелыеСлова);
		

	СтруктураИнформации = ПравилаРазноскиПриАктивизацииСтрокиСервер(ТекущиеДанныеСтроки);
	
	НайденнаяНоменклатура.Очистить();	
	Для Каждого ВыборкаСтрока Из СтруктураИнформации.ТаблицаРезультат Цикл				
		НоваяСтрока = НайденнаяНоменклатура.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока,ВыборкаСтрока);
	КонецЦикла;		
	
КонецПроцедуры

&НаКлиенте
Процедура ПравилаРазноскиПриАктивизацииСтроки(Элемент)
	
	ОбработкаГруппОбновитьСписокНоменклатуры();		
	
КонецПроцедуры

&НаКлиенте
Процедура ПравилаРазноскиПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	
	ТекущиеДанные = Элементы.ПравилаРазноски.ТекущиеДанные;	
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если ТекущиеДанные.ОтборБезГрупп Тогда
		ТекущиеДанные.ГруппаДо = "";
	КонецЕсли;
	
	ОбработкаГруппОбновитьСписокНоменклатуры();	

КонецПроцедуры


//============================================================================
// 

&НаСервере
Процедура ОбработкаНоменклатурыЗаполнитьСервер()

	ОбработкаОбъект = РеквизитФормыВЗначение("Объект");

	ПараметрыЗапроса = Новый Структура;
	ПараметрыЗапроса.Вставить("АдресСхемыВХранилище", Объект.КомпоновщикНастроек);
	ПараметрыЗапроса.Вставить("РасширеннаяПоисковаяСтрока",СокрЛП(РасширеннаяПоисковаяСтрока));	
	ПараметрыЗапроса.Вставить("ИскатьЦелыеСлова",ИскатьЦелыеСлова);	
	
	ОбработкаОбъект.ОбработкаНоменклатурыЗаполнитьТаблицу(ПараметрыЗапроса);

	ЗначениеВРеквизитФормы(ОбработкаОбъект, "Объект");

КонецПроцедуры

&НаКлиенте
Процедура ОбработкаНоменклатурыЗаполнить(Команда)
	
	ОбработкаНоменклатурыЗаполнитьСервер();
	
	Элементы.ОбработкаАртикуловСтраницы.ТекущаяСтраница = Элементы.ОбработкаАртикуловСтраницы.ПодчиненныеЭлементы.ТаблицаНоменклатуры;

КонецПроцедуры


//============================================================================
// 


&НаСервере
Процедура ОбработкаНоменклатурыПредварительнаяОбработка()
	
	КешЗначение1 = "";
	КешЗначение2 = "";
	КешЗначение3 = "";
	КешЗначение4 = "";
	КешЗначение5 = "";
	КешЗначение6 = "";
	КешЗначение7 = "";
	КешЗначение8 = "";
	КешЗначение9 = "";
	КешЗначение10 = "";

	Для Каждого Строка Из Объект.ТабличнаяЧасть Цикл
				
		Артикул      = Строка.Артикул;
		Номенклатура = Строка.Номенклатура;
		Наименование = Строка.Наименование;
		НаименованиеПолное = Строка.НаименованиеПолное;
		ГруппаНоменклатуры = "";
		Описание           = "";
		
		Строка.НовыйАртикул = "";
		Строка.НовоеНаименование = "";
		Строка.НовоеНаименованиеПолное = "";
		Строка.НовоеОписание = "";
		Строка.ГруппаНоменклатуры = "";
		
		Для Каждого ВыборкаАлгоритм Из Объект.АлгоритмыОбработки Цикл
			
			Если ЗначениеЗаполнено(ВыборкаАлгоритм.Алгоритм) Тогда
				ТекстАлгоритма = ВыборкаАлгоритм.Алгоритм.ТекстАлгоритма;
			Иначе
				ТекстАлгоритма = ВыборкаАлгоритм.ТекстАлгоритма;
			КонецЕсли;
			Попытка
				//Значение = Вычислить(ТекАлгоритм.ТекстАлгоритма);
				Выполнить(ТекстАлгоритма);
			Исключение
				Сообщить("Ошибка Алгоритм["+ВыборкаАлгоритм.Алгоритм+"]: "+ОписаниеОшибки());
			КонецПопытки;			
			
			Если ЗначениеЗаполнено(ВыборкаАлгоритм.Алгоритм) Тогда
				ПрименитьАлгоритм = ВыборкаАлгоритм.Алгоритм;
				Если ПрименитьАлгоритм.ИспользоватьЗамены Тогда
					//Сначала отработаем автозамены
					АвтозаменыПодстрок = ПрименитьАлгоритм.АвтозаменыПодстрок;			
					Для Каждого СтрАвтозамена Из АвтозаменыПодстрок Цикл
						Наименование = СтрЗаменить(Наименование,СтрАвтозамена.ПодстрокаПоиска,СтрАвтозамена.ПодстрокаЗамены);
					КонецЦикла;		
				КонецЕсли;	
				
				Если ПрименитьАлгоритм.ИспользоватьНазначениеГруппы Тогда
					НазначениеГруппы = ПрименитьАлгоритм.НазначениеГруппы;
					СовпадениеНайдено = Ложь;
					Для Каждого СтрАвтозамена Из НазначениеГруппы Цикл
						Если СовпадениеНайдено Тогда
							Продолжить;
						КонецЕсли;
						
						МассивКлючевыхСлов = глРазложитьСтрокуВМассивПодстрок(СтрАвтозамена.КлючевыеСлова," ");
						МассивКлючевыхСлов = глМассивПеревестиСловаВРег(МассивКлючевыхСлов);
						КоличествоКлючевыхСлов = МассивКлючевыхСлов.Количество();			
						
						ВыборкаМассивКлючевыхСлов = глРазложитьСтрокуВМассивПодстрок(Наименование," ");
						ВыборкаМассивКлючевыхСлов = глМассивПеревестиСловаВРег(ВыборкаМассивКлючевыхСлов);
						ВыборкаКоличествоСлов     = ВыборкаМассивКлючевыхСлов.Количество();
						
						КоличествоСовпаденийСлов = 0;
						Для Каждого ПодстрокаПоиска Из МассивКлючевыхСлов Цикл					
							НомерСовпадения = ВыборкаМассивКлючевыхСлов.Найти(ПодстрокаПоиска);
							Если НЕ НомерСовпадения = Неопределено Тогда				
								КоличествоСовпаденийСлов = КоличествоСовпаденийСлов + 1;
							КонецЕсли;
						КонецЦикла;
						
						Если КоличествоСовпаденийСлов = КоличествоКлючевыхСлов Тогда
							ГруппаНоменклатуры = СтрАвтозамена.НазначитьГруппу;
							СовпадениеНайдено = Истина;
						КонецЕсли;
					КонецЦикла;
				КонецЕсли;
			КонецЕсли;
		КонецЦИкла;
		
		Если ЗначениеЗаполнено(Артикул) Тогда
			Если Строка.Артикул <> Артикул Тогда
				Строка.НовыйАртикул = СокрЛП(Артикул);
			КонецЕсли;
		КонецЕсли;
		
		Если ЗначениеЗаполнено(Наименование) Тогда
			Если Строка.Наименование <> Наименование Тогда
				Строка.НовоеНаименование = СокрЛП(Наименование);
			КонецЕсли;
		КонецЕсли;
		
		Если ЗначениеЗаполнено(НаименованиеПолное) Тогда
			Если Строка.НаименованиеПолное <> НаименованиеПолное Тогда
				Строка.НовоеНаименованиеПолное = СокрЛП(НаименованиеПолное);
			КонецЕсли;
		КонецЕсли;
		
		Если ЗначениеЗаполнено(Описание) Тогда
			Строка.НовоеОписание = СокрЛП(Описание);
		КонецЕсли;
		
		Если ЗначениеЗаполнено(ГруппаНоменклатуры) Тогда
			Если Строка.ГруппаНоменклатуры <> ГруппаНоменклатуры Тогда
				Строка.ГруппаНоменклатуры = ГруппаНоменклатуры;
			КонецЕсли;
		КонецЕсли;
				
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ИсправлениеНаименованийУстановитьНажатие()
	
	ОбработкаНоменклатурыПредварительнаяОбработка();
	Элементы.ОбработкаАртикуловСтраницы.ТекущаяСтраница = Элементы.ОбработкаАртикуловСтраницы.ПодчиненныеЭлементы.ТаблицаНоменклатуры;
		
КонецПроцедуры


&НаСервере
Процедура ОбработкаНоменклатурыИзменениеСервер()
	
	Для Каждого СтрокаВыборка Из Объект.ТабличнаяЧасть Цикл
		
		ОбъектСпр = СтрокаВыборка.Номенклатура.ПолучитьОбъект();
		
		ИзменениеПроизошло = Ложь;
		
		Если ЗначениеЗаполнено(СтрокаВыборка.НовыйАртикул) Тогда
			Если ОбъектСпр.Артикул <> СтрокаВыборка.НовыйАртикул Тогда
				ОбъектСпр.Артикул = СокрЛП(СтрокаВыборка.НовыйАртикул);
				ИзменениеПроизошло = Истина;
			КонецЕсли;
		КонецЕсли;

		Если ЗначениеЗаполнено(СтрокаВыборка.НовоеНаименование) Тогда
			Если ОбъектСпр.Наименование <> СтрокаВыборка.НовоеНаименование Тогда
				ОбъектСпр.Наименование = СокрЛП(СтрокаВыборка.НовоеНаименование);
				ИзменениеПроизошло = Истина;
			КонецЕсли;
		КонецЕсли;
		
		Если ЗначениеЗаполнено(СтрокаВыборка.НовоеНаименованиеПолное) Тогда		
			Если ОбъектСпр.НаименованиеПолное <> СтрокаВыборка.НовоеНаименованиеПолное Тогда
				ОбъектСпр.НаименованиеПолное = СокрЛП(СтрокаВыборка.НовоеНаименованиеПолное);
				ИзменениеПроизошло = Истина;
			КонецЕсли;
		КонецЕсли;
		
		Если ЗначениеЗаполнено(СтрокаВыборка.НовоеОписание) Тогда
			ОбъектСпр.Описание = СокрЛП(СтрокаВыборка.НовоеОписание);
			ИзменениеПроизошло = Истина;
		КонецЕсли;
		
		Если ИзменениеПроизошло Тогда
			ОбъектСпр.ОбменДанными.Загрузка = Истина;
			ОбъектСпр.Записать();	
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаНоменклатурыЗаписать()
	
	Ответ = Вопрос("Вы уверены ?", РежимДиалогаВопрос.ДаНет, ,КодВозвратаДиалога.Нет, "Дополнительный вопрос");		
	Если Ответ <> КодВозвратаДиалога.Да Тогда
		Возврат;
	КонецЕсли;
	
	Сообщить("Обработка Начало - "+ТекущаяДата());

	ОбработкаНоменклатурыИзменениеСервер();
	
	Сообщить("Обработка завершена - "+ТекущаяДата());
	
КонецПроцедуры



//============================================================================
// 

&НаСервере
Процедура ПриСохраненииДанныхВНастройкахНаСервере(Настройки)

	Настройки.Вставить("ПравилаРазноски", Объект.ПравилаРазноски.Выгрузить());
	Настройки.Вставить("АлгоритмыОбработки", Объект.АлгоритмыОбработки.Выгрузить());
	
КонецПроцедуры

&НаСервере
Процедура ПриЗагрузкеДанныхИзНастроекНаСервере(Настройки)
	
	ПравилаРазноски = Настройки.Получить("ПравилаРазноски");
	Если ПравилаРазноски <> Неопределено Тогда
		Объект.ПравилаРазноски.Загрузить(ПравилаРазноски);
	КонецЕсли; 
	
	АлгоритмыОбработки = Настройки.Получить("АлгоритмыОбработки");
	Если АлгоритмыОбработки <> Неопределено Тогда
		Объект.АлгоритмыОбработки.Загрузить(АлгоритмыОбработки);
	КонецЕсли; 
				
КонецПроцедуры



//============================================================================
// 

&НаСервере
Функция ЗначениеСсылочногоТипа(Значение) Экспорт
	
	Возврат ЭтоСсылка(ТипЗнч(Значение));
	
КонецФункции


&НаСервере
Функция ЭтоСсылка(Тип) Экспорт
	
	Возврат Тип <> Тип("Неопределено") 
		И (Справочники.ТипВсеСсылки().СодержитТип(Тип)
		//ИЛИ Документы.ТипВсеСсылки().СодержитТип(Тип)
		//ИЛИ Перечисления.ТипВсеСсылки().СодержитТип(Тип)
		//ИЛИ ПланыВидовХарактеристик.ТипВсеСсылки().СодержитТип(Тип)
		ИЛИ ПланыСчетов.ТипВсеСсылки().СодержитТип(Тип)
		ИЛИ ПланыВидовРасчета.ТипВсеСсылки().СодержитТип(Тип)
		ИЛИ БизнесПроцессы.ТипВсеСсылки().СодержитТип(Тип)
		ИЛИ БизнесПроцессы.ТипВсеСсылкиТочекМаршрутаБизнесПроцессов().СодержитТип(Тип)
		ИЛИ Задачи.ТипВсеСсылки().СодержитТип(Тип)
		ИЛИ ПланыОбмена.ТипВсеСсылки().СодержитТип(Тип));
	
КонецФункции



&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	СхемаКомпоновкиДанных = РеквизитФормыВЗначение("Объект").ПолучитьМакет("СхемаЗапроса");
	URLСхемы = ПоместитьВоВременноеХранилище(СхемаКомпоновкиДанных, Новый УникальныйИдентификатор());
	ИсточникНастроек = Новый ИсточникДоступныхНастроекКомпоновкиДанных(URLСхемы);
	Объект.КомпоновщикНастроек.Инициализировать(ИсточникНастроек);
	Объект.КомпоновщикНастроек.ЗагрузитьНастройки(СхемаКомпоновкиДанных.НастройкиПоУмолчанию);

	Попытка
		ПравилаГруппЗагрузитьНаСервере();
	Исключение
	КонецПопытки;
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьТиповуюОбработку(Команда)
	
	ОткрытьФорму("Обработка.ГрупповоеИзменениеРеквизитов.Форма");

КонецПроцедуры

 &НаКлиенте
 Процедура ОткрытьСправочникНоменклатуры(Команда)
	 
	 ОткрытьФорму("Справочник.Номенклатура.ФормаСписка");
	 
 КонецПроцедуры
 



//ИЗМЕНИТЬ НАИМЕНОВАНИЯ НОМЕНКЛАТУРЫ ПО ШАБЛОНУ

&НаСервере
Процедура ИзменитьНаименованияПоШаблонуНаСервере()
	
	//ОтборПоВидамНоменклатуры = Новый СписокЗначений;
	//Для Каждого Выборка Из Объект.ШаблоныНаименований Цикл		
	//	ОтборПоВидамНоменклатуры.Добавить(Выборка.КатегорияНоменклатуры);
	//КонецЦикла;

	//ТекстЗапроса = 
	//"ВЫБРАТЬ
	//|	СпрНоменклатура.Ссылка КАК Номенклатура,
	//|	СпрНоменклатура.КатегорияНоменклатуры КАК КатегорияНоменклатуры,
	//|	СпрНоменклатура.Наименование КАК Наименование,
	//|	ВЫРАЗИТЬ(СпрНоменклатура.НаименованиеПолное КАК СТРОКА(1000)) КАК НаименованиеПолное,
	//|	СпрНоменклатура.Код КАК Код,
	//|	СпрНоменклатура.Артикул КАК Артикул,
	//|	СпрНоменклатура.СтранаПроисхождения КАК СтранаПроисхождения,
	//|	СпрНоменклатура.Поставщик КАК Поставщик
	//|ИЗ
	//|	Справочник.Номенклатура КАК СпрНоменклатура
	//|ГДЕ
	//|	СпрНоменклатура.ЭтоГруппа = ЛОЖЬ
	//|	И СпрНоменклатура.КатегорияНоменклатуры В(&ОтборПоВидамНоменклатуры)
	//|ИТОГИ ПО
	//|	КатегорияНоменклатуры,
	//|	Номенклатура";	
	//
	//Запрос = Новый Запрос();
	//Запрос.Текст = ТекстЗапроса;
	//Запрос.УстановитьПараметр("ОтборПоВидамНоменклатуры",ОтборПоВидамНоменклатуры);
	//
	//РезультатЗапроса = Запрос.Выполнить();
	//

	//Выборка = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "КатегорияНоменклатуры"); 
	//Пока Выборка.Следующий() Цикл
	//	
	//	ВыборкаНоменклатура = Выборка.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "Номенклатура"); 
	//	Пока ВыборкаНоменклатура.Следующий() Цикл
	//		
	//		СписокСвойств = Новый СписокЗначений;
	//		СписокСвойств.Добавить("Наименование", ВыборкаНоменклатура.Наименование);
	//		СписокСвойств.Добавить("Артикул", ВыборкаНоменклатура.Артикул);
	//		СписокСвойств.Добавить("Код", ВыборкаНоменклатура.Код);
	//		СписокСвойств.Добавить("СтранаПроисхождения", ВыборкаНоменклатура.СтранаПроисхождения);
	//		СписокСвойств.Добавить("Поставщик", ВыборкаНоменклатура.Поставщик);
	//		
	//		Для каждого Свойство Из ВыборкаНоменклатура.Номенклатура.ДополнительныеРеквизиты Цикл	
	//			НаименованиеСвойства = Строка(Свойство.Свойство);
	//			ЗначениеСвойства = Свойство.Значение;
	//			
	//			Если ТипЗнч(ЗначениеСвойства) = Тип("Булево") Тогда
	//				ЗначениеСвойства = ?(ЗначениеСвойства = Истина, Свойство.Наименование, "");
	//			ИначеЕсли НЕ ЗначениеЗаполнено(ЗначениеСвойства) Тогда
	//				ЗначениеСвойства = "";
	//			КонецЕсли;
	//			
	//			СписокСвойств.Добавить(НаименованиеСвойства, ЗначениеСвойства);		
	//		КонецЦикла;
	//		
	//		НовоеНаименование       = Выборка.Наименование;
	//		НовоеПолноеНаименование = Выборка.НаименованиеПолное;
	//		
	//		Изменение = Ложь;
	//		
	//		ПараметрыОтбора = Новый Структура();
	//		ПараметрыОтбора.Вставить("КатегорияНоменклатуры",Выборка.КатегорияНоменклатуры);	
	//		НастройкиШаблонаКатегории = Объект.ШаблоныНаименований.НайтиСтроки(ПараметрыОтбора);
	//		Для Каждого НастройкаШаблонаКатегории Из НастройкиШаблонаКатегории Цикл
	//			Если НастройкаШаблонаКатегории.ВидНаименования = Перечисления.ВидыНаименованийОбъектов.НоменклатураРабочее Тогда
	//				Если ЗначениеЗаполнено(НастройкаШаблонаКатегории.ШаблонНаименования) Тогда
	//					НовоеНаименование = ШаблоныНаименованийКлиентСервер.СформироватьНаименованиеПоШаблону(СписокСвойств, НастройкаШаблонаКатегории.ШаблонНаименования.ШаблонДляФормирования);
	//					Если НовоеНаименование <> Выборка.Наименование Тогда
	//						Изменение = Истина;
	//					КонецЕсли;
	//				КонецЕсли;
	//			ИначеЕсли НастройкаШаблонаКатегории.ВидНаименования = Перечисления.ВидыНаименованийОбъектов.НоменклатураДляПечати Тогда
	//				Если ЗначениеЗаполнено(НастройкаШаблонаКатегории.ШаблонНаименования) Тогда  
	//					НовоеПолноеНаименование = ШаблоныНаименованийКлиентСервер.СформироватьНаименованиеПоШаблону(СписокСвойств, НастройкаШаблонаКатегории.ШаблонНаименования.ШаблонДляФормирования);
	//					Если НовоеПолноеНаименование <> Выборка.НаименованиеПолное Тогда
	//						Изменение = Истина;
	//					КонецЕсли;
	//				КонецЕсли;
	//			КонецЕсли;
	//		КонецЦикла;
	//		
	//		Если Изменение Тогда
	//			НоменклатураОбъект = ВыборкаНоменклатура.Номенклатура.ПолучитьОбъект();
	//			Если НовоеНаименование <> Выборка.Наименование Тогда
	//				НоменклатураОбъект.Наименование = НовоеНаименование;
	//			КонецЕсли;
	//			Если НовоеПолноеНаименование <> Выборка.НаименованиеПолное Тогда
	//				НоменклатураОбъект.НаименованиеПолное = НовоеПолноеНаименование;
	//			КонецЕсли;
	//			НоменклатураОбъект.ОбменДанными.Загрузка = Истина;
	//			НоменклатураОбъект.Записать();
	//			Сообщить(""+Выборка.Наименование+"  ->  "+НовоеНаименование);
	//		КонецЕсли;
	//	КонецЦикла;
	//КонецЦикла;

	
КонецПроцедуры

&НаКлиенте
Процедура ИзменитьНаименованияПоШаблону(Команда)
	Ответ = Вопрос("Вы уверены ?", РежимДиалогаВопрос.ДаНет, ,КодВозвратаДиалога.Нет, "Дополнительный вопрос");		
	Если Ответ <> КодВозвратаДиалога.Да Тогда
		Возврат;
	КонецЕсли;

	Сообщить("Обработка Начало - "+ТекущаяДата());

	ИзменитьНаименованияПоШаблонуНаСервере();
	
	Сообщить("Обработка завершена - "+ТекущаяДата());

КонецПроцедуры





&НаСервере
Процедура ЗаполнитьАлгоритмы()
	
	ОбработкаОбъект = РеквизитФормыВЗначение("Объект");

	Макет = ОбработкаОбъект.ПолучитьМакет("АлгоритмыКлючевыхСлов");
		
	Область = Макет.ПолучитьОбласть("ТекстыАлгоритмов");
	
	ВсегоСтрок = Область.ВысотаТаблицы + 1;
	ТекущаяСтрока = 1;
	
	Объект.АлгоритмыКлючевыхСлов.Очистить();
	
	Пока ТекущаяСтрока < ВсегоСтрок Цикл
		
		мСтрока = "R" + Формат(ТекущаяСтрока,"ЧДЦ=0; ЧГ=");
		
		Представление  = Область.ПолучитьОбласть(мСтрока + "C1").ТекущаяОбласть.Текст;
		ТекстАлгоритма = Область.ПолучитьОбласть(мСтрока + "C2").ТекущаяОбласть.Текст;
		
		Если ПустаяСтрока(Представление) Тогда
			ТекущаяСтрока = ТекущаяСтрока + 1;		
			Продолжить;
		КонецЕсли;
		
		НоваяСтрока = Объект.АлгоритмыКлючевыхСлов.Добавить();
		НоваяСтрока.Представление  = Представление;
		НоваяСтрока.ТекстАлгоритма = ТекстАлгоритма;
		
		ТекущаяСтрока = ТекущаяСтрока + 1;			
	КонецЦикла;
		
Конецпроцедуры

&НаКлиенте
Процедура ЗаполнитьСтандартныеАлгоритмы(Команда)
	
	ЗаполнитьАлгоритмы();
	
КонецПроцедуры

&НаКлиенте
Процедура АлгоритмыКлючевыхСловТекстАлгоритмаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	 
	 ПараметрыФормыВыбора = Новый Структура;
	 ПараметрыФормыВыбора.Вставить("ТекстАлгоритма",Элементы.АлгоритмыОбработки.ТекущиеДанные.ТекстАлгоритма);
	 
	 Попытка
		 Результат = ОткрытьФормуМодально("Обработка.мегапрайсМарафетНоменклатуры.Форма.РедакторАлгоритма",ПараметрыФормыВыбора,ЭтаФорма); 
	 Исключение
		 Результат = ОткрытьФормуМодально("ВнешняяОбработка.мегапрайсМарафетНоменклатуры.Форма.РедакторАлгоритма",ПараметрыФормыВыбора,ЭтаФорма);
	 КонецПопытки;
	 
	 Если ЗначениеЗаполнено(Результат) Тогда
		 Элементы.АлгоритмыОбработки.ТекущиеДанные.ТекстАлгоритма = Результат;
	 КонецЕсли;

КонецПроцедуры






&НаКлиенте
Процедура ПравилаГруппЗаписать(Команда)
	
	Если Объект.ПравилаРазноски.Количество() = 0 Тогда
		Сообщить("А нечего записывать. Пустота.");
		Возврат;
	КонецЕсли;
	
	ПравилаГруппЗаписатьНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура ПравилаГруппЗаписатьНаСервере()
	
	НаборЗаписей = РегистрыСведений.мегапрайсПравилаГруппНоменклатуры.СоздатьНаборЗаписей();
	НаборЗаписей.Загрузить(Объект.ПравилаРазноски.Выгрузить());	
	НаборЗаписей.Записать();
	
КонецПроцедуры

&НаКлиенте
Процедура ПравилаГруппЗагрузить(Команда)
	
	ПравилаГруппЗагрузитьНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура ПравилаГруппЗагрузитьНаСервере()
	
	
	НаборЗаписей = РегистрыСведений.мегапрайсПравилаГруппНоменклатуры.СоздатьНаборЗаписей();
	НаборЗаписей.Прочитать();
	Объект.ПравилаРазноски.Загрузить(НаборЗаписей.Выгрузить());	
	
КонецПроцедуры








