
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	ВидЦены      = Параметры.ВидЦены;
	Цена         = Параметры.Цена;
	Дата         = Параметры.Дата;
	Упаковка     = Параметры.Упаковка;
	ДатаОтгрузки = Параметры.ДатаОтгрузки;
	Склад        = Параметры.Склад;
	
	Номенклатура   = Параметры.Номенклатура;
	Характеристика = Параметры.Характеристика;
	
	СтараяУпаковка = Упаковка;
	Валюта = Параметры.Валюта;
	
	Элементы.ВидЦены.ТолькоПросмотр     = Ложь;
	Элементы.ВидЦены.ПропускатьПриВводе = Истина;
	Элементы.Цена.ТолькоПросмотр        = Истина;
	Элементы.Цена.ПропускатьПриВводе    = Истина;
	
	ЭтаФорма.Заголовок = "" + Параметры.Номенклатура + ?(ЗначениеЗаполнено(Параметры.Характеристика), " (" + Параметры.Характеристика + ")","");
		
	Если Не Параметры.ИспользоватьДатыОтгрузки Тогда
		Элементы.ДатаОтгрузки.Видимость = Ложь;
	КонецЕсли;
	
	Если Параметры.ЭтоУслуга Тогда
		ДатаОтгрузки                    = '00010101';
		Склад                           = ПредопределенноеЗначение("Справочник.Склады.ПустаяСсылка");
		Элементы.ДатаОтгрузки.Видимость = Ложь;
	КонецЕсли;
	
	Если Не Параметры.ИспользоватьСкладыВТабличнойЧасти Тогда
		Склад = Неопределено;
	КонецЕсли;
	
	Элементы.Склад.Видимость  = (Не Параметры.ЭтоУслуга ИЛИ Не Параметры.ИспользоватьДатыОтгрузки) И Параметры.Склады.Количество() > 1 И Параметры.ИспользоватьСкладыВТабличнойЧасти;
	Элементы.Склад.СписокВыбора.ЗагрузитьЗначения(Параметры.Склады);
	
	Элементы.Упаковка.Видимость         = ЗначениеЗаполнено(Номенклатура.НаборУпаковок);
	Элементы.ЕдиницаИзмерения.Видимость = Не ЗначениеЗаполнено(Номенклатура.НаборУпаковок);
	
	КоличествоУпаковок = 1;
	
КонецПроцедуры

&НаКлиенте
Процедура ОК(Команда)
	
	Отказ = Ложь;
	ОчиститьСообщения();
	
	Если КоличествоУпаковок = 0 Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru = 'Не заполнено количество'"),,"КоличествоУпаковок",,Отказ);
	КонецЕсли;
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	МассивСтруктур = Новый Массив;
	
	НоваяСтрока = Новый Структура;
	НоваяСтрока.Вставить("Номенклатура",       Номенклатура);
	НоваяСтрока.Вставить("Характеристика",     Характеристика);
	НоваяСтрока.Вставить("Упаковка",           Упаковка);
	НоваяСтрока.Вставить("Цена",               Цена);
	НоваяСтрока.Вставить("ВидЦены",            ВидЦены);
	НоваяСтрока.Вставить("КоличествоУпаковок", КоличествоУпаковок);
	НоваяСтрока.Вставить("Склад",              Склад);
	НоваяСтрока.Вставить("ДатаОтгрузки",       ДатаОтгрузки);
	МассивСтруктур.Добавить(НоваяСтрока);
	
	Закрыть(МассивСтруктур);
	
КонецПроцедуры

&НаКлиенте
Процедура Отмена(Команда)
	
	Закрыть(Неопределено);
	
КонецПроцедуры

&НаСервере
Процедура УпаковкаПриИзмененииНаСервере(СтараяУпаковка)
	
	Цена = Цена * ?(ЗначениеЗаполнено(Упаковка.Коэффициент), Упаковка.Коэффициент, 1) / ?(ЗначениеЗаполнено(СтараяУпаковка.Коэффициент), СтараяУпаковка.Коэффициент, 1);
	
КонецПроцедуры

&НаКлиенте
Процедура УпаковкаПриИзменении(Элемент)
	
	УпаковкаПриИзмененииНаСервере(СтараяУпаковка);
	СтараяУпаковка = Упаковка;
	
КонецПроцедуры

&НаКлиенте
Процедура УпаковкаОчистка(Элемент, СтандартнаяОбработка)
	
	УпаковкаПриИзмененииНаСервере(СтараяУпаковка);
	СтараяУпаковка = Упаковка;
	
КонецПроцедуры

&НаСервере
Процедура ВидЦеныПриИзмененииНаСервере()
	
	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	ВЫРАЗИТЬ(ЦеныНоменклатурыСрезПоследних.Цена * ВЫБОР
	                      |			КОГДА ЕСТЬNULL(КурсыСрезПоследних.Курс, 0) > 0
	                      |					И ЕСТЬNULL(КурсыСрезПоследнихВалютаЦены.Курс, 0) > 0
	                      |				ТОГДА КурсыСрезПоследних.Курс / КурсыСрезПоследних.Кратность / КурсыСрезПоследнихВалютаЦены.Курс * КурсыСрезПоследнихВалютаЦены.Кратность
	                      |			ИНАЧЕ 0
	                      |		КОНЕЦ КАК ЧИСЛО(15, 2)) КАК Цена
	                      |ИЗ
	                      |	РегистрСведений.ЦеныНоменклатуры.СрезПоследних(
	                      |			КОНЕЦПЕРИОДА(&Дата, ДЕНЬ),
	                      |			Номенклатура = &Номенклатура
	                      |				И Характеристика = &Характеристика
	                      |				И ВидЦены = &ВидЦены) КАК ЦеныНоменклатурыСрезПоследних
	                      |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(&Дата, ) КАК КурсыСрезПоследних
	                      |		ПО (КурсыСрезПоследних.Валюта = ЦеныНоменклатурыСрезПоследних.Валюта)
	                      |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(&Дата, Валюта = &Валюта) КАК КурсыСрезПоследнихВалютаЦены
	                      |		ПО (ИСТИНА)");
	
	Запрос.УстановитьПараметр("ВидЦены"        ,ВидЦены);
	Запрос.УстановитьПараметр("Дата"           ,Дата);
	Запрос.УстановитьПараметр("Номенклатура"   ,Номенклатура);
	Запрос.УстановитьПараметр("Характеристика" ,Характеристика);
	Запрос.УстановитьПараметр("Упаковка"       ,Упаковка);
	Запрос.УстановитьПараметр("Валюта"         ,Валюта);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Если ЗначениеЗаполнено(Выборка.Цена) Тогда
			Цена = Выборка.Цена;
		Иначе
			Цена = 0;
		КонецЕсли;
	Иначе
		Цена = 0;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВидЦеныПриИзменении(Элемент)
	
	ВидЦеныПриИзмененииНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ЦенаПриИзменении(Элемент)
	
	ВидЦены = Неопределено;
	
КонецПроцедуры
