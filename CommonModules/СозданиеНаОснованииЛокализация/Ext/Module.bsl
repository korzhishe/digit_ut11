
// Определяет список объектов конфигурации, в модулях менеджеров которых предусмотрена процедура 
// ДобавитьКомандыСозданияНаОсновании, формирующая команды создания на основании объектов.
// Синтаксис процедуры ДобавитьКомандыСозданияНаОсновании см. в документации.
//
// см. ОбщийМодуль.СозданиеНаОснованииПереопределяемый.ПриОпределенииОбъектовСКомандамиСозданияНаОсновании()
//   
Процедура ПриОпределенииОбъектовСКомандамиСозданияНаОсновании(Объекты) Экспорт
	
	//++ Локализация
	УчетНДСУП.ПриОпределенииОбъектовСКомандамиСозданияНаОсновании(Объекты);
	
	
	
	Объекты.Добавить(Метаданные.Документы.АннулированиеПодарочныхСертификатов);
	Объекты.Добавить(Метаданные.Документы.ВнесениеДенежныхСредствВКассуККМ);
	Объекты.Добавить(Метаданные.Документы.ВозвратПодарочныхСертификатов);
	Объекты.Добавить(Метаданные.Документы.ВыемкаДенежныхСредствИзКассыККМ);
	Объекты.Добавить(Метаданные.Документы.ЛистКассовойКниги);
	Объекты.Добавить(Метаданные.Документы.РеализацияПодарочныхСертификатов);
	Объекты.Добавить(Метаданные.Документы.ТранспортнаяНакладная);
	
	// ЭлектронноеВзаимодействие.ИнтеграцияСЯндексКассой
	Объекты.Добавить(Метаданные.Документы.ОперацияПоЯндексКассе);
	// Конец ЭлектронноеВзаимодействие.ИнтеграцияСЯндексКассой
		
	//-- Локализация
	
КонецПроцедуры


// Вызывается для формирования списка команд создания на основании КомандыСозданияНаОсновании, однократно для при первой
// необходимости, а затем результат кэшируется с помощью модуля с повторным использованием возвращаемых значений.
// Здесь можно определить команды создания на основании, общие для большинства объектов конфигурации.
//
// см. ОбщийМодуль.СозданиеНаОснованииПереопределяемый.ПриОпределенииОбъектовСКомандамиСозданияНаОсновании()
//
Процедура ПередДобавлениемКомандСозданияНаОсновании(КомандыСозданияНаОсновании, Параметры, СтандартнаяОбработка) Экспорт
	
	//++ Локализация
	Если ПравоДоступа("Просмотр", Метаданные.Обработки.ИнтеграцияС1СДокументооборот) Тогда
		КомандаСозданияНаОсновании = КомандыСозданияНаОсновании.Добавить();
		КомандаСозданияНаОсновании.Обработчик = "СозданиеНаОснованииУТКлиент.ИнтеграцияС1СДокументооборотСоздатьПисьмо";
		КомандаСозданияНаОсновании.Идентификатор = "ИнтеграцияС1СДокументооборотСоздатьПисьмо";
		КомандаСозданияНаОсновании.Представление = НСтр("ru = 'Документооборот: Письмо'");
		КомандаСозданияНаОсновании.РежимЗаписи = ?(Параметры.ВидВРег = "ДОКУМЕНТ", "Проводить", "Записывать");
		КомандаСозданияНаОсновании.ФункциональныеОпции = "ИспользоватьЭлектроннуюПочту1СДокументооборота";
		КомандаСозданияНаОсновании.Порядок = 98;
		
		КомандаСозданияНаОсновании = КомандыСозданияНаОсновании.Добавить();
		КомандаСозданияНаОсновании.Обработчик = "СозданиеНаОснованииУТКлиент.ИнтеграцияС1СДокументооборотСоздатьБизнесПроцесс";
		КомандаСозданияНаОсновании.Идентификатор = "ИнтеграцияС1СДокументооборотСоздатьБизнесПроцесс";
		КомандаСозданияНаОсновании.Представление = НСтр("ru = 'Документооборот: Процесс...'");
		КомандаСозданияНаОсновании.РежимЗаписи = ?(Параметры.ВидВРег = "ДОКУМЕНТ", "Проводить", "Записывать");
		КомандаСозданияНаОсновании.ФункциональныеОпции = "ИспользоватьПроцессыИЗадачи1СДокументооборота";
		КомандаСозданияНаОсновании.Порядок = 99;
	КонецЕсли;
	//-- Локализация
	
КонецПроцедуры
