
#Область ПрограммныйИнтерфейс

#Область ОбработчикиСобытий

// Вызывается из соответствующего обработчика документа
//
// Параметры:
//  Объект - ДокументОбъект - Обрабатываемый документ.
//  Отказ - Булево - Признак проведения документа.
//                   Если в теле процедуры-обработчика установить данному параметру значение Истина,
//                   то проведение документа выполнено не будет.
//  РежимПроведения - РежимПроведенияДокумента - В данный параметр передается текущий режим проведения.
//
Процедура ОбработкаПроведения(Объект, Отказ, РежимПроведения) Экспорт
	
	Движения = Объект.Движения;
	ДополнительныеСвойства = Объект.ДополнительныеСвойства;
	//++ Локализация
	//-- Локализация
	
КонецПроцедуры

// Вызывается из соответствующего обработчика документа
//
// Параметры:
//  Объект - ДокументОбъект - Обрабатываемый объект
//  Отказ - Булево - Если в теле процедуры-обработчика установить данному параметру значение Истина,
//                   то будет выполнен отказ от продолжения работы после выполнения проверки заполнения.
//  ПроверяемыеРеквизиты - Массив - Массив путей к реквизитам, для которых будет выполнена проверка заполнения.
//
Процедура ОбработкаПроверкиЗаполнения(Объект, Отказ, ПроверяемыеРеквизиты) Экспорт
	
	
КонецПроцедуры

// Вызывается из соответствующего обработчика документа
//
// Параметры:
//  Объект - ДокументОбъект - Обрабатываемый объект.
//  ДанныеЗаполнения - Произвольный - Значение, которое используется как основание для заполнения.
//  СтандартнаяОбработка - Булево - В данный параметр передается признак выполнения стандартной (системной) обработки события.
//
Процедура ОбработкаЗаполнения(Объект, ДанныеЗаполнения, СтандартнаяОбработка) Экспорт
	
	
КонецПроцедуры

// Вызывается из соответствующего обработчика документа
//
// Параметры:
//  Объект - ДокументОбъект - Обрабатываемый объект
//  Отказ - Булево - Признак отказа от записи.
//                   Если в теле процедуры-обработчика установить данному параметру значение Истина,
//                   то запись выполнена не будет и будет вызвано исключение.
//
Процедура ОбработкаУдаленияПроведения(Объект, Отказ) Экспорт
	
	
КонецПроцедуры

// Вызывается из соответствующего обработчика документа
//
// Параметры:
//  Объект - ДокументОбъект - Обрабатываемый объект
//  Отказ - Булево - Признак отказа от записи.
//                   Если в теле процедуры-обработчика установить данному параметру значение Истина,
//                   то запись выполнена не будет и будет вызвано исключение.
//  РежимЗаписи - РежимЗаписиДокумента - В параметр передается текущий режим записи документа. Позволяет определить в теле процедуры режим записи.
//  РежимПроведения - РежимПроведенияДокумента - В данный параметр передается текущий режим проведения.
//
Процедура ПередЗаписью(Объект, Отказ, РежимЗаписи, РежимПроведения) Экспорт
	
	
КонецПроцедуры

// Вызывается из соответствующего обработчика документа
//
// Параметры:
//  Объект - ДокументОбъект - Обрабатываемый объект
//  Отказ - Булево - Признак отказа от записи.
//                   Если в теле процедуры-обработчика установить данному параметру значение Истина, то запись выполнена не будет и будет вызвано исключение.
//
Процедура ПриЗаписи(Объект, Отказ) Экспорт
	
	
КонецПроцедуры

// Вызывается из соответствующего обработчика документа
//
// Параметры:
//  Объект - ДокументОбъект - Обрабатываемый объект
//  ОбъектКопирования - ДокументОбъект.<Имя документа> - Исходный документ, который является источником копирования.
//
Процедура ПриКопировании(Объект, ОбъектКопирования) Экспорт
	
	
КонецПроцедуры

#КонецОбласти

#Область ПодключаемыеКоманды

// Определяет список команд создания на основании.
//
// Параметры:
//   КомандыСозданияНаОсновании - ТаблицаЗначений - Таблица с командами создания на основании. Для изменения.
//       См. описание 1 параметра процедуры СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании().
//   Параметры - Структура - Вспомогательные параметры. Для чтения.
//       См. описание 2 параметра процедуры СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании().
//
Процедура ДобавитьКомандыСозданияНаОсновании(КомандыСозданияНаОсновании, Параметры) Экспорт
	
	
КонецПроцедуры

// Добавляет команду создания документа "Авансовый отчет".
//
// Параметры:
//   КомандыСозданияНаОсновании - ТаблицаЗначений - Таблица с командами создания на основании. Для изменения.
//       См. описание 1 параметра процедуры СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании().
//
Процедура ДобавитьКомандуСоздатьНаОсновании(КомандыСозданияНаОсновании) Экспорт


КонецПроцедуры

// Определяет список команд отчетов.
//
// Параметры:
//   КомандыОтчетов - ТаблицаЗначений - Таблица с командами отчетов. Для изменения.
//       См. описание 1 параметра процедуры ВариантыОтчетовПереопределяемый.ПередДобавлениемКомандОтчетов().
//   Параметры - Структура - Вспомогательные параметры. Для чтения.
//       См. описание 2 параметра процедуры ВариантыОтчетовПереопределяемый.ПередДобавлениемКомандОтчетов().
//
Процедура ДобавитьКомандыОтчетов(КомандыОтчетов, Параметры) Экспорт
	
	
КонецПроцедуры

// Заполняет список команд печати.
//
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати.
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	//++ Локализация
	// Акт о списании товаров (ТОРГ-16)
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.МенеджерПечати = "Обработка.ПечатьТОРГ16";
	КомандаПечати.Идентификатор = "ТОРГ16";
	КомандаПечати.Представление = НСтр("ru = 'Акт о списании товаров (ТОРГ-16)'");
	КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
		
	Если ПолучитьФункциональнуюОпцию("ИспользоватьОтветственноеХранение") Тогда
		// МХ-3 
		КомандаПечати = КомандыПечати.Добавить();
		КомандаПечати.МенеджерПечати = "Обработка.ПечатьОбщихФорм";
		КомандаПечати.Идентификатор = "МХ3";
		КомандаПечати.Представление = НСтр("ru = 'Акт о возврате ТМЦ, сданных на хранение (МХ-3)'");
		КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
	КонецЕсли;
	//-- Локализация
	
КонецПроцедуры

#КонецОбласти

#Область Печать

// Формирует печатные формы.
//
// Параметры:
//  МассивОбъектов  - Массив    - ссылки на объекты, которые нужно распечатать;
//  ПараметрыПечати - Структура - дополнительные настройки печати;
//  КоллекцияПечатныхФорм - ТаблицаЗначений - сформированные табличные документы (выходной параметр)
//  ОбъектыПечати         - СписокЗначений  - значение - ссылка на объект;
//                                            представление - имя области в которой был выведен объект (выходной параметр);
//  ПараметрыВывода       - Структура       - дополнительные параметры сформированных табличных документов (выходной параметр).
//
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	
КонецПроцедуры

//++ Локализация 
// Функция получает данные для формирования печатной формы МХ - 3
//
Функция ПолучитьДанныеДляПечатнойФормыМХ3(ПараметрыПечати, МассивОбъектов) Экспорт
	
	КолонкаКодов = ФормированиеПечатныхФорм.ИмяДополнительнойКолонки();
	Если Не ЗначениеЗаполнено(КолонкаКодов) Тогда
		КолонкаКодов = "Код";
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	РасчетСебестоимостиТоваровОрганизации.Ссылка.ПредварительныйРасчет КАК ПредварительныйРасчет,
	|	Документ.Ссылка КАК Ссылка,
	|	Документ.Номер КАК Номер,
	|	Документ.Дата КАК Дата,
	|	Документ.Дата КАК ДатаДокумента,
	|	Документ.Организация КАК Организация,
	|	Документ.Склад КАК Склад,
	|	Склады.ИсточникИнформацииОЦенахДляПечати КАК ИсточникИнформацииОЦенахДляПечати,
	|	Склады.УчетныйВидЦены КАК ВидЦены,
	|	Склады.УчетныйВидЦены.ВалютаЦены КАК ВалютаЦены
	|ПОМЕСТИТЬ ВтШапка
	|ИЗ
	|	Документ.СписаниеНедостачТоваров КАК Документ
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.РасчетСебестоимостиТоваров.Организации КАК РасчетСебестоимостиТоваровОрганизации
	|		ПО (РасчетСебестоимостиТоваровОрганизации.Ссылка.Дата МЕЖДУ НАЧАЛОПЕРИОДА(Документ.Дата, МЕСЯЦ) И КОНЕЦПЕРИОДА(Документ.Дата, МЕСЯЦ))
	|			И (РасчетСебестоимостиТоваровОрганизации.Ссылка.Проведен)
	|			И (Документ.Организация = РасчетСебестоимостиТоваровОрганизации.Организация)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Склады КАК Склады
	|		ПО (Документ.Склад = Склады.Ссылка)
	|ГДЕ
	|	Документ.Ссылка В(&МассивДокументов)
	|	И Документ.Проведен
	|	И Склады.СкладОтветственногоХранения
	|	И Документ.Организация <> Склады.Поклажедержатель
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.Ссылка КАК Ссылка,
	|	Шапка.Склад КАК Склад,
	|	Товары.Номенклатура.ЕдиницаИзмерения КАК Упаковка,
	|	Товары.НомерСтроки КАК НомерСтроки,
	|	Товары.Номенклатура КАК Номенклатура,
	|	Товары.Характеристика КАК Характеристика,
	|	Товары.Номенклатура.ЕдиницаИзмерения.Представление КАК ЕдиницаИзмеренияНаименование,
	|	Товары.Номенклатура.ЕдиницаИзмерения.Код КАК ЕдиницаИзмеренияКод,
	|	Товары.Номенклатура.ЕдиницаИзмерения.Представление КАК ВидУпаковки,
	|	Товары.Количество КАК КоличествоУпаковок,
	|	Товары.Количество КАК Количество,
	|	КОНЕЦПЕРИОДА(Товары.Ссылка.Дата, ДЕНЬ) КАК ДатаПолученияЦены,
	|	Шапка.ВидЦены КАК ВидЦены,
	|	Шапка.ВалютаЦены КАК ВалютаЦены
	|ПОМЕСТИТЬ ВтТовары
	|ИЗ
	|	Документ.СписаниеНедостачТоваров.Товары КАК Товары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтШапка КАК Шапка
	|		ПО Товары.Ссылка = Шапка.Ссылка
	|ГДЕ
	|	Товары.Номенклатура.ТипНоменклатуры В (ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар), ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
	|	И (Шапка.ИсточникИнформацииОЦенахДляПечати = ЗНАЧЕНИЕ(Перечисление.ИсточникиИнформацииОЦенахДляПечати.ПоВидуЦен)
	|		ИЛИ (Шапка.ИсточникИнформацииОЦенахДляПечати = ЗНАЧЕНИЕ(Перечисление.ИсточникиИнформацииОЦенахДляПечати.ПоСебестоимости)
	|			И Шапка.ПредварительныйРасчет ЕСТЬ NULL))
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВидыЗапасов.Ссылка КАК Ссылка,
	|	ВидыЗапасов.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	ВидыЗапасов.ВидЗапасов КАК ВидЗапасов,
	|	Шапка.Организация КАК Организация,
	|	Аналитика.Склад КАК Склад,
	|	Аналитика.Номенклатура.ЕдиницаИзмерения КАК Упаковка,
	|	ВидыЗапасов.НомерСтроки КАК НомерСтроки,
	|	Аналитика.Номенклатура КАК Номенклатура,
	|	Аналитика.Характеристика КАК Характеристика,
	|	Аналитика.Номенклатура.ЕдиницаИзмерения.Представление КАК ЕдиницаИзмеренияНаименование,
	|	Аналитика.Номенклатура.ЕдиницаИзмерения.Код КАК ЕдиницаИзмеренияКод,
	|	Аналитика.Номенклатура.ЕдиницаИзмерения.Представление ВидУпаковки,
	|	ВидыЗапасов.Количество КАК КоличествоУпаковок,
	|	ВидыЗапасов.Количество КАК Количество,
	|	КОНЕЦПЕРИОДА(ВидыЗапасов.Ссылка.Дата, ДЕНЬ) КАК ДатаПолученияЦены,
	|	Аналитика.Склад.УчетныйВидЦены КАК ВидЦены,
	|	Аналитика.Склад.УчетныйВидЦены.ВалютаЦены КАК ВалютаЦены,
	|	Шапка.ПредварительныйРасчет КАК ПредварительныйРасчет
	|ПОМЕСТИТЬ ВтВидыЗапасов
	|ИЗ
	|	Документ.СписаниеНедостачТоваров.ВидыЗапасов КАК ВидыЗапасов
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК Аналитика
	|		ПО ВидыЗапасов.АналитикаУчетаНоменклатуры = Аналитика.КлючАналитики
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтШапка КАК Шапка
	|		ПО ВидыЗапасов.Ссылка = Шапка.Ссылка
	|ГДЕ
	|	Аналитика.Номенклатура.ТипНоменклатуры В (ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар), ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
	|	И Аналитика.Склад.ИсточникИнформацииОЦенахДляПечати = ЗНАЧЕНИЕ(Перечисление.ИсточникиИнформацииОЦенахДляПечати.ПоСебестоимости)
	|;
	|";
	
	СкладыСервер.ДополнитьТекстЗапросаДляПечатныхФормМХ1Х3(Запрос);
	
	Запрос.УстановитьПараметр("МассивДокументов", МассивОбъектов);
	Запрос.УстановитьПараметр("УчитыватьСебестоимостьТоваровПоВидамЗапасов",
		ПолучитьФункциональнуюОпцию("УчитыватьСебестоимостьТоваровПоВидамЗапасов"));
	Запрос.УстановитьПараметр("КолонкаКодов", КолонкаКодов);
	
	МассивРезультатов = Запрос.ВыполнитьПакет();
	РезультатПоШапке = МассивРезультатов[6];
	РезультатПоСкладам = МассивРезультатов[7];
	РезультатПоТабличнойЧасти = МассивРезультатов[8];
	
	СтруктураДанныхДляПечати = Новый Структура(
		"РезультатПоШапке, РезультатПоСкладам, РезультатПоТабличнойЧасти",
		РезультатПоШапке,
		РезультатПоСкладам,
		РезультатПоТабличнойЧасти);
		
	Возврат СтруктураДанныхДляПечати
	
КонецФункции

// Функция получает данные для формирования печатной формы ТОРГ-16.
//
// Параметры:
//	ПараметрыПечати   - Структура                                        - структура дополнительных параметров печати,
//	ДокументОснование - ДокументСсылка.СписаниеНедостачТоваров - ссылка на документ, который нужно распечатать.
//
// Возвращаемое значение:
//	Структура - структура с данными для печати формы ТОРГ-16.
//
Функция ПолучитьДанныеДляПечатнойФормыТОРГ16(ПараметрыПечати, ДокументОснование) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	ЗапросПредварительныхДанных = Новый Запрос;
	ЗапросПредварительныхДанных.Текст =
	"ВЫБРАТЬ
	|	СписаниеТоваров.Дата                                               КАК ДатаДокумента,
	|	СписаниеТоваров.Организация                                        КАК Организация,
	|	СписаниеТоваров.Склад                                              КАК Склад,
	|	СписаниеТоваров.ИсточникИнформацииОЦенахДляПечати                  КАК ИсточникИнформацииОЦенахДляПечати,
	|	СписаниеТоваров.ВидЦены                                            КАК ВидЦен,
	|	РасчетСебестоимостиТоваровОрганизации.Ссылка.ПредварительныйРасчет КАК ПредварительныйРасчет
	|
	|ИЗ
	|	Документ.СписаниеНедостачТоваров КАК СписаниеТоваров
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.РасчетСебестоимостиТоваров.Организации КАК РасчетСебестоимостиТоваровОрганизации
	|		ПО СписаниеТоваров.Организация = РасчетСебестоимостиТоваровОрганизации.Организация
	|			И (РасчетСебестоимостиТоваровОрганизации.Ссылка.Дата МЕЖДУ НАЧАЛОПЕРИОДА(СписаниеТоваров.Дата, МЕСЯЦ) И КОНЕЦПЕРИОДА(СписаниеТоваров.Дата, МЕСЯЦ))
	|			И (РасчетСебестоимостиТоваровОрганизации.Ссылка.Проведен)
	|
	|ГДЕ
	|	СписаниеТоваров.Ссылка = &ДокументОснование";
	
	ЗапросПредварительныхДанных.УстановитьПараметр("ДокументОснование", ДокументОснование);
	
	ПредварительныеДанныеРезультат = ЗапросПредварительныхДанных.Выполнить().Выбрать();
	
	ПредварительныеДанныеРезультат.Следующий();
	
	ДатаДокумента                     = ПредварительныеДанныеРезультат.ДатаДокумента;
	Организация                       = ПредварительныеДанныеРезультат.Организация;
	Склад                             = ПредварительныеДанныеРезультат.Склад;
	ИсточникИнформацииОЦенахДляПечати = ПредварительныеДанныеРезультат.ИсточникИнформацииОЦенахДляПечати;
	ВидЦены                           = ПредварительныеДанныеРезультат.ВидЦен;
	ПредварительныйРасчет             = ПредварительныеДанныеРезультат.ПредварительныйРасчет;
	
	ДопКолонка             = ФормированиеПечатныхФорм.ИмяДополнительнойКолонки();
	ИспользуетсяДопКолонка = ЗначениеЗаполнено(ДопКолонка);
	
	// Ответственные лица в печатной форме
	СтруктураОтветственных = ОтветственныеЛицаСервер.ПолучитьОтветственныеЛицаОрганизации(Организация,
		КонецДня(ДатаДокумента));
	
	УчитыватьСебестоимостьТоваровПоВидамЗапасов = ПолучитьФункциональнуюОпцию(
		"УчитыватьСебестоимостьТоваровПоВидамЗапасов");
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ДатаЦен",               ДатаДокумента);
	Запрос.УстановитьПараметр("ТекущийДокумент",       ДокументОснование);
	Запрос.УстановитьПараметр("Руководитель",          СтруктураОтветственных.Руководитель);
	Запрос.УстановитьПараметр("ДолжностьРуководителя", СтруктураОтветственных.РуководительДолжность);
	Запрос.УстановитьПараметр("ГлавныйБухгалтер",      СтруктураОтветственных.ГлавныйБухгалтер);
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	СписаниеНедостачТоваров.Ссылка             КАК Ссылка,
	|	КОЛИЧЕСТВО(ИнвентаризационнаяОпись.Ссылка) КАК Количество
	|
	|ПОМЕСТИТЬ КоличествоИнвентаризационныхОписей
	|ИЗ
	|	Документ.СписаниеНедостачТоваров КАК СписаниеНедостачТоваров
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ИнвентаризационнаяОпись КАК ИнвентаризационнаяОпись
	|		ПО (СписаниеНедостачТоваров.Дата МЕЖДУ ИнвентаризационнаяОпись.ДатаНачала И ИнвентаризационнаяОпись.ДатаОкончания)
	|			И СписаниеНедостачТоваров.Склад       = ИнвентаризационнаяОпись.Склад
	|			И СписаниеНедостачТоваров.Организация = ИнвентаризационнаяОпись.Организация
	|			И (ИнвентаризационнаяОпись.Проведен)
	|ГДЕ
	|	СписаниеНедостачТоваров.Ссылка = &ТекущийДокумент
	|
	|СГРУППИРОВАТЬ ПО
	|	СписаниеНедостачТоваров.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	КоличествоИнвентаризационныхОписей.Ссылка КАК Ссылка,
	|	ВЫБОР
	|		КОГДА КоличествоИнвентаризационныхОписей.Количество = 1
	|			ТОГДА ИнвентаризационнаяОпись.Ссылка
	|		ИНАЧЕ ЗНАЧЕНИЕ(Документ.ИнвентаризационнаяОпись.ПустаяСсылка)
	|	КОНЕЦ                                     КАК Основание
	|
	|ПОМЕСТИТЬ ДокументОснование
	|ИЗ
	|	КоличествоИнвентаризационныхОписей КАК КоличествоИнвентаризационныхОписей
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ИнвентаризационнаяОпись КАК ИнвентаризационнаяОпись
	|		ПО (КоличествоИнвентаризационныхОписей.Ссылка.Дата МЕЖДУ ИнвентаризационнаяОпись.ДатаНачала И ИнвентаризационнаяОпись.ДатаОкончания)
	|			И КоличествоИнвентаризационныхОписей.Ссылка.Склад = ИнвентаризационнаяОпись.Склад
	|			И КоличествоИнвентаризационныхОписей.Ссылка.Организация = ИнвентаризационнаяОпись.Организация
	|			И (ИнвентаризационнаяОпись.Проведен)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Документ.Ссылка                                                     КАК Ссылка,
	|	ДокументСписания.Номер                                              КАК Номер,
	|	ДокументСписания.Дата                                               КАК ДатаДокумента,
	|	ДокументСписания.Организация                                        КАК Организация,
	|	ПРЕДСТАВЛЕНИЕ(ДокументСписания.Организация.НаименованиеСокращенное) КАК ОрганизацияПредставление,
	|	ПРЕДСТАВЛЕНИЕ(ДокументСписания.Организация.КодПоОКПО)               КАК ОрганизацияПоОКПО,
	|	ПРЕДСТАВЛЕНИЕ(ДокументСписания.Организация.Префикс)                 КАК Префикс,
	|	ДокументСписания.Склад                                              КАК Подразделение,
	|	ПРЕДСТАВЛЕНИЕ(ДокументСписания.Склад)                               КАК ПодразделениеПредставление,
	|	ДокументСписания.Склад.ТекущийОтветственный                         КАК Кладовщик,
	|	ДокументСписания.Склад.ТекущаяДолжностьОтветственного               КАК ДолжностьКладовщика,
	|	ДокументСписания.Ответственный.ФизическоеЛицо                       КАК Ответственный,
	|	&Руководитель                                                       КАК Руководитель,
	|	&ДолжностьРуководителя                                              КАК ДолжностьРуководителя,
	|	&ГлавныйБухгалтер                                                   КАК ГлавныйБухгалтер,
	|	Документ.Основание.Дата                                             КАК ОснованиеДата,
	|	Документ.Основание.Номер                                            КАК НомерОснования,
	|	Документ.Основание                                                  КАК ДокументОснование
	|ИЗ
	|	ДокументОснование КАК Документ
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.СписаниеНедостачТоваров КАК ДокументСписания
	|		ПО Документ.Ссылка = ДокументСписания.Ссылка
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////";
	
	Если ИсточникИнформацииОЦенахДляПечати = Перечисления.ИсточникиИнформацииОЦенахДляПечати.ПоВидуЦен Тогда
		
		ТекстЗапроса = ТекстЗапроса + "
		|ВЫБРАТЬ
		|	ЦеныНоменклатуры.Номенклатура   КАК Номенклатура,
		|	ЦеныНоменклатуры.Характеристика КАК Характеристика,
		|	ЦеныНоменклатуры.Упаковка       КАК Упаковка,
		|	ЦеныНоменклатуры.Цена           КАК Цена
		|
		|ПОМЕСТИТЬ ЦеныНоменклатуры
		|ИЗ
		|	РегистрСведений.ЦеныНоменклатуры.СрезПоследних(КОНЕЦПЕРИОДА(&ДатаЦен, ДЕНЬ),
		|		(Номенклатура, ВидЦены, Характеристика) В
		|			(ВЫБРАТЬ
		|				Товары.Номенклатура,
		|				&ВидЦен,
		|				Товары.Характеристика
		|			ИЗ
		|				Документ.СписаниеНедостачТоваров.Товары КАК Товары
		|			ГДЕ
		|				Товары.Ссылка = &ТекущийДокумент)) КАК ЦеныНоменклатуры
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТоварыСписания.НомерСтроки                                  КАК НомерСтроки,
		|	&ТекстЗапросаТоварКод                                       КАК ТоварКод,
		|	ТоварыСписания.Номенклатура                                 КАК Номенклатура,
		|	ТоварыСписания.Номенклатура.НаименованиеПолное              КАК НоменклатураПредставление,
		|	ТоварыСписания.Характеристика.НаименованиеПолное            КАК ХарактеристикаПредставление,
		|	ТоварыСписания.Номенклатура.ЕдиницаИзмерения.Код            КАК ЕдиницаИзмеренияКодПоОКЕИ,
		|	ПРЕДСТАВЛЕНИЕ(ТоварыСписания.Номенклатура.ЕдиницаИзмерения) КАК ЕдиницаИзмеренияПредставление,
		|	&ТекстЗапросаВес                                            КАК МассаОдногоМеста,
		|	ТоварыСписания.Количество                                   КАК КоличествоМест,
		|	ВЫБОР
		|		КОГДА НЕ &ТекстЗапросаКоэффициентУпаковки ЕСТЬ NULL
		|				И &ТекстЗапросаКоэффициентУпаковки <> 0
		|			ТОГДА ЕСТЬNULL(ЦеныНоменклатуры.Цена, 0) / &ТекстЗапросаКоэффициентУпаковки
		|		ИНАЧЕ ЕСТЬNULL(ЦеныНоменклатуры.Цена, 0)
		|	КОНЕЦ                                                       КАК Цена
		|ИЗ
		|	Документ.СписаниеНедостачТоваров.Товары КАК ТоварыСписания
		|		ЛЕВОЕ СОЕДИНЕНИЕ ЦеныНоменклатуры КАК ЦеныНоменклатуры
		|		ПО ТоварыСписания.Номенклатура      = ЦеныНоменклатуры.Номенклатура
		|			И ТоварыСписания.Характеристика = ЦеныНоменклатуры.Характеристика
		|ГДЕ
		|	ТоварыСписания.Ссылка = &ТекущийДокумент
		|
		|УПОРЯДОЧИТЬ ПО
		|	ТоварыСписания.НомерСтроки";
		
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ТекстЗапросаКоэффициентУпаковки",
			Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаКоэффициентаУпаковки("ЦеныНоменклатуры.Упаковка",
				"ЦеныНоменклатуры.Номенклатура"));
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ТекстЗапросаВес", 
			Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаКоэффициентаУпаковки("ТоварыСписания.Номенклатура.ЕдиницаИзмерения",
				"ТоварыСписания.Номенклатура"));
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ТекстЗапросаТоварКод", "ТоварыСписания.Номенклатура." +
			?(ИспользуетсяДопКолонка, ДопКолонка, "Код"));
		
		Запрос.Текст = ТекстЗапроса;
		Запрос.УстановитьПараметр("ВидЦен", ВидЦены);
		
		Результаты = Запрос.ВыполнитьПакет();
		РезультатПоШапке    = Результаты[2];
		РезультатПоДатам    = Результаты[4];
		РезультатПоТоварам  = Результаты[4];
		РезультатКурсыВалют = ТаблицаКурсовВалют(ДокументОснование);
		
	ИначеЕсли ИсточникИнформацииОЦенахДляПечати = Перечисления.ИсточникиИнформацииОЦенахДляПечати.ПоСебестоимости Тогда
		
		Если ПредварительныйРасчет = Null Тогда
			ТекстСообщения = НСтр("ru = 'Не удалось получить цены по себестоимости для документа %Документ%: на %Период% не произведен расчет себестоимости.'");
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Документ%", ДокументОснование);
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Период%", Формат(НачалоМесяца(ДатаДокумента),"ДЛФ=DD"));
			
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
			
			Возврат Неопределено;
		КонецЕсли;
		
		Запрос.УстановитьПараметр("Организация", Организация);
		Запрос.УстановитьПараметр("Склад",       Склад);
		Запрос.УстановитьПараметр("УчитыватьСебестоимостьТоваровПоВидамЗапасов",
			УчитыватьСебестоимостьТоваровПоВидамЗапасов);
		
		Если ПредварительныйРасчет Тогда
			
			ТекстСообщения = НСтр("ru = 'При печати документа %Документ% использовались данные предварительного расчета себестоимости.'");
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Документ%", ДокументОснование);
			
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
			
			ТекстЗапроса = ТекстЗапроса + "
			|ВЫБРАТЬ
			|	СписываемыеВидыЗапасов.НомерСтроки КАК НомерСтроки,
			|	КлючиАналитики.Номенклатура        КАК Номенклатура,
			|	КлючиАналитики.Характеристика      КАК Характеристика,
			|	СписываемыеВидыЗапасов.ВидЗапасов  КАК ВидЗапасов,
			|	КлючиАналитики.Ссылка              КАК КлючАналитикиУчетаНоменклатуры,
			|	СписываемыеВидыЗапасов.Количество  КАК Количество
			|
			|ПОМЕСТИТЬ ТаблицаКлючейАналитики
			|ИЗ
			|	Документ.СписаниеНедостачТоваров.ВидыЗапасов КАК СписываемыеВидыЗапасов
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.КлючиАналитикиУчетаНоменклатуры КАК КлючиАналитики
			|		ПО (КлючиАналитики.Ссылка   = СписываемыеВидыЗапасов.АналитикаУчетаНоменклатуры)
			|			И (КлючиАналитики.Склад = &Склад)
			|ГДЕ
			|	СписываемыеВидыЗапасов.Ссылка = &ТекущийДокумент
			|	И СписываемыеВидыЗапасов.Ссылка.Проведен
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ЦеныНоменклатуры.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
			|	ЦеныНоменклатуры.Организация                КАК Организация,
			|	ЦеныНоменклатуры.ВидЗапасов                 КАК ВидЗапасов,
			|	(ЦеныНоменклатуры.СтоимостьРегл
			|		+ ЦеныНоменклатуры.ДопРасходыРегл
			|		+ ЦеныНоменклатуры.ТрудозатратыРегл
			|		+ ЦеныНоменклатуры.ПостатейныеПостоянныеРегл
			|		+ ЦеныНоменклатуры.ПостатейныеПеременныеРегл) КАК Цена
			|
			|ПОМЕСТИТЬ ЦеныНоменклатуры
			|ИЗ
			|	РегистрСведений.СтоимостьТоваров.СрезПоследних(КОНЕЦПЕРИОДА(&ДатаЦен, ДЕНЬ),
			|		(АналитикаУчетаНоменклатуры, Организация, ВидЗапасов) В
			|			(ВЫБРАТЬ
			|				Таблица.КлючАналитикиУчетаНоменклатуры,
			|				&Организация,
			|				ВЫБОР
			|					КОГДА &УчитыватьСебестоимостьТоваровПоВидамЗапасов
			|						ТОГДА Таблица.ВидЗапасов
			|					ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ВидыЗапасов.ПустаяСсылка)
			|				КОНЕЦ КАК ВидЗапасов
			|			ИЗ
			|				ТаблицаКлючейАналитики КАК Таблица)) КАК ЦеныНоменклатуры
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ТоварыСписания.НомерСтроки                                  КАК НомерСтроки,
			|	ТоварыСписания.Номенклатура                                 КАК Номенклатура,
			|	ТоварыСписания.Номенклатура." + ?(ИспользуетсяДопКолонка, ДопКолонка, "Код") +" КАК ТоварКод," + "
			|	ТоварыСписания.Номенклатура.НаименованиеПолное              КАК НоменклатураПредставление,
			|	ТоварыСписания.Характеристика.НаименованиеПолное            КАК ХарактеристикаПредставление,
			|	ТоварыСписания.Номенклатура.ЕдиницаИзмерения.Код            КАК ЕдиницаИзмеренияКодПоОКЕИ,
			|	ПРЕДСТАВЛЕНИЕ(ТоварыСписания.Номенклатура.ЕдиницаИзмерения) КАК ЕдиницаИзмеренияПредставление,
			|	&ТекстЗапросаВес                                            КАК МассаОдногоМеста,
			|	ТоварыСписания.Количество                                   КАК КоличествоМест,
			|	ЕСТЬNULL(ЦеныНоменклатуры.Цена, 0)                          КАК Цена
			|ИЗ
			|	ТаблицаКлючейАналитики КАК ТоварыСписания
			|		ЛЕВОЕ СОЕДИНЕНИЕ ЦеныНоменклатуры КАК ЦеныНоменклатуры
			|		ПО ТоварыСписания.КлючАналитикиУчетаНоменклатуры = ЦеныНоменклатуры.АналитикаУчетаНоменклатуры
			|			И (ТоварыСписания.ВидЗапасов = ЦеныНоменклатуры.ВидЗапасов
			|				И &УчитыватьСебестоимостьТоваровПоВидамЗапасов
			|				ИЛИ НЕ &УчитыватьСебестоимостьТоваровПоВидамЗапасов)
			|			И (ЦеныНоменклатуры.Организация = &Организация)
			|
			|УПОРЯДОЧИТЬ ПО
			|	ТоварыСписания.НомерСтроки";
			
			ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ТекстЗапросаВес",
				Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаВесУпаковки("ТоварыСписания.Номенклатура.ЕдиницаИзмерения",
					"ТоварыСписания.Номенклатура"));
			
			Запрос.Текст = ТекстЗапроса;
			
			Результаты = Запрос.ВыполнитьПакет();
			РезультатПоШапке    = Результаты[2];
			РезультатПоДатам    = Результаты[5];
			РезультатПоТоварам  = Результаты[5];
			РезультатКурсыВалют = ТаблицаКурсовВалют(ДокументОснование);
			
		Иначе
			
			ТекстЗапроса = ТекстЗапроса + "
			|ВЫБРАТЬ
			|	СписываемыеВидыЗапасов.НомерСтроки                               КАК НомерСтроки,
			|	СписываемыеВидыЗапасов.АналитикаУчетаНоменклатуры.Номенклатура   КАК Номенклатура,
			|	СписываемыеВидыЗапасов.АналитикаУчетаНоменклатуры.Характеристика КАК Характеристика,
			|	СписываемыеВидыЗапасов.АналитикаУчетаНоменклатуры.Серия          КАК Серия,
			|	СписываемыеВидыЗапасов.ВидЗапасов                                КАК ВидЗапасов,
			|	СписываемыеВидыЗапасов.АналитикаУчетаНоменклатуры                КАК КлючАналитикиУчетаНоменклатуры,
			|	СписываемыеВидыЗапасов.Количество                                КАК Количество
			|
			|ПОМЕСТИТЬ ТоварыИнвентаризации
			|ИЗ
			|	Документ.СписаниеНедостачТоваров.ВидыЗапасов КАК СписываемыеВидыЗапасов
			|ГДЕ
			|	СписываемыеВидыЗапасов.Ссылка = &ТекущийДокумент
			|	И СписываемыеВидыЗапасов.Ссылка.Проведен
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ РАЗЛИЧНЫЕ
			|	ТоварыКОформлениюОтчетовКомитенту.ВидЗапасов                 КАК ВидЗапасов,
			|	ТоварыКОформлениюОтчетовКомитенту.КорВидЗапасов              КАК НовыйВидЗапасов,
			|	ТоварыКОформлениюОтчетовКомитенту.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
			|	ТоварыИнвентаризации.Номенклатура                            КАК Номенклатура,
			|	ТоварыИнвентаризации.Характеристика                          КАК Характеристика,
			|	ТоварыИнвентаризации.Серия                                   КАК Серия
			|
			|ПОМЕСТИТЬ ВидыЗапасовИАналитикиУчетаНоменклатурыКомиссионныхТоваров
			|ИЗ
			|	ТоварыИнвентаризации КАК ТоварыИнвентаризации
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ТоварыКОформлениюОтчетовКомитенту КАК ТоварыКОформлениюОтчетовКомитенту
			|		ПО (ТоварыКОформлениюОтчетовКомитенту.ВидЗапасов = ТоварыИнвентаризации.ВидЗапасов)
			|			И (ТоварыКОформлениюОтчетовКомитенту.АналитикаУчетаНоменклатуры.Номенклатура = ТоварыИнвентаризации.КлючАналитикиУчетаНоменклатуры.Номенклатура)
			|			И (ТоварыКОформлениюОтчетовКомитенту.АналитикаУчетаНоменклатуры.Характеристика = ТоварыИнвентаризации.КлючАналитикиУчетаНоменклатуры.Характеристика)
			|			И ТоварыИнвентаризации.КлючАналитикиУчетаНоменклатуры.Серия = ТоварыКОформлениюОтчетовКомитенту.АналитикаУчетаНоменклатуры.Серия
			|ГДЕ
			|	ТоварыИнвентаризации.ВидЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
			|	И ТоварыКОформлениюОтчетовКомитенту.КорВидЗапасов <> ЗНАЧЕНИЕ(Справочник.ВидыЗапасов.ПустаяСсылка)
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ТоварыИнвентаризации.НомерСтроки    КАК НомерСтроки,
			|	ТоварыИнвентаризации.Номенклатура   КАК Номенклатура,
			|	ТоварыИнвентаризации.Характеристика КАК Характеристика,
			|	ВЫБОР
			|		КОГДА ВидыЗапасовИАналитикиУчетаНоменклатурыКомиссионныхТоваров.ВидЗапасов ЕСТЬ NULL 
			|			ТОГДА ТоварыИнвентаризации.ВидЗапасов
			|		ИНАЧЕ ВидыЗапасовИАналитикиУчетаНоменклатурыКомиссионныхТоваров.НовыйВидЗапасов
			|	КОНЕЦ                               КАК ВидЗапасов,
			|	ВЫБОР
			|		КОГДА ВидыЗапасовИАналитикиУчетаНоменклатурыКомиссионныхТоваров.ВидЗапасов ЕСТЬ NULL 
			|			ТОГДА ТоварыИнвентаризации.КлючАналитикиУчетаНоменклатуры
			|		ИНАЧЕ ВидыЗапасовИАналитикиУчетаНоменклатурыКомиссионныхТоваров.АналитикаУчетаНоменклатуры
			|	КОНЕЦ                               КАК КлючАналитикиУчетаНоменклатуры,
			|	ТоварыИнвентаризации.Количество     КАК Количество
			|
			|ПОМЕСТИТЬ ТаблицаИнвентаризации
			|ИЗ
			|	ТоварыИнвентаризации КАК ТоварыИнвентаризации
			|		ЛЕВОЕ СОЕДИНЕНИЕ ВидыЗапасовИАналитикиУчетаНоменклатурыКомиссионныхТоваров КАК ВидыЗапасовИАналитикиУчетаНоменклатурыКомиссионныхТоваров
			|		ПО (ВидыЗапасовИАналитикиУчетаНоменклатурыКомиссионныхТоваров.ВидЗапасов = ТоварыИнвентаризации.ВидЗапасов)
			|			И (ВидыЗапасовИАналитикиУчетаНоменклатурыКомиссионныхТоваров.Номенклатура = ТоварыИнвентаризации.Номенклатура)
			|			И (ВидыЗапасовИАналитикиУчетаНоменклатурыКомиссионныхТоваров.Характеристика = ТоварыИнвентаризации.Характеристика)
			|			И (ВидыЗапасовИАналитикиУчетаНоменклатурыКомиссионныхТоваров.Серия = ТоварыИнвентаризации.Серия)
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ТаблицаИнвентаризации.КлючАналитикиУчетаНоменклатуры КАК КлючАналитикиУчетаНоменклатуры,
			|	ТаблицаИнвентаризации.ВидЗапасов                     КАК ВидЗапасов,
			|	ВЫБОР
			|		КОГДА СУММА(ЕСТЬNULL(СебестоимостьТоваровПоРегистратору.Количество, 0)) = 0
			|			ТОГДА 0
			|		ИНАЧЕ СУММА(ЕСТЬNULL(СебестоимостьТоваровПоРегистратору.СтоимостьРегл, 0)
			|				+ ЕСТЬNULL(СебестоимостьТоваровПоРегистратору.ДопРасходыРегл, 0)
			|				+ ЕСТЬNULL(СебестоимостьТоваровПоРегистратору.ТрудозатратыРегл, 0)
			|				+ ЕСТЬNULL(СебестоимостьТоваровПоРегистратору.ПостатейныеПостоянныеРегл, 0)
			|				+ ЕСТЬNULL(СебестоимостьТоваровПоРегистратору.ПостатейныеПеременныеРегл, 0))
			|			/ СУММА(СебестоимостьТоваровПоРегистратору.Количество)
			|	КОНЕЦ                                                КАК Цена
			|
			|ПОМЕСТИТЬ ТаблицаЦен
			|ИЗ
			|	ТаблицаИнвентаризации КАК ТаблицаИнвентаризации
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.СебестоимостьТоваров КАК СебестоимостьТоваровПоРегистратору
			|		ПО ТаблицаИнвентаризации.КлючАналитикиУчетаНоменклатуры = СебестоимостьТоваровПоРегистратору.АналитикаУчетаНоменклатуры
			|			И (ТаблицаИнвентаризации.ВидЗапасов = СебестоимостьТоваровПоРегистратору.ВидЗапасов
			|					И &УчитыватьСебестоимостьТоваровПоВидамЗапасов
			|				ИЛИ НЕ &УчитыватьСебестоимостьТоваровПоВидамЗапасов)
			|			И (СебестоимостьТоваровПоРегистратору.Регистратор = &ТекущийДокумент)
			|
			|СГРУППИРОВАТЬ ПО
			|	ТаблицаИнвентаризации.КлючАналитикиУчетаНоменклатуры,
			|	СебестоимостьТоваровПоРегистратору.АналитикаУчетаНоменклатуры,
			|	ТаблицаИнвентаризации.ВидЗапасов
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ТаблицаИнвентаризации.НомерСтроки                       КАК НомерСтроки,
			|	ТаблицаИнвентаризации.Номенклатура                      КАК Номенклатура,
			|	ТаблицаИнвентаризации.Номенклатура." + ?(ИспользуетсяДопКолонка, ДопКолонка, "Код") +" КАК ТоварКод," + "
			|	ТаблицаИнвентаризации.Номенклатура.НаименованиеПолное   КАК НоменклатураПредставление,
			|	ВЫРАЗИТЬ(ТаблицаИнвентаризации.Характеристика КАК Справочник.ХарактеристикиНоменклатуры).НаименованиеПолное КАК ХарактеристикаПредставление,
			|	ТаблицаИнвентаризации.Номенклатура.ЕдиницаИзмерения.Код КАК ЕдиницаИзмеренияКодПоОКЕИ,
			|	ПРЕДСТАВЛЕНИЕ(ВЫРАЗИТЬ(ТаблицаИнвентаризации.Номенклатура КАК Справочник.Номенклатура).ЕдиницаИзмерения) КАК ЕдиницаИзмеренияПредставление,
			|	&ТекстЗапросаВес                                        КАК МассаОдногоМеста,
			|	ТаблицаИнвентаризации.Количество                        КАК КоличествоМест,
			|	ТаблицаЦен.Цена                                         КАК Цена
			|ИЗ
			|	ТаблицаИнвентаризации КАК ТаблицаИнвентаризации
			|		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаЦен КАК ТаблицаЦен
			|		ПО ТаблицаИнвентаризации.ВидЗапасов = ТаблицаЦен.ВидЗапасов
			|			И ТаблицаИнвентаризации.КлючАналитикиУчетаНоменклатуры = ТаблицаЦен.КлючАналитикиУчетаНоменклатуры
			|
			|УПОРЯДОЧИТЬ ПО
			|	ТаблицаИнвентаризации.НомерСтроки";
			
			ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ТекстЗапросаВес",
				Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаВесУпаковки(
					"ТаблицаИнвентаризации.Номенклатура.ЕдиницаИзмерения", "ТаблицаИнвентаризации.Номенклатура"));
			
			Запрос.Текст = ТекстЗапроса;
			
			Результаты = Запрос.ВыполнитьПакет();
			РезультатПоШапке    = Результаты[2];
			РезультатПоДатам    = Результаты[7];
			РезультатПоТоварам  = Результаты[7];
			РезультатКурсыВалют = ТаблицаКурсовВалют(ДокументОснование);
			
		КонецЕсли;
		
	КонецЕсли;
	
	СтруктураВозврата = Новый Структура;
	СтруктураВозврата.Вставить("РезультатПоШапке",    РезультатПоШапке);
	СтруктураВозврата.Вставить("РезультатПоДатам",    РезультатПоДатам);
	СтруктураВозврата.Вставить("РезультатПоТоварам",  РезультатПоТоварам);
	СтруктураВозврата.Вставить("РезультатКурсыВалют", РезультатКурсыВалют);
	
	Возврат СтруктураВозврата;
	
КонецФункции

Функция ТаблицаКурсовВалют(МассивДокументов)
	
	ВалютаРегламентированногоУчета = Константы.ВалютаРегламентированногоУчета.Получить();
	
	Запрос = Новый Запрос("ВЫБРАТЬ РАЗЛИЧНЫЕ
	                      |	СписаниеНедостачТоваров.Ссылка КАК Ссылка,
	                      |	НАЧАЛОПЕРИОДА(СписаниеНедостачТоваров.Дата, ДЕНЬ) КАК Дата,
	                      |	СписаниеНедостачТоваров.ВидЦены.ВалютаЦены КАК Валюта
	                      |ИЗ
	                      |	Документ.СписаниеНедостачТоваров КАК СписаниеНедостачТоваров
	                      |ГДЕ
	                      |	СписаниеНедостачТоваров.Ссылка В(&МассивДокументов)
	                      |	И СписаниеНедостачТоваров.ВидЦены.ВалютаЦены <> &ВалютаРегламентированногоУчета
	                      |
	                      |УПОРЯДОЧИТЬ ПО
	                      |	Валюта,
	                      |	Дата");
	Запрос.УстановитьПараметр("ВалютаРегламентированногоУчета", ВалютаРегламентированногоУчета);
	Запрос.УстановитьПараметр("МассивДокументов", МассивДокументов);
	
	ТаблицаКурсовВалют = Новый ТаблицаЗначений;
	ТаблицаКурсовВалют.Колонки.Добавить("Ссылка",    Новый ОписаниеТипов("ДокументСсылка.СписаниеНедостачТоваров"));
	ТаблицаКурсовВалют.Колонки.Добавить("Валюта",    Новый ОписаниеТипов("СправочникСсылка.Валюты"));
	ТаблицаКурсовВалют.Колонки.Добавить("Дата",      Новый ОписаниеТипов("Дата"));
	ТаблицаКурсовВалют.Колонки.Добавить("Курс",      Новый ОписаниеТипов("Число"));
	ТаблицаКурсовВалют.Колонки.Добавить("Кратность", Новый ОписаниеТипов("Число"));
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		НоваяСтрока = ТаблицаКурсовВалют.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
		
		КурсыВалюты = РаботаСКурсамиВалют.ПолучитьКурсВалюты(Выборка.Валюта, Выборка.Дата);
		НоваяСтрока.Курс = КурсыВалюты.Курс;
		НоваяСтрока.Кратность = КурсыВалюты.Кратность;
		
	КонецЦикла;
	
	Возврат ТаблицаКурсовВалют;
	
КонецФункции // ТаблицаКурсовВалют()
//-- Локализация

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область Проведение

// Процедура дополняет тексты запросов проведения документа.
//
// Параметры:
//  Запрос - Запрос - Общий запрос проведения документа.
//  ТекстыЗапроса - СписокЗначений - Список текстов запроса проведения.
//  Регистры - Строка, Структура - Список регистров проведения документа через запятую или в ключах структуры.
//
Процедура ДополнитьТекстыЗапросовПроведения(Запрос, ТекстыЗапроса, Регистры) Экспорт
	
	//++ Локализация
	//-- Локализация
	
КонецПроцедуры

//++ Локализация
//-- Локализация
#КонецОбласти

#КонецОбласти
