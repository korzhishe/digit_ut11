
#Область ПрограммныйИнтерфейс

#Область ОбработчикиСобытий

// Вызывается из соответствующего обработчика документа
//
// Параметры:
//  Объект - ДокументОбъект - Обрабатываемый документ.
//  Отказ - Булево - Признак проведения документа.
//                   Если в теле процедуры-обработчика установить данному параметру значение Истина,
//                   то проведение документа выполнено не будет.
//  РежимПроведения - РежимПроведенияДокумента - В данный параметр передается текущий режим проведения.
//
Процедура ОбработкаПроведения(Объект, Отказ, РежимПроведения) Экспорт
	
	Движения = Объект.Движения;
	ДополнительныеСвойства = Объект.ДополнительныеСвойства;
	//++ Локализация
	//-- Локализация
	
КонецПроцедуры

// Вызывается из соответствующего обработчика документа
//
// Параметры:
//  Объект - ДокументОбъект - Обрабатываемый объект
//  Отказ - Булево - Если в теле процедуры-обработчика установить данному параметру значение Истина,
//                   то будет выполнен отказ от продолжения работы после выполнения проверки заполнения.
//  ПроверяемыеРеквизиты - Массив - Массив путей к реквизитам, для которых будет выполнена проверка заполнения.
//
Процедура ОбработкаПроверкиЗаполнения(Объект, Отказ, ПроверяемыеРеквизиты) Экспорт
	
	
КонецПроцедуры

// Вызывается из соответствующего обработчика документа
//
// Параметры:
//  Объект - ДокументОбъект - Обрабатываемый объект.
//  ДанныеЗаполнения - Произвольный - Значение, которое используется как основание для заполнения.
//  СтандартнаяОбработка - Булево - В данный параметр передается признак выполнения стандартной (системной) обработки события.
//
Процедура ОбработкаЗаполнения(Объект, ДанныеЗаполнения, СтандартнаяОбработка) Экспорт
	
	
КонецПроцедуры

// Вызывается из соответствующего обработчика документа
//
// Параметры:
//  Объект - ДокументОбъект - Обрабатываемый объект
//  Отказ - Булево - Признак отказа от записи.
//                   Если в теле процедуры-обработчика установить данному параметру значение Истина,
//                   то запись выполнена не будет и будет вызвано исключение.
//
Процедура ОбработкаУдаленияПроведения(Объект, Отказ) Экспорт
	
	
КонецПроцедуры

// Вызывается из соответствующего обработчика документа
//
// Параметры:
//  Объект - ДокументОбъект - Обрабатываемый объект
//  Отказ - Булево - Признак отказа от записи.
//                   Если в теле процедуры-обработчика установить данному параметру значение Истина,
//                   то запись выполнена не будет и будет вызвано исключение.
//  РежимЗаписи - РежимЗаписиДокумента - В параметр передается текущий режим записи документа. Позволяет определить в теле процедуры режим записи.
//  РежимПроведения - РежимПроведенияДокумента - В данный параметр передается текущий режим проведения.
//
Процедура ПередЗаписью(Объект, Отказ, РежимЗаписи, РежимПроведения) Экспорт
	
	
КонецПроцедуры

// Вызывается из соответствующего обработчика документа
//
// Параметры:
//  Объект - ДокументОбъект - Обрабатываемый объект
//  Отказ - Булево - Признак отказа от записи.
//                   Если в теле процедуры-обработчика установить данному параметру значение Истина, то запись выполнена не будет и будет вызвано исключение.
//
Процедура ПриЗаписи(Объект, Отказ) Экспорт
	
	
КонецПроцедуры

// Вызывается из соответствующего обработчика документа
//
// Параметры:
//  Объект - ДокументОбъект - Обрабатываемый объект
//  ОбъектКопирования - ДокументОбъект.<Имя документа> - Исходный документ, который является источником копирования.
//
Процедура ПриКопировании(Объект, ОбъектКопирования) Экспорт
	
	
КонецПроцедуры

#КонецОбласти

#Область ПодключаемыеКоманды

// Определяет список команд создания на основании.
//
// Параметры:
//   КомандыСозданияНаОсновании - ТаблицаЗначений - Таблица с командами создания на основании. Для изменения.
//       См. описание 1 параметра процедуры СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании().
//   Параметры - Структура - Вспомогательные параметры. Для чтения.
//       См. описание 2 параметра процедуры СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании().
//
Процедура ДобавитьКомандыСозданияНаОсновании(КомандыСозданияНаОсновании, Параметры) Экспорт
	
	
КонецПроцедуры

// Добавляет команду создания документа "Авансовый отчет".
//
// Параметры:
//   КомандыСозданияНаОсновании - ТаблицаЗначений - Таблица с командами создания на основании. Для изменения.
//       См. описание 1 параметра процедуры СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании().
//
Процедура ДобавитьКомандуСоздатьНаОсновании(КомандыСозданияНаОсновании) Экспорт


КонецПроцедуры

// Определяет список команд отчетов.
//
// Параметры:
//   КомандыОтчетов - ТаблицаЗначений - Таблица с командами отчетов. Для изменения.
//       См. описание 1 параметра процедуры ВариантыОтчетовПереопределяемый.ПередДобавлениемКомандОтчетов().
//   Параметры - Структура - Вспомогательные параметры. Для чтения.
//       См. описание 2 параметра процедуры ВариантыОтчетовПереопределяемый.ПередДобавлениемКомандОтчетов().
//
Процедура ДобавитьКомандыОтчетов(КомандыОтчетов, Параметры) Экспорт
	
	
КонецПроцедуры

// Заполняет список команд печати.
//
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати.
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	//++ Локализация
	Если ПолучитьФункциональнуюОпцию("ИспользоватьОтветственноеХранение") Тогда
		// МХ-1 
		КомандаПечати = КомандыПечати.Добавить();
		КомандаПечати.МенеджерПечати = "Обработка.ПечатьОбщихФорм";
		КомандаПечати.Идентификатор = "МХ1";
		КомандаПечати.Представление = НСтр("ru='Акт о приеме-передаче ТМЦ на хранение (МХ-1)'");
		КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
	КонецЕсли;
	//-- Локализация
КонецПроцедуры

#КонецОбласти

#Область Печать

// Формирует печатные формы.
//
// Параметры:
//  МассивОбъектов  - Массив    - ссылки на объекты, которые нужно распечатать;
//  ПараметрыПечати - Структура - дополнительные настройки печати;
//  КоллекцияПечатныхФорм - ТаблицаЗначений - сформированные табличные документы (выходной параметр)
//  ОбъектыПечати         - СписокЗначений  - значение - ссылка на объект;
//                                            представление - имя области в которой был выведен объект (выходной параметр);
//  ПараметрыВывода       - Структура       - дополнительные параметры сформированных табличных документов (выходной параметр).
//
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	
КонецПроцедуры

//++ Локализация

// Формирует текст запроса для получения данных основания при печати Счет-фактуры.
//
Функция ТекстЗапросаДанныхОснованияДляПечатнойФормыСчетФактура() Экспорт
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ДанныеДокументов.Ссылка                                   КАК Ссылка,
	|	ДанныеДокументов.Валюта                                   КАК Валюта,
	|	ДанныеДокументов.Организация                              КАК Организация,
	|	ДанныеДокументов.НалогообложениеНДС                       КАК НалогообложениеНДС,
	|	ДанныеДокументов.Подразделение                            КАК Подразделение,
	|	ДанныеДокументов.Склад                                    КАК Склад
	|
	|//ОператорПОМЕСТИТЬ
	|ИЗ
	|	Документ.ВозвратТоваровОтКлиента КАК ДанныеДокументов
	|ГДЕ
	|	ДанныеДокументов.Ссылка В (&ДокументОснование_ВозвратТоваровОтКлиента)";
	
	Возврат ТекстЗапроса;
	
КонецФункции

// Функция получает данные для формирования печатной формы МХ - 1
//
Функция ПолучитьДанныеДляПечатнойФормыМХ1(ПараметрыПечати, МассивОбъектов) Экспорт
	
	КолонкаКодов = ФормированиеПечатныхФорм.ИмяДополнительнойКолонки();
	Если Не ЗначениеЗаполнено(КолонкаКодов) Тогда
		КолонкаКодов = "Код";
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	РасчетСебестоимостиТоваровОрганизации.Ссылка.ПредварительныйРасчет КАК ПредварительныйРасчет,
	|	Документ.Ссылка КАК Ссылка,
	|	Документ.Номер КАК Номер,
	|	Документ.Дата КАК Дата,
	|	Документ.Дата КАК ДатаДокумента,
	|	Документ.Организация КАК Организация,
	|	Документ.Склад КАК Склад,
	|	Склады.ИсточникИнформацииОЦенахДляПечати КАК ИсточникИнформацииОЦенахДляПечати,
	|	Склады.УчетныйВидЦены КАК ВидЦены,
	|	Склады.УчетныйВидЦены.ВалютаЦены КАК ВалютаЦены
	|ПОМЕСТИТЬ ВтШапка
	|ИЗ
	|	Документ.ВозвратТоваровОтКлиента КАК Документ
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.РасчетСебестоимостиТоваров.Организации КАК РасчетСебестоимостиТоваровОрганизации
	|		ПО (РасчетСебестоимостиТоваровОрганизации.Ссылка.Дата МЕЖДУ НАЧАЛОПЕРИОДА(Документ.Дата, МЕСЯЦ) И КОНЕЦПЕРИОДА(Документ.Дата, МЕСЯЦ))
	|			И (РасчетСебестоимостиТоваровОрганизации.Ссылка.Проведен)
	|			И (Документ.Организация = РасчетСебестоимостиТоваровОрганизации.Организация)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Склады КАК Склады
	|		ПО (Документ.Склад = Склады.Ссылка)
	|ГДЕ
	|	Документ.Ссылка В(&МассивДокументов)
	|	И Документ.Проведен
	|	И Склады.СкладОтветственногоХранения
	|	И Документ.Организация <> Склады.Поклажедержатель
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.Ссылка КАК Ссылка,
	|	Шапка.Склад КАК Склад,
	|	Товары.Упаковка КАК Упаковка,
	|	Товары.НомерСтроки КАК НомерСтроки,
	|	Товары.Номенклатура КАК Номенклатура,
	|	Товары.Характеристика КАК Характеристика,
	|	&ТекстЗапросаНаименованиеЕдиницыИзмерения КАК ЕдиницаИзмеренияНаименование,
	|	&ТекстЗапросаКодЕдиницыИзмерения КАК ЕдиницаИзмеренияКод,
	|	&ТекстЗапросаНаименованиеЕдиницыИзмерения КАК ВидУпаковки,
	|	Товары.КоличествоУпаковок КАК КоличествоУпаковок,
	|	Товары.Количество КАК Количество,
	|	КОНЕЦПЕРИОДА(Товары.Ссылка.Дата, ДЕНЬ) КАК ДатаПолученияЦены,
	|	Шапка.ВидЦены КАК ВидЦены,
	|	Шапка.ВалютаЦены КАК ВалютаЦены
	|ПОМЕСТИТЬ ВтТовары
	|ИЗ
	|	Документ.ВозвратТоваровОтКлиента.Товары КАК Товары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтШапка КАК Шапка
	|		ПО Товары.Ссылка = Шапка.Ссылка
	|ГДЕ
	|	Товары.Номенклатура.ТипНоменклатуры В (ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар), ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
	|	И (Шапка.ИсточникИнформацииОЦенахДляПечати = ЗНАЧЕНИЕ(Перечисление.ИсточникиИнформацииОЦенахДляПечати.ПоВидуЦен)
	|		ИЛИ (Шапка.ИсточникИнформацииОЦенахДляПечати = ЗНАЧЕНИЕ(Перечисление.ИсточникиИнформацииОЦенахДляПечати.ПоСебестоимости)
	|			И Шапка.ПредварительныйРасчет ЕСТЬ NULL))
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВидыЗапасов.Ссылка КАК Ссылка,
	|	ВидыЗапасов.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	ВидыЗапасов.ВидЗапасов КАК ВидЗапасов,
	|	Шапка.Организация КАК Организация,
	|	Аналитика.Склад КАК Склад,
	|	Аналитика.Номенклатура.ЕдиницаИзмерения КАК Упаковка,
	|	ВидыЗапасов.НомерСтроки КАК НомерСтроки,
	|	Аналитика.Номенклатура КАК Номенклатура,
	|	Аналитика.Характеристика КАК Характеристика,
	|	Аналитика.Номенклатура.ЕдиницаИзмерения.Представление КАК ЕдиницаИзмеренияНаименование,
	|	Аналитика.Номенклатура.ЕдиницаИзмерения.Код КАК ЕдиницаИзмеренияКод,
	|	Аналитика.Номенклатура.ЕдиницаИзмерения.Представление ВидУпаковки,
	|	ВидыЗапасов.Количество КАК КоличествоУпаковок,
	|	ВидыЗапасов.Количество КАК Количество,
	|	КОНЕЦПЕРИОДА(ВидыЗапасов.Ссылка.Дата, ДЕНЬ) КАК ДатаПолученияЦены,
	|	Аналитика.Склад.УчетныйВидЦены КАК ВидЦены,
	|	Аналитика.Склад.УчетныйВидЦены.ВалютаЦены КАК ВалютаЦены,
	|	Шапка.ПредварительныйРасчет КАК ПредварительныйРасчет
	|ПОМЕСТИТЬ ВтВидыЗапасов
	|ИЗ
	|	Документ.ВозвратТоваровОтКлиента.ВидыЗапасов КАК ВидыЗапасов
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК Аналитика
	|		ПО ВидыЗапасов.АналитикаУчетаНоменклатуры = Аналитика.КлючАналитики
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтШапка КАК Шапка
	|		ПО ВидыЗапасов.Ссылка = Шапка.Ссылка
	|ГДЕ
	|	Аналитика.Номенклатура.ТипНоменклатуры В (ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар), ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
	|	И Аналитика.Склад.ИсточникИнформацииОЦенахДляПечати = ЗНАЧЕНИЕ(Перечисление.ИсточникиИнформацииОЦенахДляПечати.ПоСебестоимости)
	|;
	|";
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ТекстЗапросаНаименованиеЕдиницыИзмерения",
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаЗначениеРеквизитаЕдиницыИзмерения(
			"Наименование", "Товары.Упаковка", "Товары.Номенклатура"));
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ТекстЗапросаКодЕдиницыИзмерения",
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаЗначениеРеквизитаЕдиницыИзмерения(
			"Код", "Товары.Упаковка", "Товары.Номенклатура"));
	
	СкладыСервер.ДополнитьТекстЗапросаДляПечатныхФормМХ1Х3(Запрос);
	
	Запрос.УстановитьПараметр("МассивДокументов", МассивОбъектов);
	Запрос.УстановитьПараметр("УчитыватьСебестоимостьТоваровПоВидамЗапасов",
		ПолучитьФункциональнуюОпцию("УчитыватьСебестоимостьТоваровПоВидамЗапасов"));
	Запрос.УстановитьПараметр("КолонкаКодов", КолонкаКодов);
	
	МассивРезультатов = Запрос.ВыполнитьПакет();
	РезультатПоШапке = МассивРезультатов[6];
	РезультатПоСкладам = МассивРезультатов[7];
	РезультатПоТабличнойЧасти = МассивРезультатов[8];
	
	СтруктураДанныхДляПечати = Новый Структура;
	СтруктураДанныхДляПечати.Вставить("РезультатПоШапке", РезультатПоШапке);
	СтруктураДанныхДляПечати.Вставить("РезультатПоСкладам", РезультатПоСкладам);
	СтруктураДанныхДляПечати.Вставить("РезультатПоТабличнойЧасти", РезультатПоТабличнойЧасти);
	
	Возврат СтруктураДанныхДляПечати
	
КонецФункции

// Формирует временную таблицу, содержащую табличную часть по таблице данных документов.
//
// Параметры:
//	МенеджерВременныхТаблиц - МенеджерВременныхТаблиц - Менеджер временных таблиц, содержащий таблицу ТаблицаДанныхДокументов с полями:
//		Ссылка.
//
//	ПараметрыЗаполнения - Структура - структура, возвращаемая функцией ПродажиСервер.ПараметрыЗаполненияВременнойТаблицыТоваров.
//
Процедура ПоместитьВременнуюТаблицуТоваров(МенеджерВременныхТаблиц, ПараметрыЗаполнения = Неопределено) Экспорт
	
	Если ПараметрыЗаполнения = Неопределено Тогда
		ПараметрыЗаполнения = ПродажиСервер.ПараметрыЗаполненияВременнойТаблицыТоваров();
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВозвратТоваровОтКлиентаТовары.ДокументРеализации КАК Ссылка,
	|	ВозвратТоваровОтКлиентаТовары.Ссылка.Валюта КАК Валюта
	|ИЗ
	|	ТаблицаДанныхДокументов КАК ТаблицаДанныхДокументов
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ВозвратТоваровОтКлиента.Товары КАК ВозвратТоваровОтКлиентаТовары
	|		ПО ТаблицаДанныхДокументов.Ссылка = ВозвратТоваровОтКлиентаТовары.Ссылка";
	
	ТаблицаОснований = Запрос.Выполнить().Выгрузить();
	МассивОснований = ТаблицаОснований.ВыгрузитьКолонку("Ссылка");
	ТипыОснований = ОбщегоНазначенияУТ.СоответствиеМассивовПоТипамОбъектов(МассивОснований);
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("ТаблицаОснований", ТаблицаОснований);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТаблицаОснований.Ссылка КАК Ссылка,
	|	ТаблицаОснований.Валюта КАК Валюта
	|ПОМЕСТИТЬ ТаблицаДанныхДокументов
	|ИЗ
	|	&ТаблицаОснований КАК ТаблицаОснований";
	
	Запрос.Выполнить();
	
	ТекстыЗапроса = Новый Массив;
	
	Для Каждого ТипОснования Из ТипыОснований Цикл
		ОбъектыТипа = ТипОснования.Значение;
		ИмяОбъекта  = Сред(ТипОснования.Ключ, 10);
		
		МенеджерОбъекта = ОбщегоНазначенияУТ.ПолучитьМодульЛокализации(ИмяОбъекта);
		Если МенеджерОбъекта = Неопределено Тогда
			МенеджерОбъекта = Документы[ИмяОбъекта];
		КонецЕсли;
		
		МенеджерОбъекта.ПоместитьВременнуюТаблицуТоваров(Запрос.МенеджерВременныхТаблиц, ПараметрыЗаполнения);
		
		ТекстЗапроса =
		"ВЫБРАТЬ
		|	ТаблицаТоваров.Ссылка КАК Ссылка,
		|	ТаблицаТоваров.ВернутьМногооборотнуюТару КАК ВернутьМногооборотнуюТару,
		|	ТаблицаТоваров.НомерСтроки КАК НомерСтроки,
		|	ТаблицаТоваров.Номенклатура КАК Номенклатура,
		|	ТаблицаТоваров.Характеристика КАК Характеристика,
		|	ТаблицаТоваров.Упаковка КАК Упаковка,
		|	ТаблицаТоваров.НомерГТД КАК НомерГТД,
		|	ТаблицаТоваров.Количество КАК Количество,
		|	ТаблицаТоваров.КоличествоУпаковок КАК КоличествоУпаковок,
		|	ТаблицаТоваров.СуммаБезНДС КАК СуммаБезНДС,
		|	ТаблицаТоваров.СтавкаНДС КАК СтавкаНДС,
		|	ТаблицаТоваров.КодТНВЭД КАК КодТНВЭД,
		|	ТаблицаТоваров.СуммаНДС КАК СуммаНДС,
		|	ТаблицаТоваров.ЭтоТовар КАК ЭтоТовар,
		|	ТаблицаТоваров.ЭтоНеВозвратнаяТара КАК ЭтоНеВозвратнаяТара
		|ИЗ
		|	#ТаблицаТоваров КАК ТаблицаТоваров";
		
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "#ТаблицаТоваров", ИмяОбъекта + "ТаблицаТоваров");
		ТекстыЗапроса.Добавить(ТекстЗапроса);
	КонецЦикла;
	
	Запрос.Текст = СтрСоединить(ТекстыЗапроса, ОбщегоНазначенияУТ.РазделительЗапросовВОбъединении());
	ТаблицаТоваровИсходная = Запрос.Выполнить().Выгрузить();
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("ПересчитыватьВВалютуРегл", ПараметрыЗаполнения.ПересчитыватьВВалютуРегл);
	Запрос.УстановитьПараметр("ВключаяНомераГТД", ПараметрыЗаполнения.ВключаяНомераГТД);
	
	Запрос.УстановитьПараметр("ПустаяУпаковка", Справочники.УпаковкиЕдиницыИзмерения.ПустаяСсылка());
	Запрос.УстановитьПараметр("ПустаяГТД", Справочники.НомераГТД.ПустаяСсылка());
	Запрос.УстановитьПараметр("ПустойТНВЭД", Справочники.КлассификаторТНВЭД.ПустаяСсылка());
	
	Запрос.УстановитьПараметр("ТаблицаТоваровИсходная", ТаблицаТоваровИсходная);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТаблицаДокумента.Ссылка КАК Ссылка,
	|	ТаблицаДокумента.НомерСтроки КАК НомерСтроки,
	|	Аналитика.Номенклатура КАК Номенклатура,
	|	Аналитика.Характеристика КАК Характеристика,
	|	ВЫБОР
	|		КОГДА &ВключаяНомераГТД
	|			ТОГДА ТаблицаДокумента.НомерГТД
	|		ИНАЧЕ &ПустаяГТД
	|	КОНЕЦ КАК НомерГТД,
	|	ТаблицаДокумента.СтавкаНДС КАК СтавкаНДС,
	|	
	|	&ПустойТНВЭД КАК КодТНВЭД,
	|	ИСТИНА КАК ЭтоТовар,
	|	ВЫБОР
	|		КОГДА НЕ Аналитика.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара)
	|				ИЛИ НЕ Аналитика.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)
	|				ИЛИ НЕ ТаблицаДокумента.Ссылка.ПредусмотренЗалогЗаТару
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК ЭтоНеВозвратнаяТара,
	|	ТаблицаДокумента.Ссылка.ПредусмотренЗалогЗаТару КАК ВернутьМногооборотнуюТару,
	|	&ПустаяУпаковка КАК Упаковка,
	|	ТаблицаДокумента.ДокументРеализации КАК ДокументРеализации,
	|	
	|	СУММА(ТаблицаДокумента.Количество) КАК Количество,
	|	0 КАК КоличествоУпаковок,
	|	СУММА(ЕСТЬNULL(СуммыДокументовВВалютеРегл.СуммаБезНДСРегл, ТаблицаДокумента.СуммаСНДС - ТаблицаДокумента.СуммаНДС)) КАК СуммаБезНДС,
	|	СУММА(ЕСТЬNULL(СуммыДокументовВВалютеРегл.СуммаНДСРегл, ТаблицаДокумента.СуммаНДС)) КАК СуммаНДС
	|ПОМЕСТИТЬ ТаблицаТоваровИзменение
	|ИЗ
	|	Документ.ВозвратТоваровОтКлиента.ВидыЗапасов КАК ТаблицаДокумента
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаДанныхДокументов КАК ДанныеДокументов
	|		ПО ТаблицаДокумента.Ссылка = ДанныеДокументов.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СуммыДокументовВВалютеРегл КАК СуммыДокументовВВалютеРегл
	|		ПО ТаблицаДокумента.Ссылка = СуммыДокументовВВалютеРегл.Регистратор
	|			И ТаблицаДокумента.ИдентификаторСтроки = СуммыДокументовВВалютеРегл.ИдентификаторСтроки
	|			И (СуммыДокументовВВалютеРегл.Активность)
	|			И (&ПересчитыватьВВалютуРегл)
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК Аналитика
	|		ПО ТаблицаДокумента.АналитикаУчетаНоменклатуры = Аналитика.КлючАналитики
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаДокумента.Ссылка,
	|	ТаблицаДокумента.НомерСтроки,
	|	Аналитика.Номенклатура,
	|	Аналитика.Характеристика,
	|	ВЫБОР
	|		КОГДА &ВключаяНомераГТД
	|			ТОГДА ТаблицаДокумента.НомерГТД
	|		ИНАЧЕ &ПустаяГТД
	|	КОНЕЦ,
	|	ТаблицаДокумента.СтавкаНДС,
	|	ТаблицаДокумента.ДокументРеализации
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаТоваров.Ссылка КАК Ссылка,
	|	ТаблицаТоваров.Номенклатура КАК Номенклатура,
	|	ТаблицаТоваров.Характеристика КАК Характеристика,
	|	ТаблицаТоваров.НомерГТД КАК НомерГТД,
	|	ТаблицаТоваров.СтавкаНДС КАК СтавкаНДС,
	|	
	|	ТаблицаТоваров.Количество КАК Количество,
	|	ТаблицаТоваров.СуммаБезНДС КАК СуммаБезНДС,
	|	ТаблицаТоваров.СуммаНДС КАК СуммаНДС
	|ПОМЕСТИТЬ ТаблицаТоваровИсходная
	|ИЗ
	|	&ТаблицаТоваровИсходная КАК ТаблицаТоваров
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаТоваровИсходная.Ссылка КАК Ссылка,
	|	ТаблицаТоваровИсходная.Номенклатура КАК Номенклатура,
	|	ТаблицаТоваровИсходная.Характеристика КАК Характеристика,
	|	ТаблицаТоваровИсходная.НомерГТД КАК НомерГТД,
	|	ТаблицаТоваровИсходная.СтавкаНДС КАК СтавкаНДС,
	|	
	|	СУММА(ТаблицаТоваровИсходная.Количество) КАК Количество,
	|	СУММА(ТаблицаТоваровИсходная.СуммаБезНДС) КАК СуммаБезНДС,
	|	СУММА(ТаблицаТоваровИсходная.СуммаНДС) КАК СуммаНДС
	|ПОМЕСТИТЬ ТаблицаТоваровИсходнаяСвернуто
	|ИЗ
	|	ТаблицаТоваровИсходная КАК ТаблицаТоваровИсходная
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаТоваровИсходная.Ссылка,
	|	ТаблицаТоваровИсходная.Номенклатура,
	|	ТаблицаТоваровИсходная.Характеристика,
	|	ТаблицаТоваровИсходная.НомерГТД,
	|	ТаблицаТоваровИсходная.СтавкаНДС
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаТоваровИзменение.Ссылка КАК Ссылка,
	|	ТаблицаТоваровИзменение.НомерСтроки КАК НомерСтроки,
	|	ТаблицаТоваровИзменение.Номенклатура КАК Номенклатура,
	|	ТаблицаТоваровИзменение.Характеристика КАК Характеристика,
	|	ТаблицаТоваровИзменение.Упаковка КАК Упаковка,
	|	ТаблицаТоваровИзменение.НомерГТД КАК НомерГТД,
	|	ТаблицаТоваровИзменение.СтавкаНДС КАК СтавкаНДС,
	|	ТаблицаТоваровИзменение.КодТНВЭД КАК КодТНВЭД,
	|	ТаблицаТоваровИзменение.ЭтоТовар КАК ЭтоТовар,
	|	ТаблицаТоваровИзменение.ЭтоНеВозвратнаяТара КАК ЭтоНеВозвратнаяТара,
	|	ТаблицаТоваровИзменение.ВернутьМногооборотнуюТару КАК ВернутьМногооборотнуюТару,
	|	ТаблицаТоваровИзменение.ДокументРеализации КАК ДокументРеализации,
	|	ТаблицаТоваровИзменение.Количество КАК Количество,
	|	ТаблицаТоваровИзменение.КоличествоУпаковок КАК КоличествоУпаковок,
	|	ТаблицаТоваровИзменение.СуммаБезНДС КАК СуммаБезНДС,
	|	ТаблицаТоваровИзменение.СуммаНДС КАК СуммаНДС,
	|	ЛОЖЬ КАК ДоКорректировки
	|ПОМЕСТИТЬ ТаблицаТоваровВозвратТоваровОтКлиента
	|ИЗ
	|	ТаблицаТоваровИзменение КАК ТаблицаТоваровИзменение
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаТоваровИсходнаяСвернуто КАК ТаблицаТоваровИсходнаяСвернуто
	|		ПО ТаблицаТоваровИзменение.ДокументРеализации = ТаблицаТоваровИсходнаяСвернуто.Ссылка
	|			И ТаблицаТоваровИзменение.Номенклатура = ТаблицаТоваровИсходнаяСвернуто.Номенклатура
	|			И ТаблицаТоваровИзменение.Характеристика = ТаблицаТоваровИсходнаяСвернуто.Характеристика
	|			И ТаблицаТоваровИзменение.НомерГТД = ТаблицаТоваровИсходнаяСвернуто.НомерГТД
	|			И ТаблицаТоваровИзменение.СтавкаНДС = ТаблицаТоваровИсходнаяСвернуто.СтавкаНДС
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаТоваровИзменение.Ссылка,
	|	ТаблицаТоваровИзменение.НомерСтроки,
	|	ТаблицаТоваровИзменение.Номенклатура,
	|	ТаблицаТоваровИзменение.Характеристика,
	|	ТаблицаТоваровИзменение.Упаковка,
	|	ТаблицаТоваровИзменение.НомерГТД,
	|	ТаблицаТоваровИзменение.СтавкаНДС,
	|	ТаблицаТоваровИзменение.КодТНВЭД,
	|	ТаблицаТоваровИзменение.ЭтоТовар,
	|	ТаблицаТоваровИзменение.ЭтоНеВозвратнаяТара,
	|	ТаблицаТоваровИзменение.ВернутьМногооборотнуюТару,
	|	ТаблицаТоваровИзменение.ДокументРеализации,
	|	ЕСТЬNULL(ТаблицаТоваровИсходнаяСвернуто.Количество, 0),
	|	0,
	|	ЕСТЬNULL(ТаблицаТоваровИсходнаяСвернуто.СуммаБезНДС, 0),
	|	ЕСТЬNULL(ТаблицаТоваровИсходнаяСвернуто.СуммаНДС, 0),
	|	ИСТИНА
	|ИЗ
	|	ТаблицаТоваровИзменение КАК ТаблицаТоваровИзменение
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаТоваровИсходнаяСвернуто КАК ТаблицаТоваровИсходнаяСвернуто
	|		ПО ТаблицаТоваровИзменение.ДокументРеализации = ТаблицаТоваровИсходнаяСвернуто.Ссылка
	|			И ТаблицаТоваровИзменение.Номенклатура = ТаблицаТоваровИсходнаяСвернуто.Номенклатура
	|			И ТаблицаТоваровИзменение.Характеристика = ТаблицаТоваровИсходнаяСвернуто.Характеристика
	|			И ТаблицаТоваровИзменение.НомерГТД = ТаблицаТоваровИсходнаяСвернуто.НомерГТД
	|			И ТаблицаТоваровИзменение.СтавкаНДС = ТаблицаТоваровИсходнаяСвернуто.СтавкаНДС
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ТаблицаТоваровИзменение
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ТаблицаТоваровИсходная
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ТаблицаТоваровИсходнаяСвернуто";
	
	Запрос.Выполнить();
	
КонецПроцедуры

// Преобразует временную таблицу товаров, созданную функцией ПоместитьВременнуюТаблицуТоваров()
// к виду, используемому при печати счетов-фактуры.
// После преобразования временная таблица уничтожается.
//
// Параметры:
//	МенеджерВременныхТаблиц - МенеджерВременныхТаблиц - Менеджер временных таблиц, содержащий таблицу ТаблицаТоваровВозвратТоваровОтКлиента.
//
Процедура ПреобразоватьВременнуюТаблицуТоваровДляСчетаФактуры(МенеджерВременныхТаблиц) Экспорт

	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	ТаблицаДокумента.Ссылка                                  КАК Ссылка,
	|	ТаблицаДокумента.Номенклатура                            КАК Номенклатура,
	|	ТаблицаДокумента.Характеристика                          КАК Характеристика,
	|	ТаблицаДокумента.Упаковка                                КАК Упаковка,
	|	ТаблицаДокумента.НомерГТД                                КАК НомерГТД,
	|	ЕСТЬNULL(ТаблицаТоваровПредыдущие.Количество, 0) - ТаблицаДокумента.Количество                 КАК Количество,
	|	ЕСТЬNULL(ТаблицаТоваровПредыдущие.КоличествоУпаковок, 0) - ТаблицаДокумента.КоличествоУпаковок КАК КоличествоУпаковок,
	|	ЕСТЬNULL(ТаблицаТоваровПредыдущие.Количество, 0)         КАК КоличествоДо,
	|	ЕСТЬNULL(ТаблицаТоваровПредыдущие.КоличествоУпаковок, 0) КАК КоличествоУпаковокДо,
	|	ТаблицаДокумента.СтавкаНДС                               КАК СтавкаНДС,
	|	ТаблицаДокумента.КодТНВЭД                                КАК КодТНВЭД,
	|	ЕСТЬNULL(ТаблицаТоваровПредыдущие.СуммаБезНДС, 0) - ТаблицаДокумента.СуммаБезНДС               КАК СуммаБезНДС,
	|	ЕСТЬNULL(ТаблицаТоваровПредыдущие.СуммаБезНДС, 0)                                              КАК СуммаБезНДСДо,
	|	ЕСТЬNULL(ТаблицаТоваровПредыдущие.СуммаНДС, 0) - ТаблицаДокумента.СуммаНДС                     КАК СуммаНДС,
	|	ЕСТЬNULL(ТаблицаТоваровПредыдущие.СуммаНДС, 0)                                                 КАК СуммаНДСДо,
	|	0                                                        КАК РазницаБезНДСУвеличение,
	|	ТаблицаДокумента.СуммаБезНДС                             КАК РазницаБезНДСУменьшение,
	|	0                                                        КАК РазницаНДСУвеличение,
	|	ТаблицаДокумента.СуммаНДС                                КАК РазницаНДСУменьшение,
	|	0                                                        КАК РазницаСНДСУвеличение,
	|	ТаблицаДокумента.СуммаБезНДС + ТаблицаДокумента.СуммаНДС КАК РазницаСНДСУменьшение,
	|	ТаблицаДокумента.НомерСтроки                             КАК НомерСтроки,
	|	ТаблицаДокумента.ЭтоТовар                                КАК ЭтоТовар,
	|	ЛОЖЬ                                                     КАК ВернутьМногооборотнуюТару
	|ПОМЕСТИТЬ ВозвратТоваровОтКлиентаТаблицаТоваров
	|ИЗ
	|	ТаблицаТоваровВозвратТоваровОтКлиента КАК ТаблицаДокумента
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаТоваровВозвратТоваровОтКлиента КАК ТаблицаТоваровПредыдущие
	|		ПО (ТаблицаТоваровПредыдущие.ДоКорректировки)
	|			И ТаблицаДокумента.Ссылка = ТаблицаТоваровПредыдущие.Ссылка
	|			И ТаблицаДокумента.ДокументРеализации = ТаблицаТоваровПредыдущие.ДокументРеализации
	|			И ТаблицаДокумента.Номенклатура = ТаблицаТоваровПредыдущие.Номенклатура
	|			И ТаблицаДокумента.Характеристика = ТаблицаТоваровПредыдущие.Характеристика
	|			И ТаблицаДокумента.НомерГТД = ТаблицаТоваровПредыдущие.НомерГТД
	|			И ТаблицаДокумента.СтавкаНДС = ТаблицаТоваровПредыдущие.СтавкаНДС
	|ГДЕ
	|	НЕ ТаблицаДокумента.ДоКорректировки
	|;
	|
	|/////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ТаблицаТоваровВозвратТоваровОтКлиента
	|";
	
	Запрос.Выполнить();
	
КонецПроцедуры

//-- Локализация
#КонецОбласти


#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область Проведение

// Процедура дополняет тексты запросов проведения документа.
//
// Параметры:
//  Запрос - Запрос - Общий запрос проведения документа.
//  ТекстыЗапроса - СписокЗначений - Список текстов запроса проведения.
//  Регистры - Строка, Структура - Список регистров проведения документа через запятую или в ключах структуры.
//
Процедура ДополнитьТекстыЗапросовПроведения(Запрос, ТекстыЗапроса, Регистры) Экспорт
	
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти
