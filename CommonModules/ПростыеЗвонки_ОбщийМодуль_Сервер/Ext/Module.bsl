Функция ПолучитьВнутреннийНомерПользователя(ТекПользователь =  Неопределено) Экспорт
	
	Если ТекПользователь = Неопределено Тогда
		//ТекПользователь = ПараметрыСеанса.ТекущийПользователь;
	КонецЕсли;
	
	Запрос = Новый Запрос();
	Запрос.Текст = "ВЫБРАТЬ
	               |	ПользователиКонтактнаяИнформация.НомерТелефона
	               |ИЗ
	               |	Справочник.Пользователи.КонтактнаяИнформация КАК ПользователиКонтактнаяИнформация
	               |ГДЕ
	               |	ПользователиКонтактнаяИнформация.Ссылка = &Ссылка
	               |	И ПользователиКонтактнаяИнформация.Вид = &Вид";
	
	Запрос.УстановитьПараметр("Ссылка",	ТекПользователь);
	Запрос.УстановитьПараметр("Вид",		Справочники.ВидыКонтактнойИнформации.ПростыеЗвонкиТелефон);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если РезультатЗапроса.Пустой() Тогда
		Возврат Неопределено;
	Иначе
		Выборка = РезультатЗапроса.Выбрать();
		Выборка.Следующий();
		Возврат Выборка.НомерТелефона;
	КонецЕсли;
	
КонецФункции

Функция ПреобразоватьНомерТелефона(НомерТелефона) Экспорт
	
	ТолькоЦифрыНомера = "";
	Для а=1 По СтрДлина(НомерТелефона) Цикл
		Если СтрЧислоВхождений("1234567890",Сред(НомерТелефона,а,1)) > 0 Тогда
			ТолькоЦифрыНомера = ТолькоЦифрыНомера + Сред(НомерТелефона,а,1);
		КонецЕсли;
	КонецЦикла;
	
	Возврат ТолькоЦифрыНомера;
	
КонецФункции

Функция ПолучитьКлиентаПоНомеруТелефона(НомерТелефона) Экспорт
	
	СтруктураКлиентов = Новый Структура();
	СтруктураКлиентов.Вставить("Партнер",			Неопределено);
	СтруктураКлиентов.Вставить("Контрагент", 		Неопределено);
	СтруктураКлиентов.Вставить("КонтактноеЛицо",	Неопределено);
	
	НомерТелефонаСтрокой	= ПреобразоватьНомерТелефона(СокрЛП(НомерТелефона));			   
	НомерТелефонаЧислом		= Число(НомерТелефонаСтрокой);			   
	
	НомерТелефонаПраваяЧасть = НомерТелефонаСтрокой;
	
	КоличествоПоследнихЦифрНомера = ПолучитьЗначениеНастройки("КоличествоПоследнихЦифрНомера");
	Если НЕ ЗначениеЗаполнено(КоличествоПоследнихЦифрНомера) Тогда
		КоличествоПоследнихЦифрНомера = 5;
	КонецЕсли;
	
	Если СтрДлина(НомерТелефонаСтрокой)>КоличествоПоследнихЦифрНомера Тогда
		НомерТелефонаПраваяЧасть = Прав(НомерТелефонаСтрокой,КоличествоПоследнихЦифрНомера);
	КонецЕсли;
	
	Запрос = Новый Запрос();
	Запрос.УстановитьПараметр("НомерТелефона", НомерТелефонаСтрокой);
	Запрос.УстановитьПараметр("НомерТелефонаПраваяЧасть", НомерТелефонаПраваяЧасть);
	
	Запрос.Текст = "ВЫБРАТЬ ПЕРВЫЕ 1
	               |	КонтактныеЛицаПартнеровКонтактнаяИнформация.Ссылка КАК КонтактноеЛицо,
	               |	КонтактныеЛицаПартнеровКонтактнаяИнформация.Ссылка.Владелец КАК Партнер
	               |ИЗ
	               |	Справочник.КонтактныеЛицаПартнеров.КонтактнаяИнформация КАК КонтактныеЛицаПартнеровКонтактнаяИнформация
	               |ГДЕ
	               |	КонтактныеЛицаПартнеровКонтактнаяИнформация.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыКонтактнойИнформации.Телефон)
	               |	И (КонтактныеЛицаПартнеровКонтактнаяИнформация.НомерТелефона = &НомерТелефона
	               |			ИЛИ КонтактныеЛицаПартнеровКонтактнаяИнформация.НомерТелефонаБезКодов ПОДОБНО ""%"" + &НомерТелефонаПраваяЧасть)";
	
	
	РезультатЗапроса = Запрос.Выполнить();
	Если НЕ РезультатЗапроса.Пустой() Тогда
		
		Выборка = РезультатЗапроса.Выбрать();
		Выборка.Следующий();
		
		СтруктураКлиентов.Партнер = Выборка.Партнер;
		СтруктураКлиентов.КонтактноеЛицо = Выборка.КонтактноеЛицо;
		
	Иначе
		
		Запрос.Текст = "ВЫБРАТЬ ПЕРВЫЕ 1
		               |	КонтрагентыКонтактнаяИнформация.Ссылка КАК Контрагент,
		               |	КонтрагентыКонтактнаяИнформация.Ссылка.Партнер КАК Партнер
		               |ИЗ
		               |	Справочник.Контрагенты.КонтактнаяИнформация КАК КонтрагентыКонтактнаяИнформация
		               |ГДЕ
		               |	КонтрагентыКонтактнаяИнформация.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыКонтактнойИнформации.Телефон)
		               |	И (КонтрагентыКонтактнаяИнформация.НомерТелефона = &НомерТелефона
		               |			ИЛИ КонтрагентыКонтактнаяИнформация.НомерТелефонаБезКодов ПОДОБНО ""%"" + &НомерТелефонаПраваяЧасть)";
		
		РезультатЗапроса = Запрос.Выполнить();
		Если НЕ РезультатЗапроса.Пустой() Тогда
			
			Выборка = РезультатЗапроса.Выбрать();
			Выборка.Следующий();
			
			СтруктураКлиентов.Партнер = Выборка.Партнер;
			СтруктураКлиентов.Контрагент = Выборка.Контрагент;
			
		Иначе
			
			Запрос.Текст = "ВЫБРАТЬ ПЕРВЫЕ 1
			               |	ПартнерыКонтактнаяИнформация.Ссылка КАК Партнер
			               |ИЗ
			               |	Справочник.Партнеры.КонтактнаяИнформация КАК ПартнерыКонтактнаяИнформация
			               |ГДЕ
			               |	ПартнерыКонтактнаяИнформация.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыКонтактнойИнформации.Телефон)
			               |	И (ПартнерыКонтактнаяИнформация.НомерТелефона = &НомерТелефона
			               |			ИЛИ ПартнерыКонтактнаяИнформация.НомерТелефонаБезКодов ПОДОБНО ""%"" + &НомерТелефонаПраваяЧасть)";
			
			РезультатЗапроса = Запрос.Выполнить();
			Если НЕ РезультатЗапроса.Пустой() Тогда
				
				Выборка = РезультатЗапроса.Выбрать();
				Выборка.Следующий();
				
				СтруктураКлиентов.Партнер = Выборка.Партнер;
				
			КонецЕсли;   
		КонецЕсли;
	КонецЕсли;
	
	Возврат СтруктураКлиентов;		   
	
КонецФункции

Функция ПолучитьПользователяПоНомеруТелефона(НомерТелефона) Экспорт

	
	Запрос = Новый Запрос();
	Запрос.Текст = "ВЫБРАТЬ
	               |	ПользователиКонтактнаяИнформация.Ссылка
	               |ИЗ
	               |	Справочник.Пользователи.КонтактнаяИнформация КАК ПользователиКонтактнаяИнформация
	               |ГДЕ
	               |	ПользователиКонтактнаяИнформация.НомерТелефона = &НомерТелефона
	               |	И ПользователиКонтактнаяИнформация.Вид = &Вид";
	
	Запрос.УстановитьПараметр("НомерТелефона",	НомерТелефона);
	Запрос.УстановитьПараметр("Вид",			Справочники.ВидыКонтактнойИнформации.ПростыеЗвонкиТелефон);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если РезультатЗапроса.Пустой() Тогда
		Возврат Неопределено;
	Иначе
		Выборка = РезультатЗапроса.Выбрать();
		Выборка.Следующий();
		Возврат Выборка.Ссылка;
	КонецЕсли;
	
КонецФункции

Функция ОпределитьПолучателяПоВходящемуНомеру(НомерТелефона) Экспорт
	
	СтруктураКлиентов = ПолучитьКлиентаПоНомеруТелефона(НомерТелефона);
	
	Если ЗначениеЗаполнено(СтруктураКлиентов.Партнер) Тогда
		ОсновнойМенеджерПартнера = СтруктураКлиентов.Партнер.ОсновнойМенеджер;
		Если ЗначениеЗаполнено(ОсновнойМенеджерПартнера) Тогда
			Возврат ПолучитьВнутреннийНомерПользователя(ОсновнойМенеджерПартнера);
		КонецЕсли;
	КонецЕсли;
	
	Возврат Неопределено;
	
КонецФункции

Функция ПолучитьУИДТекущегоПользователя() Экспорт
			
	Возврат СокрЛП(ПараметрыСеанса.ТекущийПользователь.УникальныйИдентификатор());
	
КонецФункции

Функция ПолучитьВремяИзUnixTimestamp(Значение)
	
	Возврат МестноеВремя('19700101' + Значение);
	
КонецФункции

Функция СоздатьДокументТелефонныйЗвонок(НомерС,НомерНа,Направление,Знач ДатаВремяНачала = Неопределено,Знач ДатаВремяОкончания = Неопределено) Экспорт
	
	Если Направление = 1 Тогда
		СтруктураКлиентов	= ПолучитьКлиентаПоНомеруТелефона(СокрЛП(НомерНа));
		Пользователь		= ПолучитьПользователяПоНомеруТелефона(СокрЛП(НомерС));	
	Иначе
		СтруктураКлиентов	= ПолучитьКлиентаПоНомеруТелефона(СокрЛП(НомерС));
		Пользователь		= ПолучитьПользователяПоНомеруТелефона(СокрЛП(НомерНа));	
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Пользователь) И ЗначениеЗаполнено(СтруктураКлиентов.Партнер) Тогда
		Если Пользователь = ПараметрыСеанса.ТекущийПользователь Тогда
			Попытка			
				НовыйТелефонныйЗвонок = Документы.ТелефонныйЗвонок.СоздатьДокумент();
				Если ДатаВремяНачала = Неопределено Тогда
					НовыйТелефонныйЗвонок.Дата = ТекущаяДата();
				Иначе
					НовыйТелефонныйЗвонок.Дата	 = ПолучитьВремяИзUnixTimestamp(ДатаВремяНачала);
				КонецЕсли;	
				
				Если Направление = 1 Тогда
					НовыйТелефонныйЗвонок.АбонентКакСвязаться = СокрЛП(НомерНа);
				Иначе
					НовыйТелефонныйЗвонок.АбонентКакСвязаться = СокрЛП(НомерС);
					НовыйТелефонныйЗвонок.Входящий = Истина;
				КонецЕсли;
			
				НовыйТелефонныйЗвонок.АбонентКонтакт = СтруктураКлиентов.Партнер;
				НовыйТелефонныйЗвонок.Автор = Пользователь;
				
				ПредставлениеАбонента = СокрЛП(СтруктураКлиентов.КонтактноеЛицо);
				Если ЗначениеЗаполнено(ПредставлениеАбонента) Тогда
                    ПредставлениеАбонента = ПредставлениеАбонента + "("+СокрЛП(СтруктураКлиентов.Партнер)+")";
				Иначе
					ПредставлениеАбонента = СокрЛП(СтруктураКлиентов.Партнер);
				КонецЕсли;
				
				НовыйТелефонныйЗвонок.АбонентПредставление = ПредставлениеАбонента;
				
				Попытка
					НовыйТелефонныйЗвонок.Записать(РежимЗаписиДокумента.Проведение);
				Исключение
					НовыйТелефонныйЗвонок.Записать();
				КонецПопытки;
			
            	Возврат НовыйТелефонныйЗвонок.Ссылка;
			Исключение
			КонецПопытки;			
		КонецЕсли;
	КонецЕсли;
	
	Возврат Неопределено;
	
КонецФункции

Функция СохранитьИсториюЗвонка(НомерС, НомерНа, Продолжительность, ДатаВремяНачала, ДатаВремяОкончания, Направление, ПутьКЗаписи, ИД) Экспорт
	
	СтруктураРезультата = Новый Структура;
	СтруктураРезультата.Вставить("НомерИсходящегоЗвонка",Неопределено);
	СтруктураРезультата.Вставить("СозданныйТелефонныйЗвонок",Неопределено);
	
	УИД = Прав("000000000000000"+Строка(ДатаВремяОкончания),15) + Прав("000000000000000"+Строка(ИД),15);
	
	Пользователь	= Неопределено;
	
	Если Направление = 1 Тогда
		СтруктураКлиентов	= ПолучитьКлиентаПоНомеруТелефона(СокрЛП(НомерНа));
		Пользователь		= ПолучитьПользователяПоНомеруТелефона(СокрЛП(НомерС));	
	Иначе
		СтруктураКлиентов	= ПолучитьКлиентаПоНомеруТелефона(СокрЛП(НомерС));
		Пользователь		= ПолучитьПользователяПоНомеруТелефона(СокрЛП(НомерНа));	
	КонецЕсли;
		
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ПростыеЗвонки_ИсторияЗвонков.УИД
	               |ИЗ
	               |	РегистрСведений.ПростыеЗвонки_ИсторияЗвонков КАК ПростыеЗвонки_ИсторияЗвонков
	               |ГДЕ
	               |	ПростыеЗвонки_ИсторияЗвонков.УИД = &УИД";
	
	Запрос.УстановитьПараметр("УИД",УИД);
	
	ЗаписьНеСуществует = Запрос.Выполнить().Пустой();
	
	Если ЗаписьНеСуществует Тогда
		
		Запись = РегистрыСведений.ПростыеЗвонки_ИсторияЗвонков.СоздатьМенеджерЗаписи();
		Запись.УИД = УИД;
		
		Запись.НомерТелефонаС		= СокрЛП(НомерС);
		Запись.НомерТелефонаНа		= СокрЛП(НомерНа);
		
		Запись.ДатаВремяНачала		= ПолучитьВремяИзUnixTimestamp(ДатаВремяНачала);
		Запись.ДатаВремяОкончания	= ПолучитьВремяИзUnixTimestamp(ДатаВремяОкончания);
		
		Запись.Продолжительность	= Продолжительность;
		Запись.НаправлениеЗвонка	= Направление;
		Запись.ПутьКФайлу			= ПутьКЗаписи;
		
		Запись.Партнер					= СтруктураКлиентов.Партнер;
		Запись.Контрагент				= СтруктураКлиентов.Контрагент;
		Запись.КонтактноеЛицоПартнера	= СтруктураКлиентов.КонтактноеЛицо;
		Запись.Пользователь 			= Пользователь;
		
		Запись.Записать();
		
	КонецЕсли;

	Возврат СтруктураРезультата;
	
КонецФункции

Функция ПолучитьТекущегоПользователя() Экспорт
	Возврат ПараметрыСеанса.ТекущийПользователь;
КонецФункции

Функция ПолучитьЦифрыСтроки(НомерТелефона)
	
	НомерТелефонаЧисла = "";
	
	ДлинаСтроки = СтрДлина(НомерТелефона);
	
	Для н = 1 по ДлинаСтроки Цикл
		Символ = Сред(НомерТелефона,н,1);
		Если Найти("0123456789", Символ)>0 Тогда
			НомерТелефонаЧисла = НомерТелефонаЧисла + Символ;
		КонецЕсли;
	КонецЦикла;
	
	Возврат НомерТелефонаЧисла;
	
КонецФункции

Функция ПолучитьНомерТелефонаВнутриГорода(НомерТелефона) Экспорт
	
	ПростыеЗвонкиКодыГородов = ПростыеЗвонки_ОбщийМодуль_СерверПеременные.ПолучитьТаблицуКодовГородов();
	
	НомерТелефонаВнутриГорода = ПолучитьЦифрыСтроки(НомерТелефона);
	
	Если СтрДлина(НомерТелефонаВнутриГорода)>=10 Тогда
		
		ТелефонСКодом = Прав(НомерТелефонаВнутриГорода,10);
		
		Если НЕ Лев(ТелефонСКодом,1) = "9" Тогда
			
			КодГорода			= "";
			НомерВнутриГорода	= "";
			
			Для н = 1 по 6 Цикл
				
				ДлинаКодаГорода = 8-н;
				
				КодГорода = Лев(ТелефонСКодом,ДлинаКодаГорода);
				
				НайденнаяСтрока = ПростыеЗвонкиКодыГородов.Найти(КодГорода,"КодГорода");
				Если НЕ НайденнаяСтрока = Неопределено Тогда
					
					НомерТелефонаВнутриГорода	= Сред(ТелефонСКодом,ДлинаКодаГорода+1);
					Прервать;
					
				КонецЕсли;
				
			КонецЦикла;
			
		Иначе
			
			НомерТелефонаВнутриГорода = ТелефонСКодом;
			
		КонецЕсли;
	КонецЕсли;
	
	Возврат НомерТелефонаВнутриГорода;
	
КонецФункции

Функция ПолучитьПредставлениеНомераТелефона(НомерТелефона,Местонахождение = "",ГородскойМобильный = "") Экспорт
	
	ПростыеЗвонкиКодыГородов				= ПростыеЗвонки_ОбщийМодуль_СерверПеременные.ПолучитьТаблицуКодовГородов();
	ПростыеЗвонкиКодыМобильныхОператоров	= ПростыеЗвонки_ОбщийМодуль_СерверПеременные.ПолучитьТаблицуКодовМобильныхОператоров();
	
	ПредставлениеТелефона = "";
	
	ГородскойМобильный = "Городской";
	
	НомерТелефонаЧисла = ПолучитьЦифрыСтроки(НомерТелефона);
	
	Если СтрДлина(НомерТелефонаЧисла)>=10 Тогда
		
		КодСтраны = "";
		Если СтрДлина(НомерТелефонаЧисла)>10 Тогда
			КодСтраны = Лев(НомерТелефонаЧисла,СтрДлина(НомерТелефонаЧисла)-10);
		КонецЕсли;
			
		ТелефонСКодом = Прав(НомерТелефонаЧисла,10);
		
		Если Лев(ТелефонСКодом,1) = "9" Тогда
			
			ГородскойМобильный = "Мобильный";
			
			КодОператора = Лев(ТелефонСКодом,3);
			НомерВнутриОператора = Сред(ТелефонСКодом,4);
			
			СтруктураОтбора = Новый Структура;
			СтруктураОтбора.Вставить("КодОператора",КодОператора);
			
			ТаблицаМобильногоОператора = ПростыеЗвонкиКодыМобильныхОператоров.Скопировать(СтруктураОтбора);
			Для Каждого Стр Из ТаблицаМобильногоОператора Цикл
				
				Если НомерВнутриОператора>=Стр.НомерС И НомерВнутриОператора <= Стр.НомерПо Тогда
					
					Местонахождение = Стр.Регион;
					Прервать;
					
				КонецЕсли;
				
			КонецЦикла;
			
			ПредставлениеТелефона = СокрЛП(КодСтраны+" ("+КодОператора+") "+Лев(НомерВнутриОператора,3)+"-"+Сред(НомерВнутриОператора,4,2)+"-"+Прав(НомерВнутриОператора,2));
			
		Иначе
			
			КодГорода			= "";
			НомерВнутриГорода	= "";
			
			НашлиКодГорода = Ложь;
			
			Для н = 1 по 6 Цикл
				
				ДлинаКодаГорода = 8-н;
				
				КодГорода = Лев(ТелефонСКодом,ДлинаКодаГорода);
				
				НайденнаяСтрока = ПростыеЗвонкиКодыГородов.Найти(КодГорода,"КодГорода");
				Если НЕ НайденнаяСтрока = Неопределено Тогда
					
					НомерВнутриГорода	= Сред(ТелефонСКодом,ДлинаКодаГорода+1);
					Местонахождение		= НайденнаяСтрока.Город;
					
					НашлиКодГорода = Истина;
					
					Прервать;
					
				КонецЕсли;
				
			КонецЦикла;
			
			Если НашлиКодГорода Тогда
				
				Если СтрДлина(КодГорода) > 5 Тогда
					ПредставлениеТелефона = "("+КодГорода+") "+СокрЛП(НомерВнутриГорода);
				ИначеЕсли СтрДлина(КодГорода) = 5 Тогда
					ПредставлениеТелефона = "("+КодГорода+") "+Лев(НомерВнутриГорода,1)+"-"+Сред(НомерВнутриГорода,2,2)+"-"+Прав(НомерВнутриГорода,2);
				ИначеЕсли СтрДлина(КодГорода) = 4 Тогда
					ПредставлениеТелефона = "("+КодГорода+") "+Лев(НомерВнутриГорода,2)+"-"+Сред(НомерВнутриГорода,3,2)+"-"+Прав(НомерВнутриГорода,2);
				ИначеЕсли СтрДлина(КодГорода) = 3 Тогда
					ПредставлениеТелефона = "("+КодГорода+") "+Лев(НомерВнутриГорода,3)+"-"+Сред(НомерВнутриГорода,4,2)+"-"+Прав(НомерВнутриГорода,2);
				ИначеЕсли СтрДлина(КодГорода) = 2 Тогда
					ПредставлениеТелефона = "("+КодГорода+") "+Лев(НомерВнутриГорода,3)+"-"+Сред(НомерВнутриГорода,4,3)+"-"+Прав(НомерВнутриГорода,2);
				КонецЕсли;
				
				ПредставлениеТелефона = СокрЛП(КодСтраны + " " + ПредставлениеТелефона);
				
			Иначе
				
				ПредставлениеТелефона = "";
				
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЕсли;
	
	Если ПредставлениеТелефона = "" Тогда
		ПредставлениеТелефона = НомерТелефона;
	КонецЕсли;
	
	Возврат ПредставлениеТелефона;
	
КонецФункции

Процедура УстановитьНомерТелефонаНовогоОбъекта(Форма) Экспорт
	
	Объект = Форма.Объект;
	
	Если Форма.Параметры.ЗначенияЗаполнения.Свойство("ПростыеЗвонки_НомерТелефона") Тогда
		
		Если ТипЗнч(Объект.Ссылка) = Тип("СправочникСсылка.Партнеры") Тогда
			ВидКИ = Справочники.ВидыКонтактнойИнформации.ТелефонПартнера;
		ИначеЕсли ТипЗнч(Объект.Ссылка) = Тип("СправочникСсылка.Контрагенты") Тогда
			ВидКИ = Справочники.ВидыКонтактнойИнформации.ТелефонКонтрагента;
		ИначеЕсли ТипЗнч(Объект.Ссылка) = Тип("СправочникСсылка.КонтактныеЛицаПартнеров") Тогда
			ВидКИ = Справочники.ВидыКонтактнойИнформации.ТелефонКонтактногоЛица;
		Иначе
			Возврат;
		КонецЕсли;
		
		НомерТелефона = Форма.Параметры.ЗначенияЗаполнения.ПростыеЗвонки_НомерТелефона;
		
		НовыйТелефон = Объект.КонтактнаяИнформация.Добавить();
		НовыйТелефон.Тип = Перечисления.ТипыКонтактнойИнформации.Телефон;
		НовыйТелефон.Вид = ВидКИ;
		НовыйТелефон.Представление = НомерТелефона;
		НовыйТелефон.ЗначенияПолей = "НомерТелефона="+СокрЛП(НомерТелефона);
		НовыйТелефон.НомерТелефона = НомерТелефона;
		НовыйТелефон.НомерТелефонаБезКодов = ПолучитьЦифрыСтроки(НомерТелефона);
		
	КонецЕсли;
	
КонецПроцедуры

Функция ЕстьПраваНаПростыеЗвонки() Экспорт
	
	Если РольДоступна("ПростыеЗвонки") ИЛИ РольДоступна("ПолныеПрава") Тогда
		Возврат Истина;
	Иначе
		Возврат Ложь;
	КонецЕсли;
	
КонецФункции

Процедура УстановитьЗначениеНастройки(ИмяНастройки,Значение) Экспорт
	
	ЗаписьНастройки = РегистрыСведений.ПростыеЗвонки_Настройки.СоздатьМенеджерЗаписи();
	ЗаписьНастройки.ИмяНастройки = СокрЛП(ИмяНастройки);
	ЗаписьНастройки.Значение = Значение;
	ЗаписьНастройки.Записать();
	
КонецПроцедуры

Функция ПолучитьЗначениеНастройки(ИмяНастройки) Экспорт
	
	Запрос = Новый Запрос();
	Запрос.Текст = "ВЫБРАТЬ
	               |	ПростыеЗвонки_Настройки.Значение
	               |ИЗ
	               |	РегистрСведений.ПростыеЗвонки_Настройки КАК ПростыеЗвонки_Настройки
	               |ГДЕ
	               |	ПростыеЗвонки_Настройки.ИмяНастройки = &ИмяНастройки";
				   
	Запрос.УстановитьПараметр("ИмяНастройки",ИмяНастройки);
	
	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда
		Возврат Неопределено;
	Иначе
		Выборка = РезультатЗапроса.Выбрать();
		Выборка.Следующий();
		Возврат Выборка.Значение;
	КонецЕсли;
				   
КонецФункции

Функция ПроверитьПервыйЗапуск() Экспорт
	
	Если ПолучитьЗначениеНастройки("ПервыйЗапуск") = Неопределено Тогда
		
		ВидПростыеЗвонки = Справочники.ВидыКонтактнойИнформации.ПростыеЗвонкиТелефон;
		Если Не ЗначениеЗаполнено(ВидПростыеЗвонки.Тип) Тогда
			ВидПростыеЗвонкиОбъект = ВидПростыеЗвонки.ПолучитьОбъект();
			ВидПростыеЗвонкиОбъект.Тип = Перечисления.ТипыКонтактнойИнформации.Телефон;
			ВидПростыеЗвонкиОбъект.Записать();
		КонецЕсли;
	
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ
	    	           |	ПрофилиГруппДоступаРоли.Ссылка
	        	       |ИЗ
	            	   |	Справочник.ПрофилиГруппДоступа.Роли КАК ПрофилиГруппДоступаРоли
	               	   |ГДЕ
		               |	ПрофилиГруппДоступаРоли.Роль = ""ПростыеЗвонки""";
				   
		РезультатЗапроса = Запрос.Выполнить();
	
		Если РезультатЗапроса.Пустой() Тогда
		
			НовыйПрофиль = Справочники.ПрофилиГруппДоступа.СоздатьЭлемент();
			НовыйПрофиль.Наименование = "Простые звонки";
			НовыйПрофиль.Родитель = Справочники.ПрофилиГруппДоступа.Прочее;
		
			НоваяСтрока = НовыйПрофиль.Роли.Добавить();
			НоваяСтрока.Роль = "ПростыеЗвонки";
		
			НовыйПрофиль.Записать();
		
			НоваяГруппаДоступа = Справочники.ГруппыДоступа.СоздатьЭлемент();
			НоваяГруппаДоступа.Наименование = "Простые звонки";
			НоваяГруппаДоступа.Профиль = НовыйПрофиль.Ссылка;
		
			НоваяГруппаДоступа.Записать();
		
		КонецЕсли;
		
		ИдентификаторБазы1С = СокрЛП(Новый УникальныйИдентификатор());
		УстановитьЗначениеНастройки("ИдентификаторБазы1С", ИдентификаторБазы1С);

		УстановитьЗначениеНастройки("ПервыйЗапуск", "1")
	КонецЕсли;
		
КонецФункции
