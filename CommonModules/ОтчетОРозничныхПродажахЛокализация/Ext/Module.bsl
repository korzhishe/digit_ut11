
#Область ПрограммныйИнтерфейс

#Область ОбработчикиСобытий

// Вызывается из соответствующего обработчика документа
//
// Параметры:
//  Объект - ДокументОбъект - Обрабатываемый документ.
//  Отказ - Булево - Признак проведения документа.
//                   Если в теле процедуры-обработчика установить данному параметру значение Истина,
//                   то проведение документа выполнено не будет.
//  РежимПроведения - РежимПроведенияДокумента - В данный параметр передается текущий режим проведения.
//
Процедура ОбработкаПроведения(Объект, Отказ, РежимПроведения) Экспорт
	
	Движения = Объект.Движения;
	ДополнительныеСвойства = Объект.ДополнительныеСвойства;
	//++ Локализация
	//-- Локализация
	
КонецПроцедуры

// Вызывается из соответствующего обработчика документа
//
// Параметры:
//  Объект - ДокументОбъект - Обрабатываемый объект
//  Отказ - Булево - Если в теле процедуры-обработчика установить данному параметру значение Истина,
//                   то будет выполнен отказ от продолжения работы после выполнения проверки заполнения.
//  ПроверяемыеРеквизиты - Массив - Массив путей к реквизитам, для которых будет выполнена проверка заполнения.
//
Процедура ОбработкаПроверкиЗаполнения(Объект, Отказ, ПроверяемыеРеквизиты) Экспорт
	
	
КонецПроцедуры

// Вызывается из соответствующего обработчика документа
//
// Параметры:
//  Объект - ДокументОбъект - Обрабатываемый объект.
//  ДанныеЗаполнения - Произвольный - Значение, которое используется как основание для заполнения.
//  СтандартнаяОбработка - Булево - В данный параметр передается признак выполнения стандартной (системной) обработки события.
//
Процедура ОбработкаЗаполнения(Объект, ДанныеЗаполнения, СтандартнаяОбработка) Экспорт
	
	
КонецПроцедуры

// Вызывается из соответствующего обработчика документа
//
// Параметры:
//  Объект - ДокументОбъект - Обрабатываемый объект
//  Отказ - Булево - Признак отказа от записи.
//                   Если в теле процедуры-обработчика установить данному параметру значение Истина,
//                   то запись выполнена не будет и будет вызвано исключение.
//
Процедура ОбработкаУдаленияПроведения(Объект, Отказ) Экспорт
	
	
КонецПроцедуры

// Вызывается из соответствующего обработчика документа
//
// Параметры:
//  Объект - ДокументОбъект - Обрабатываемый объект
//  Отказ - Булево - Признак отказа от записи.
//                   Если в теле процедуры-обработчика установить данному параметру значение Истина,
//                   то запись выполнена не будет и будет вызвано исключение.
//  РежимЗаписи - РежимЗаписиДокумента - В параметр передается текущий режим записи документа. Позволяет определить в теле процедуры режим записи.
//  РежимПроведения - РежимПроведенияДокумента - В данный параметр передается текущий режим проведения.
//
Процедура ПередЗаписью(Объект, Отказ, РежимЗаписи, РежимПроведения) Экспорт
	
	
КонецПроцедуры

// Вызывается из соответствующего обработчика документа
//
// Параметры:
//  Объект - ДокументОбъект - Обрабатываемый объект
//  Отказ - Булево - Признак отказа от записи.
//                   Если в теле процедуры-обработчика установить данному параметру значение Истина, то запись выполнена не будет и будет вызвано исключение.
//
Процедура ПриЗаписи(Объект, Отказ) Экспорт
	
	
КонецПроцедуры

// Вызывается из соответствующего обработчика документа
//
// Параметры:
//  Объект - ДокументОбъект - Обрабатываемый объект
//  ОбъектКопирования - ДокументОбъект.<Имя документа> - Исходный документ, который является источником копирования.
//
Процедура ПриКопировании(Объект, ОбъектКопирования) Экспорт
	
	
КонецПроцедуры

#КонецОбласти

#Область ПодключаемыеКоманды

// Определяет список команд создания на основании.
//
// Параметры:
//   КомандыСозданияНаОсновании - ТаблицаЗначений - Таблица с командами создания на основании. Для изменения.
//       См. описание 1 параметра процедуры СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании().
//   Параметры - Структура - Вспомогательные параметры. Для чтения.
//       См. описание 2 параметра процедуры СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании().
//
Процедура ДобавитьКомандыСозданияНаОсновании(КомандыСозданияНаОсновании, Параметры) Экспорт
	
	
КонецПроцедуры

// Добавляет команду создания документа "Авансовый отчет".
//
// Параметры:
//   КомандыСозданияНаОсновании - ТаблицаЗначений - Таблица с командами создания на основании. Для изменения.
//       См. описание 1 параметра процедуры СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании().
//
Процедура ДобавитьКомандуСоздатьНаОсновании(КомандыСозданияНаОсновании) Экспорт


КонецПроцедуры

// Определяет список команд отчетов.
//
// Параметры:
//   КомандыОтчетов - ТаблицаЗначений - Таблица с командами отчетов. Для изменения.
//       См. описание 1 параметра процедуры ВариантыОтчетовПереопределяемый.ПередДобавлениемКомандОтчетов().
//   Параметры - Структура - Вспомогательные параметры. Для чтения.
//       См. описание 2 параметра процедуры ВариантыОтчетовПереопределяемый.ПередДобавлениемКомандОтчетов().
//
Процедура ДобавитьКомандыОтчетов(КомандыОтчетов, Параметры) Экспорт
	
	
КонецПроцедуры

// Заполняет список команд печати.
//
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати.
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	//++ Локализация
	
	// КМ-3
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Обработчик = "УправлениеПечатьюУТЛокализацияКлиент.ПечатьКМ3";
	КомандаПечати.МенеджерПечати = "";
	КомандаПечати.Идентификатор = "КМ3";
	КомандаПечати.Представление = НСтр("ru = 'КМ-3'");
	
	Если ПолучитьФункциональнуюОпцию("ИспользоватьОтветственноеХранение") Тогда
		// МХ-3 
		КомандаПечати = КомандыПечати.Добавить();
		КомандаПечати.МенеджерПечати = "Обработка.ПечатьОбщихФорм";
		КомандаПечати.Идентификатор = "МХ3";
		КомандаПечати.Представление = НСтр("ru = 'Акт о возврате ТМЦ, сданных на хранение (МХ-3)'");
		КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
	КонецЕсли;
	
	// Справка отчет кассира-операциониста (КМ-6)
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "КМ6";
	КомандаПечати.Представление = НСтр("ru = 'Справка отчет кассира-операциониста (КМ-6)'");
	КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
	//-- Локализация
	
КонецПроцедуры

#КонецОбласти

#Область Печать

// Формирует печатные формы.
//
// Параметры:
//  МассивОбъектов  - Массив    - ссылки на объекты, которые нужно распечатать;
//  ПараметрыПечати - Структура - дополнительные настройки печати;
//  КоллекцияПечатныхФорм - ТаблицаЗначений - сформированные табличные документы (выходной параметр)
//  ОбъектыПечати         - СписокЗначений  - значение - ссылка на объект;
//                                            представление - имя области в которой был выведен объект (выходной параметр);
//  ПараметрыВывода       - Структура       - дополнительные параметры сформированных табличных документов (выходной параметр).
//
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	//++ Локализация
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "КМ6") Тогда
		
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
			КоллекцияПечатныхФорм,
			"КМ6",
			НСтр("ru = 'Отчет за смену'"),
			СформироватьПечатнуюФормуКМ6(МассивОбъектов, ОбъектыПечати));
		
	КонецЕсли;
	//-- Локализация
	
КонецПроцедуры

//++ Локализация

// Функция получает данные для формирования печатной формы МХ - 3
//
Функция ПолучитьДанныеДляПечатнойФормыМХ3(ПараметрыПечати, МассивОбъектов) Экспорт
	
	КолонкаКодов = ФормированиеПечатныхФорм.ИмяДополнительнойКолонки();
	Если Не ЗначениеЗаполнено(КолонкаКодов) Тогда
		КолонкаКодов = "Код";
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	РасчетСебестоимостиТоваровОрганизации.Ссылка.ПредварительныйРасчет КАК ПредварительныйРасчет,
	|	Документ.Ссылка КАК Ссылка,
	|	Документ.Номер КАК Номер,
	|	Документ.Дата КАК Дата,
	|	Документ.Дата КАК ДатаДокумента,
	|	Документ.Организация КАК Организация,
	|	Документ.Склад КАК Склад,
	|	Склады.ИсточникИнформацииОЦенахДляПечати КАК ИсточникИнформацииОЦенахДляПечати,
	|	Склады.УчетныйВидЦены КАК ВидЦены,
	|	Склады.УчетныйВидЦены.ВалютаЦены КАК ВалютаЦены
	|ПОМЕСТИТЬ ВтШапка
	|ИЗ
	|	Документ.ОтчетОРозничныхПродажах КАК Документ
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.РасчетСебестоимостиТоваров.Организации КАК РасчетСебестоимостиТоваровОрганизации
	|		ПО (РасчетСебестоимостиТоваровОрганизации.Ссылка.Дата МЕЖДУ НАЧАЛОПЕРИОДА(Документ.Дата, МЕСЯЦ) И КОНЕЦПЕРИОДА(Документ.Дата, МЕСЯЦ))
	|			И (РасчетСебестоимостиТоваровОрганизации.Ссылка.Проведен)
	|			И (Документ.Организация = РасчетСебестоимостиТоваровОрганизации.Организация)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Склады КАК Склады
	|		ПО (Документ.Склад = Склады.Ссылка)
	|ГДЕ
	|	Документ.Ссылка В(&МассивДокументов)
	|	И Документ.Проведен
	|	И Склады.СкладОтветственногоХранения
	|	И Документ.Организация <> Склады.Поклажедержатель
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.Ссылка КАК Ссылка,
	|	Шапка.Склад КАК Склад,
	|	Товары.Упаковка КАК Упаковка,
	|	Товары.НомерСтроки КАК НомерСтроки,
	|	Товары.Номенклатура КАК Номенклатура,
	|	Товары.Характеристика КАК Характеристика,
	|	&ТекстЗапросаНаименованиеЕдиницыИзмерения КАК ЕдиницаИзмеренияНаименование,
	|	&ТекстЗапросаКодЕдиницыИзмерения КАК ЕдиницаИзмеренияКод,
	|	&ТекстЗапросаНаименованиеЕдиницыИзмерения КАК ВидУпаковки,
	|	Товары.КоличествоУпаковок КАК КоличествоУпаковок,
	|	Товары.Количество КАК Количество,
	|	КОНЕЦПЕРИОДА(Товары.Ссылка.Дата, ДЕНЬ) КАК ДатаПолученияЦены,
	|	Шапка.ВидЦены КАК ВидЦены,
	|	Шапка.ВалютаЦены КАК ВалютаЦены
	|ПОМЕСТИТЬ ВтТовары
	|ИЗ
	|	Документ.ОтчетОРозничныхПродажах.Товары КАК Товары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтШапка КАК Шапка
	|		ПО Товары.Ссылка = Шапка.Ссылка
	|ГДЕ
	|	Товары.Номенклатура.ТипНоменклатуры В (ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар), ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
	|	И (Шапка.ИсточникИнформацииОЦенахДляПечати = ЗНАЧЕНИЕ(Перечисление.ИсточникиИнформацииОЦенахДляПечати.ПоВидуЦен)
	|		ИЛИ (Шапка.ИсточникИнформацииОЦенахДляПечати = ЗНАЧЕНИЕ(Перечисление.ИсточникиИнформацииОЦенахДляПечати.ПоСебестоимости)
	|			И Шапка.ПредварительныйРасчет ЕСТЬ NULL))
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВидыЗапасов.Ссылка КАК Ссылка,
	|	ВидыЗапасов.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	ВидыЗапасов.ВидЗапасов КАК ВидЗапасов,
	|	Шапка.Организация КАК Организация,
	|	Аналитика.Склад КАК Склад,
	|	Аналитика.Номенклатура.ЕдиницаИзмерения КАК Упаковка,
	|	ВидыЗапасов.НомерСтроки КАК НомерСтроки,
	|	Аналитика.Номенклатура КАК Номенклатура,
	|	Аналитика.Характеристика КАК Характеристика,
	|	Аналитика.Номенклатура.ЕдиницаИзмерения.Представление КАК ЕдиницаИзмеренияНаименование,
	|	Аналитика.Номенклатура.ЕдиницаИзмерения.Код КАК ЕдиницаИзмеренияКод,
	|	Аналитика.Номенклатура.ЕдиницаИзмерения.Представление ВидУпаковки,
	|	ВидыЗапасов.Количество КАК КоличествоУпаковок,
	|	ВидыЗапасов.Количество КАК Количество,
	|	КОНЕЦПЕРИОДА(ВидыЗапасов.Ссылка.Дата, ДЕНЬ) КАК ДатаПолученияЦены,
	|	Аналитика.Склад.УчетныйВидЦены КАК ВидЦены,
	|	Аналитика.Склад.УчетныйВидЦены.ВалютаЦены КАК ВалютаЦены,
	|	Шапка.ПредварительныйРасчет КАК ПредварительныйРасчет
	|ПОМЕСТИТЬ ВтВидыЗапасов
	|ИЗ
	|	Документ.ОтчетОРозничныхПродажах.ВидыЗапасов КАК ВидыЗапасов
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК Аналитика
	|		ПО ВидыЗапасов.АналитикаУчетаНоменклатуры = Аналитика.КлючАналитики
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтШапка КАК Шапка
	|		ПО ВидыЗапасов.Ссылка = Шапка.Ссылка
	|ГДЕ
	|	Аналитика.Номенклатура.ТипНоменклатуры В (ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар), ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
	|	И Аналитика.Склад.ИсточникИнформацииОЦенахДляПечати = ЗНАЧЕНИЕ(Перечисление.ИсточникиИнформацииОЦенахДляПечати.ПоСебестоимости)
	|;
	|";
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ТекстЗапросаНаименованиеЕдиницыИзмерения",
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаЗначениеРеквизитаЕдиницыИзмерения(
			"Наименование",
			"Товары.Упаковка",
			"Товары.Номенклатура"));
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ТекстЗапросаКодЕдиницыИзмерения",
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаЗначениеРеквизитаЕдиницыИзмерения(
			"Код",
			"Товары.Упаковка",
			"Товары.Номенклатура"));
			
	СкладыСервер.ДополнитьТекстЗапросаДляПечатныхФормМХ1Х3(Запрос);
	
	Запрос.УстановитьПараметр("МассивДокументов", МассивОбъектов);
	Запрос.УстановитьПараметр("УчитыватьСебестоимостьТоваровПоВидамЗапасов",
		ПолучитьФункциональнуюОпцию("УчитыватьСебестоимостьТоваровПоВидамЗапасов"));
	Запрос.УстановитьПараметр("КолонкаКодов", КолонкаКодов);
	
	МассивРезультатов = Запрос.ВыполнитьПакет();
	РезультатПоШапке = МассивРезультатов[6];
	РезультатПоСкладам = МассивРезультатов[7];
	РезультатПоТабличнойЧасти = МассивРезультатов[8];
	
	СтруктураДанныхДляПечати = Новый Структура(
		"РезультатПоШапке, РезультатПоСкладам, РезультатПоТабличнойЧасти",
		РезультатПоШапке,
		РезультатПоСкладам,
		РезультатПоТабличнойЧасти);
		
	Возврат СтруктураДанныхДляПечати
	
КонецФункции

// Функция формирует табличный документ обложки кассовой книги
//
Функция СформироватьПечатнуюФормуКМ6(МассивОбъектов, ОбъектыПечати)
	
	УстановитьПривилегированныйРежим(Истина);
	
	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_КМ6";
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.ОтчетОРозничныхПродажах.ПФ_MXL_КМ6");
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ЕСТЬNULL(СУММА(ТЧТовары.Сумма), 0) КАК СуммаПродаж,
	|	ЕСТЬNULL(СУММА(ТЧТовары.СуммаНДС), 0) КАК СуммаПродажНДС,
	|	0 КАК СуммаПродажОтчет,
	|	0 КАК СуммаПродажОтчетНДС,
	|	0 КАК СуммаВозвратов,
	|	0 КАК СуммаВозвратовНДС,
	|	0 КАК СуммаПродажПодарочныхСертификатов,
	|	0 КАК СуммаВозвратовПодарочныхСертификатов,
	|	ОтчетОРозничныхПродажах.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ПродажиИВозвраты
	|ИЗ
	|	Документ.ОтчетОРозничныхПродажах КАК ОтчетОРозничныхПродажах
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЧекККМ.Товары КАК ТЧТовары
	|		ПО (ТЧТовары.Ссылка.КассоваяСмена = ОтчетОРозничныхПродажах.КассоваяСмена)
	|			И (ТЧТовары.Ссылка.Проведен)
	|			И (ТЧТовары.Ссылка.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыЧековККМ.Пробит))
	|ГДЕ
	|	ОтчетОРозничныхПродажах.Ссылка В(&МассивОбъектов)
	|
	|СГРУППИРОВАТЬ ПО
	|	ОтчетОРозничныхПродажах.Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	0,
	|	0,
	|	ЕСТЬNULL(СУММА(ТЧТоварыОтчет.Сумма), 0),
	|	ЕСТЬNULL(СУММА(ТЧТоварыОтчет.СуммаНДС), 0),
	|	0,
	|	0,
	|	0,
	|	0,
	|	ОтчетОРозничныхПродажах.Ссылка
	|ИЗ
	|	Документ.ОтчетОРозничныхПродажах КАК ОтчетОРозничныхПродажах
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ОтчетОРозничныхПродажах.Товары КАК ТЧТоварыОтчет
	|		ПО (ТЧТоварыОтчет.Ссылка = ОтчетОРозничныхПродажах.Ссылка)
	|ГДЕ
	|	ОтчетОРозничныхПродажах.Ссылка В(&МассивОбъектов)
	|
	|СГРУППИРОВАТЬ ПО
	|	ОтчетОРозничныхПродажах.Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	0,
	|	0,
	|	0,
	|	0,
	|	ЕСТЬNULL(СУММА(ТЧТовары.Сумма), 0),
	|	ЕСТЬNULL(СУММА(ТЧТовары.СуммаНДС), 0),
	|	0,
	|	0,
	|	ОтчетОРозничныхПродажах.Ссылка
	|ИЗ
	|	Документ.ОтчетОРозничныхПродажах КАК ОтчетОРозничныхПродажах
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЧекККМВозврат.Товары КАК ТЧТовары
	|		ПО (ТЧТовары.Ссылка.КассоваяСмена = ОтчетОРозничныхПродажах.КассоваяСмена)
	|			И (ТЧТовары.Ссылка.Проведен)
	|			И (ТЧТовары.Ссылка.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыЧековККМ.Пробит))
	|ГДЕ
	|	ОтчетОРозничныхПродажах.Ссылка В(&МассивОбъектов)
	|
	|СГРУППИРОВАТЬ ПО
	|	ОтчетОРозничныхПродажах.Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	ЕСТЬNULL(СУММА(ТЧПодарочныеСертификаты.Сумма), 0),
	|	0,
	|	ОтчетОРозничныхПродажах.Ссылка
	|ИЗ
	|	Документ.ОтчетОРозничныхПродажах КАК ОтчетОРозничныхПродажах
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.РеализацияПодарочныхСертификатов.ПодарочныеСертификаты КАК ТЧПодарочныеСертификаты
	|		ПО (ТЧПодарочныеСертификаты.Ссылка.КассоваяСмена = ОтчетОРозничныхПродажах.КассоваяСмена)
	|			И (ТЧПодарочныеСертификаты.Ссылка.Проведен)
	|			И (ТЧПодарочныеСертификаты.Ссылка.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыЧековККМ.Пробит))
	|ГДЕ
	|	ОтчетОРозничныхПродажах.Ссылка В(&МассивОбъектов)
	|
	|СГРУППИРОВАТЬ ПО
	|	ОтчетОРозничныхПродажах.Ссылка
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	ЕСТЬNULL(СУММА(ТЧПодарочныеСертификаты.Сумма), 0),
	|	ОтчетОРозничныхПродажах.Ссылка
	|ИЗ
	|	Документ.ОтчетОРозничныхПродажах КАК ОтчетОРозничныхПродажах
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ВозвратПодарочныхСертификатов.ПодарочныеСертификаты КАК ТЧПодарочныеСертификаты
	|		ПО (ТЧПодарочныеСертификаты.Ссылка.КассоваяСмена = ОтчетОРозничныхПродажах.КассоваяСмена)
	|			И (ТЧПодарочныеСертификаты.Ссылка.Проведен)
	|			И (ТЧПодарочныеСертификаты.Ссылка.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыЧековККМ.Пробит))
	|ГДЕ
	|	ОтчетОРозничныхПродажах.Ссылка В(&МассивОбъектов)
	|
	|СГРУППИРОВАТЬ ПО
	|	ОтчетОРозничныхПродажах.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПродажиИВозвраты.Ссылка КАК Ссылка,
	|	СУММА(ПродажиИВозвраты.СуммаПродаж) КАК СуммаПродаж,
	|	СУММА(ПродажиИВозвраты.СуммаПродажНДС) КАК СуммаПродажНДС,
	|	СУММА(ПродажиИВозвраты.СуммаПродажОтчет) КАК СуммаПродажОтчет,
	|	СУММА(ПродажиИВозвраты.СуммаПродажОтчетНДС) КАК СуммаПродажОтчетНДС,
	|	СУММА(ПродажиИВозвраты.СуммаВозвратов) КАК СуммаВозвратов,
	|	СУММА(ПродажиИВозвраты.СуммаВозвратовНДС) КАК СуммаВозвратовНДС,
	|	СУММА(ПродажиИВозвраты.СуммаПродажПодарочныхСертификатов) КАК СуммаПродажПодарочныхСертификатов,
	|	СУММА(ПродажиИВозвраты.СуммаВозвратовПодарочныхСертификатов) КАК СуммаВозвратовПодарочныхСертификатов
	|ПОМЕСТИТЬ ПродажиВозвратыСгруппировано
	|ИЗ
	|	ПродажиИВозвраты КАК ПродажиИВозвраты
	|
	|СГРУППИРОВАТЬ ПО
	|	ПродажиИВозвраты.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПродажиВозвратыСгруппировано.Ссылка КАК Ссылка,
	|	ПродажиВозвратыСгруппировано.Ссылка.Дата КАК ДатаДокумента,
	|	ПродажиВозвратыСгруппировано.Ссылка.ЦенаВключаетНДС КАК ЦенаВключаетНДС,
	|	ПродажиВозвратыСгруппировано.Ссылка.Номер КАК НомерДокумента,
	|	ПродажиВозвратыСгруппировано.Ссылка.Валюта КАК Валюта,
	|	ПродажиВозвратыСгруппировано.Ссылка.КассаККМ КАК КассаККМ,
	|	ПродажиВозвратыСгруппировано.Ссылка.КассаККМ.ТипКассы КАК ТипКассы,
	|	ПродажиВозвратыСгруппировано.Ссылка.КассаККМ.Представление КАК ККМПредставление,
	|	ПродажиВозвратыСгруппировано.Ссылка.КассаККМ.СерийныйНомер КАК СерийныйНомер,
	|	ПродажиВозвратыСгруппировано.Ссылка.КассаККМ.РегистрационныйНомер КАК РегистрационныйНомер,
	|	ПродажиВозвратыСгруппировано.Ссылка.Организация КАК Организация,
	|	ТаблицаОтветственныеЛица.РуководительНаименование КАК Руководитель,
	|	ТаблицаОтветственныеЛица.РуководительДолжность КАК ДолжностьРуководителя,
	|	ТаблицаОтветственныеЛица.ГлавныйБухгалтерНаименование КАК ГлавныйБухгалтер,
	|	ПродажиВозвратыСгруппировано.Ссылка.Организация.Префикс КАК Префикс,
	|	ПродажиВозвратыСгруппировано.Ссылка.Ответственный.ФизическоеЛицо КАК Ответственный,
	|	ПродажиВозвратыСгруппировано.Ссылка.КассоваяСмена КАК КассоваяСмена,
	|	ПродажиВозвратыСгруппировано.Ссылка.КассоваяСмена.НачалоКассовойСмены КАК НачалоСмены,
	|	ПродажиВозвратыСгруппировано.Ссылка.КассоваяСмена.ОкончаниеКассовойСмены КАК ОкончаниеСмены,
	|	ПродажиВозвратыСгруппировано.СуммаПродаж КАК СуммаПродаж,
	|	ПродажиВозвратыСгруппировано.СуммаПродажНДС КАК СуммаПродажНДС,
	|	ПродажиВозвратыСгруппировано.СуммаПродажОтчет КАК СуммаПродажОтчет,
	|	ПродажиВозвратыСгруппировано.СуммаПродажОтчетНДС КАК СуммаПродажОтчетНДС,
	|	ПродажиВозвратыСгруппировано.СуммаВозвратов КАК СуммаВозвратов,
	|	ПродажиВозвратыСгруппировано.СуммаВозвратовНДС КАК СуммаВозвратовНДС,
	|	ПродажиВозвратыСгруппировано.СуммаПродажПодарочныхСертификатов КАК СуммаПродажПодарочныхСертификатов,
	|	ПродажиВозвратыСгруппировано.СуммаВозвратовПодарочныхСертификатов КАК СуммаВозвратовПодарочныхСертификатов
	|ИЗ
	|	ПродажиВозвратыСгруппировано КАК ПродажиВозвратыСгруппировано
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаОтветственныеЛица КАК ТаблицаОтветственныеЛица
	|		ПО ПродажиВозвратыСгруппировано.Ссылка = ТаблицаОтветственныеЛица.Ссылка
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка";
	
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	ОтветственныеЛицаСервер.СформироватьВременнуюТаблицуОтветственныхЛицДокументов(МассивОбъектов, МенеджерВременныхТаблиц);	
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Текст = ТекстЗапроса;
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	ПервыйДокумент = Истина;
	
	Пока Выборка.Следующий() Цикл
		
		Если Не ПервыйДокумент Тогда
			ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		ПервыйДокумент = Ложь;
		НомерСтрокиНачало = ТабДокумент.ВысотаТаблицы + 1;
		
		СведенияОПокупателе = ФормированиеПечатныхФорм.СведенияОЮрФизЛице(Выборка.Организация, Выборка.ДатаДокумента);
		ОтветственныйПредставление = ФизическиеЛицаУТ.ФамилияИнициалыФизЛица(Выборка.Ответственный, Выборка.ДатаДокумента);
		
		ОбластьМакета = Макет.ПолучитьОбласть("Заголовок");
		ОбластьМакета.Параметры.Заполнить(Выборка);
		ОбластьМакета.Параметры.ОрганизацияПредставление = ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОПокупателе, "ПолноеНаименование,ИНН,ЮридическийАдрес,Телефоны, КодПоОКПО");
		ОбластьМакета.Параметры.ДатаДокумента            = Выборка.ДатаДокумента;
		ОбластьМакета.Параметры.ОрганизацияПоОКПО        = СведенияОПокупателе.КодПоОКПО;
		ОбластьМакета.Параметры.ОрганизацияИНН           = СведенияОПокупателе.ИНН;
		ОбластьМакета.Параметры.СерийныйНомер            = Выборка.СерийныйНомер;
		ОбластьМакета.Параметры.РегистрационныйНомер     = Выборка.РегистрационныйНомер;
		ОбластьМакета.Параметры.ККМПредставление         = Выборка.ККМПредставление;
		ОбластьМакета.Параметры.ПрограммаУчета           = "1С:Предприятие 8";
		ОбластьМакета.Параметры.НомерДокумента           = ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(Строка(Выборка.НомерДокумента), Ложь, Истина);
		ОбластьМакета.Параметры.Ответственный            = ОтветственныйПредставление;
		
		ШтрихкодированиеПечатныхФорм.ВывестиШтрихкодВТабличныйДокумент(ТабДокумент, Макет, ОбластьМакета, Выборка.Ссылка);
		ТабДокумент.Вывести(ОбластьМакета);
		
		ОбластьМакета = Макет.ПолучитьОбласть("Шапка");
		ТабДокумент.Вывести(ОбластьМакета);
		
		ОбластьМакета = Макет.ПолучитьОбласть("Строка");
		
		Если Выборка.ТипКассы = Перечисления.ТипыКассККМ.ФискальныйРегистратор И ЗначениеЗаполнено(Выборка.КассоваяСмена) Тогда
			СуммаПродаж  = Выборка.СуммаПродаж + ?(НЕ Выборка.ЦенаВключаетНДС, Выборка.СуммаПродажНДС, 0);
			СуммаВозврат = Выборка.СуммаВозвратов + ?(НЕ Выборка.ЦенаВключаетНДС, Выборка.СуммаВозвратовНДС, 0);
		Иначе
			Сумма = Выборка.СуммаПродажОтчет + ?(НЕ Выборка.ЦенаВключаетНДС, Выборка.СуммаПродажОтчетНДС, 0);
			Если Сумма >= 0 Тогда
				СуммаПродаж  = Сумма;
				СуммаВозврат = 0;
			Иначе
				СуммаПродаж  = 0;
				СуммаВозврат = -Сумма;
			КонецЕсли;
		КонецЕсли;
		
		ОбластьМакета.Параметры.Итого        = СуммаПродаж;
		ОбластьМакета.Параметры.ИтогоВозврат = СуммаВозврат;
		ОбластьМакета.Параметры.НомерСекции  = 1; // Продажи
		ТабДокумент.Вывести(ОбластьМакета);
		
		ОбластьМакета.Параметры.Итого        = Выборка.СуммаПродажПодарочныхСертификатов;
		ОбластьМакета.Параметры.ИтогоВозврат = Выборка.СуммаВозвратовПодарочныхСертификатов;
		ОбластьМакета.Параметры.НомерСекции  = 2; // Авансы
		ТабДокумент.Вывести(ОбластьМакета);
		
		ОбластьМакета = Макет.ПолучитьОбласть("Итог");
		
		ОбластьМакета.Параметры.Итого        = СуммаПродаж + Выборка.СуммаПродажПодарочныхСертификатов;
		ОбластьМакета.Параметры.ИтогоВозврат = СуммаВозврат + Выборка.СуммаВозвратовПодарочныхСертификатов;
		
		Если ЗначениеЗаполнено(СуммаПродаж) Тогда
			ОбластьМакета.Параметры.СуммаВыручкиПрописью = РаботаСКурсамиВалют.СформироватьСуммуПрописью(
				  СуммаПродаж
				- СуммаВозврат
				+ Выборка.СуммаПродажПодарочныхСертификатов
				- Выборка.СуммаВозвратовПодарочныхСертификатов, Выборка.Валюта);
		КонецЕсли;
		
		ТабДокумент.Вывести(ОбластьМакета);
		
		ОбластьМакета = Макет.ПолучитьОбласть("Подвал");
		ТабДокумент.Вывести(ОбластьМакета);
		
		ОбластьМакета = Макет.ПолучитьОбласть("Оборот");
		ОбластьМакета.Параметры.ФИОРуководителя       = Выборка.Руководитель;
		ОбластьМакета.Параметры.Ответственный         = ОтветственныйПредставление;
		ОбластьМакета.Параметры.ФИОКассираОрганизации = Выборка.ГлавныйБухгалтер;
		ТабДокумент.Вывести(ОбластьМакета);
		
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабДокумент, НомерСтрокиНачало, ОбъектыПечати, Выборка.Ссылка);
		
	КонецЦикла;
	
	Возврат ТабДокумент;
	
КонецФункции
//-- Локализация

#КонецОбласти


#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область Проведение

// Процедура дополняет тексты запросов проведения документа.
//
// Параметры:
//  Запрос - Запрос - Общий запрос проведения документа.
//  ТекстыЗапроса - СписокЗначений - Список текстов запроса проведения.
//  Регистры - Строка, Структура - Список регистров проведения документа через запятую или в ключах структуры.
//
Процедура ДополнитьТекстыЗапросовПроведения(Запрос, ТекстыЗапроса, Регистры) Экспорт
	
	
	
КонецПроцедуры


#КонецОбласти

#КонецОбласти
