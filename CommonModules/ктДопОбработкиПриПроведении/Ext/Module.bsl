Процедура ктДопПриПроведенииДокументаОбработкаПроведения(Источник, Отказ, РежимПроведения) Экспорт
	Если ТипЗнч(Источник) = Тип("ДокументОбъект.РасходныйОрдерНаТовары") Тогда
		ОбработкаПриПроведенииРасходныйОрдерНаТовары(Источник);
	ИначеЕсли ТипЗнч(Источник) = Тип("ДокументОбъект.ПриобретениеТоваровУслуг") Тогда
		ОбработкаПриПроведенииПостулениеТоваровУслуг(Источник);
	ИначеЕсли ТипЗнч(Источник) = Тип("ДокументОбъект.УстановкаЦенНоменклатуры") Тогда
		ОбработкаПриПроведенииУстановкаЦенНоменклатуры(Источник);
	ИначеЕсли ТипЗнч(Источник) = Тип("ДокументОбъект.ПриходныйОрдерНаТовары") Тогда
		Если ТипЗнч(Источник.Распоряжение) = Тип("ДокументСсылка.ЗаказПоставщику") Тогда
			Если Не дп_ДополнительныеПроцедуры.ПроверитьЗаказПоставщикуПоГТД(Источник.Распоряжение) Тогда
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю("В одной из строк Заказа поставщику отсутствует номер ГТД. Документ не проведен."+Символы.ПС+Источник.Распоряжение,Источник.Распоряжение);
				Отказ = Истина;
			КонецЕсли;
		КонецЕсли; 
	КонецЕсли;
КонецПроцедуры

Процедура ОбработкаПриПроведенииУстановкаЦенНоменклатуры(Знач Источник)
	
	Перем Движение, дп_ЦеныПоЦеновымГруппам, СтрокаТоваров, ТаблицаЦенПоТоварам, ТаблицаЦенПоЦеновымГруппам;
	
	дп_ЦеныПоЦеновымГруппам = Источник.Движения.дп_ЦеныПоЦеновымГруппам;
	дп_ЦеныПоЦеновымГруппам.Записывать = Истина;
	ТаблицаЦенПоТоварам = Источник.Товары.Выгрузить();
	
	ТаблицаЦенПоЦеновымГруппам = ПолучитьЦеныПоЦенвымГруппам(ТаблицаЦенПоТоварам);
	
	Для Каждого СтрокаТоваров из ТаблицаЦенПоЦеновымГруппам Цикл
		Движение = дп_ЦеныПоЦеновымГруппам.Добавить();
		Движение.Период 		= Источник.Дата;
		Движение.ЦеноваяГруппа  = СтрокаТоваров.ЦеноваяГруппа;
		Движение.ВидЦены       	= СтрокаТоваров.ВидЦены;
		Движение.Цена     		= СтрокаТоваров.Цена;
		Движение.Валюта         = СтрокаТоваров.Валюта;
	КонецЦикла;

КонецПроцедуры

Процедура ОбработкаПриПроведенииПостулениеТоваровУслуг(Знач Источник)
	
	Перем ОбъектНомерГТД, стрТЧ;
	
	//БА_Начало
	Для Каждого стрТЧ Из Источник.Товары Цикл
		Если Не ЗначениеЗаполнено(стрТЧ.НомерГТД) Тогда
			Продолжить;
		КонецЕсли;
		
		Если (СокрЛП(стрТЧ.НомерГТД.Импортер) <> СокрЛП(стрТЧ.дпИмпортер)) и ЗначениеЗаполнено(СокрЛП(стрТЧ.дпИмпортер)) Тогда
			ОбъектНомерГТД = стрТЧ.НомерГТД.ПолучитьОбъект();
			ОбъектНомерГТД.Импортер = СокрЛП(стрТЧ.дпИмпортер);
			Попытка
				ОбъектНомерГТД.Записать();
			Исключение
			КонецПопытки;
		КонецЕсли;
	КонецЦикла;		
	//БА_Конец

КонецПроцедуры

Процедура ОбработкаПриПроведенииРасходныйОрдерНаТовары(Знач Источник)
	
	Перем СтрокаРаспоряжение, ТаблРаспоряжения;
	
	ТаблРаспоряжения = Источник.ТоварыПоРаспоряжениям.Выгрузить();
	ТаблРаспоряжения.Свернуть("Распоряжение");
	Для Каждого СтрокаРаспоряжение из ТаблРаспоряжения Цикл
		Если ЗначениеЗаполнено(СтрокаРаспоряжение.Распоряжение) Тогда
			Если ТипЗнч(СтрокаРаспоряжение.Распоряжение) = Тип("ДокументСсылка.ЗаказКлиента")
				и Не ЕстьНакладная(СтрокаРаспоряжение.Распоряжение) 
				и Источник.Статус = Перечисления.СтатусыРасходныхОрдеров.Отгружен Тогда
				
				//Отказ = Истина;
				//ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Не создана Расходная накладная! Статус ""Отгружен"" установить нельзя!");
				
			КонецЕсли;
			
			//Кожемякин А.Г. agkozhemyakin@gmail.com {
			//03.06.2016 17:36:35
			//проверим количество к отгрузке по распоряжению и фактически отгруженные товары
			//При ПЕРВОМ проведении РОнТ в статусах “К отгрузке” или “Отгружен” создавать задачу:
			//- если все такие ордера на основании данного заказа клиента = самому заказу (строки с действием “Отгрузить”), то исполнитель - Оператор (потом придумаем, как)
			//- если нет (или распоряжение - не заказ клиента), то исполнитель = менеджер в Заказе клиента (или какой-то другой, для других документов - придумаем).
			Если Источник.Статус = Перечисления.СтатусыРасходныхОрдеров.КОтгрузке
				или Источник.Статус = Перечисления.СтатусыРасходныхОрдеров.Отгружен Тогда
				
				Если дп_ДополнительныеПроцедуры.ЭтоПервоеПроведение(Источник.Ссылка) Тогда
					
					дп_ДополнительныеПроцедуры.СоздатьЗаданиеДляРасходногоОрдера(Источник.Ссылка, СтрокаРаспоряжение.Распоряжение);	
					
				КонецЕсли;
				
			КонецЕсли;
			//}Кожемякин А.Г.
			//Кожемякин А.Г. agkozhemyakin@gmail.com {
			//08.06.2016 21:09:35
			//запишем возникновение статусов
			дп_ДополнительныеПроцедуры.ЗаписатьСтатусРасходногоОрдера(Источник.Ссылка);
			//}Кожемякин А.Г.
			
			
			//НаборЗаписей = Источник.Движения.ТоварыКОтгрузке;
			//НаборЗаписей.Записывать = Истина;
			//Таблица = НаборЗаписей.Выгрузить();
			//Для Каждого СтрокаДвижения из  Таблица Цикл
			//	СтрокаДвижения.ЗаданиеНаПеревозку 	= Источник.ЗаданиеНаПеревозку;
			//	СтрокаДвижения.КОформлению 			= СтрокаДвижения.КОтгрузке;
			//КонецЦикла;
			//НаборЗаписей.Загрузить(Таблица);
		КонецЕсли;
	КОнецЦикла;

КонецПроцедуры

Функция ПолучитьЦеныПоЦенвымГруппам(ТаблицаЦенПоТоварам)
	Запрос = Новый Запрос("ВЫБРАТЬ
	|	ТаблПоТоварам.Номенклатура,
	|	ТаблПоТоварам.ВидЦены как ВидЦены,
	|	ТаблПоТоварам.Цена
	//|	ТаблПоТоварам.ВидЦены.ВалютаЦены как Валюта,
	//|	ТаблПоТоварам.Номенклатура.ЦеноваяГруппа КАК ЦеноваяГруппа
	|ПОМЕСТИТЬ ВремТабл
	|ИЗ
	|	&ТаблПоТоварам КАК ТаблПоТоварам
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	//|	ВремТабл.Номенклатура,
	|	ВремТабл.ВидЦены,
	|	МАКСИМУМ(ВремТабл.Цена) КАК Цена,
	|	ВремТабл.ВидЦены.ВалютаЦены как Валюта,
	|	ВремТабл.Номенклатура.ЦеноваяГруппа как ЦеноваяГруппа
	|ИЗ
	|	ВремТабл КАК ВремТабл
	|
	|СГРУППИРОВАТЬ ПО
	|	ВремТабл.Номенклатура.ЦеноваяГруппа,
	|	ВремТабл.ВидЦены,
	//|	ВремТабл.Номенклатура,
	|	ВремТабл.ВидЦены.ВалютаЦены");
	
	Запрос.УстановитьПараметр("ТаблПоТоварам",ТаблицаЦенПоТоварам);
	
	Возврат Запрос.Выполнить().Выгрузить();
КонецФункции	

Функция ЕстьНакладная(Заказ)
	

		//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!

	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	РеализацияТоваровУслуг.Ссылка
		|ИЗ
		|	Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
		|ГДЕ
		|	РеализацияТоваровУслуг.Проведен
		|	И РеализацияТоваровУслуг.ЗаказКлиента = &Заказ";

	Запрос.УстановитьПараметр("Заказ", Заказ);
	
	Результат = Запрос.Выполнить();

	ВыборкаДетальныеЗаписи = Результат.Выбрать();

	Если ВыборкаДетальныеЗаписи.Следующий() Тогда
		Возврат Истина;
	Иначе
		Возврат Ложь;
	КонецЕсли;

	//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	

КонецФункции // ()

//+MG
Процедура mg_ПеремещениеТоваровПриПроведенииПриЗаписи(Источник, Отказ) Экспорт
	
	Возврат;
	
	Если Не Источник.СкладОтправитель = Справочники.Склады.НайтиПоНаименованию("Склад предварительной обработки товаров") ИЛИ  Не Источник.Проведен Тогда
		Возврат;
	КонецЕсли;
	
	Если Не Источник.СкладПолучатель = Справочники.Склады.НайтиПоНаименованию("Основной склад") Тогда
		Возврат;
	КонецЕсли;
	
	
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПриходныйОрдерНаТовары.Ссылка
	|ИЗ
	|	Документ.ПриходныйОрдерНаТовары КАК ПриходныйОрдерНаТовары
	|ГДЕ
	|	ПриходныйОрдерНаТовары.Проведен
	|	И ПриходныйОрдерНаТовары.Распоряжение = &Распоряжение
	|
	|СГРУППИРОВАТЬ ПО
	|	ПриходныйОрдерНаТовары.Проведен,
	|	ПриходныйОрдерНаТовары.Ссылка";
	
	Запрос.УстановитьПараметр("Распоряжение", Источник.Ссылка);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Следующий() Тогда
		Возврат;  //Документ уже введен
	КонецЕсли;
	
	ПриходныйОрдерНаТовары = Документы.ПриходныйОрдерНаТовары.СоздатьДокумент();
	ПриходныйОрдерНаТовары.Заполнить(Источник.Ссылка);
	ОбщегоНазначенияУТ.ОбработкаЗаполнения(ПриходныйОрдерНаТовары, Источник.Ссылка, Истина);
	ПриходныйОрдерНаТовары.Дата = Источник.Дата;
	
	ЗаполнитьТоварыПриходногоОрдераПоТоварамКПоступлению(ПриходныйОрдерНаТовары,Источник.Ссылка,"НоменклатураКоличество", НачалоДня(ТекущаяДата()));
	ПриходныйОрдерНаТовары.Склад = Источник.СкладПолучатель;
	ПриходныйОрдерНаТовары.Записать(РежимЗаписиДокумента.Проведение);
	
	
	
КонецПроцедуры

Процедура ЗаполнитьТоварыПриходногоОрдераПоТоварамКПоступлению(ПриходныйОрдер,Распоряжение,ВидЗаполнения,ДатаПоступления)

	Если ПриходныйОрдер.СкладскаяОперация = Перечисления.СкладскиеОперации.ПриемкаПоПеремещению Тогда
		
		СкладОтправитель = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Распоряжение, "СкладОтправитель");
		
			ТекстЗапросаПоРаспоряжениям =
			" = &Распоряжение ";
		
		Если СкладыСервер.ИспользоватьОрдернуюСхемуПриОтгрузке(СкладОтправитель, ДатаПоступления) Тогда
			
			УстановитьПривилегированныйРежим(Истина);
			
			Запрос = Новый Запрос;
			
			Если ВидЗаполнения = "НоменклатураКоличество"
				Или ВидЗаполнения = "Номенклатура" Тогда
				
				ТекстЗапроса =
				"ВЫБРАТЬ
				|	ВложенныйЗапрос.Номенклатура,
				|	ВложенныйЗапрос.Характеристика,
				|	ВложенныйЗапрос.Назначение,
				|	ВложенныйЗапрос.Упаковка,
				|   СУММА(ВложенныйЗапрос.Количество) КАК КоличествоОстаток,";
				Если ВидЗаполнения = "НоменклатураКоличество" Тогда
					
					ТекстЗапроса = ТекстЗапроса + "
					|	СУММА(ВложенныйЗапрос.КоличествоУпаковок) КАК КоличествоУпаковок,
					|	СУММА(ВложенныйЗапрос.Количество) КАК Количество ";
				Иначе
					
					ТекстЗапроса = ТекстЗапроса + "
					|	0 КАК КоличествоУпаковок, 
					|	0 КАК Количество ";
				КонецЕсли;
				ТекстЗапроса = ТекстЗапроса + "
				|ИЗ
				|	(ВЫБРАТЬ
				|		РасходныйОрдерНаТоварыТовары.Номенклатура КАК Номенклатура,
				|		РасходныйОрдерНаТоварыТовары.Характеристика КАК Характеристика,
				|		ВЫБОР КОГДА ЕСТЬNULL(РасходныйОрдерНаТоварыТовары.Назначение.ДвиженияПоСкладскимРегистрам, ЛОЖЬ)   
				|				ТОГДА РасходныйОрдерНаТоварыТовары.Назначение
				|				ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
				|		КОНЕЦ КАК Назначение,
				|		РасходныйОрдерНаТоварыТовары.Упаковка КАК Упаковка,
				|		РасходныйОрдерНаТоварыТовары.КоличествоУпаковок КАК КоличествоУпаковок,
				|		РасходныйОрдерНаТоварыТовары.Количество КАК Количество
				|	ИЗ
				|		Документ.РасходныйОрдерНаТовары.Товары КАК РасходныйОрдерНаТоварыТовары
				|	ГДЕ
				|		РасходныйОрдерНаТоварыТовары.Ссылка.Распоряжение " + ТекстЗапросаПоРаспоряжениям + "
				|		И РасходныйОрдерНаТоварыТовары.Ссылка.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыРасходныхОрдеров.Отгружен)
				|		И РасходныйОрдерНаТоварыТовары.Ссылка.Проведен
				|		И НЕ РасходныйОрдерНаТоварыТовары.ЭтоУпаковочныйЛист
				|	
				|	ОБЪЕДИНИТЬ ВСЕ
				|	
				|	ВЫБРАТЬ
				|		ПриходныйОрдерНаТовары.Номенклатура,
				|		ПриходныйОрдерНаТовары.Характеристика,
				|		ВЫБОР КОГДА ЕСТЬNULL(ПриходныйОрдерНаТовары.Назначение.ДвиженияПоСкладскимРегистрам, ЛОЖЬ)   
				|				ТОГДА ПриходныйОрдерНаТовары.Назначение
				|				ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
				|		КОНЕЦ,
				|		ПриходныйОрдерНаТовары.Упаковка,
				|		-ПриходныйОрдерНаТовары.КоличествоУпаковок,
				|		-ПриходныйОрдерНаТовары.Количество
				|	ИЗ
				|		Документ.ПриходныйОрдерНаТовары.Товары КАК ПриходныйОрдерНаТовары
				|	ГДЕ
				|		ПриходныйОрдерНаТовары.Ссылка.Распоряжение = &Распоряжение
				|		И ПриходныйОрдерНаТовары.Ссылка <> &ТекущийПриходныйОрдер
				|		И ПриходныйОрдерНаТовары.Ссылка.Проведен
				|		И НЕ ПриходныйОрдерНаТовары.ЭтоУпаковочныйЛист) КАК ВложенныйЗапрос
				|
				|СГРУППИРОВАТЬ ПО
				|	ВложенныйЗапрос.Номенклатура,
				|	ВложенныйЗапрос.Характеристика,
				|	ВложенныйЗапрос.Назначение,
				|	ВложенныйЗапрос.Упаковка
				|
				|ИМЕЮЩИЕ
				|	СУММА(ВложенныйЗапрос.Количество) > 0";
				
			ИначеЕсли ВидЗаполнения = "Количество" Тогда
			ТекстЗапроса =
				"ВЫБРАТЬ
				|	ТаблицаТоваров.Номенклатура,
				|	ТаблицаТоваров.Характеристика,
				|	ТаблицаТоваров.Назначение,
				|	ТаблицаТоваров.НомерСтроки
				|ПОМЕСТИТЬ ТаблицаНомеклатурыДляЗапроса
				|ИЗ
				|	&ТаблицаТоваров КАК ТаблицаТоваров
				|;
				|
				|////////////////////////////////////////////////////////////////////////////////
				|ВЫБРАТЬ
				|	ВложенныйЗапрос.Номенклатура,
				|	ВложенныйЗапрос.Характеристика,
				|	ВложенныйЗапрос.Назначение,
				|	ВложенныйЗапрос.Упаковка,
				|	СУММА(ВложенныйЗапрос.КоличествоУпаковок) КАК КоличествоУпаковок,
				|	СУММА(ВложенныйЗапрос.Количество) КАК Количество
				|ПОМЕСТИТЬ ТаблицаНепринятыхТоваров
				|ИЗ
				|	(ВЫБРАТЬ
				|		РасходныйОрдерНаТоварыТовары.Номенклатура КАК Номенклатура,
				|		РасходныйОрдерНаТоварыТовары.Характеристика КАК Характеристика,
				|		ВЫБОР КОГДА ЕСТЬNULL(РасходныйОрдерНаТоварыТовары.Назначение.ДвиженияПоСкладскимРегистрам, ЛОЖЬ)  
				|				ТОГДА РасходныйОрдерНаТоварыТовары.Назначение
				|				ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
				|		КОНЕЦ КАК Назначение,
				|		РасходныйОрдерНаТоварыТовары.Упаковка КАК Упаковка,
				|		РасходныйОрдерНаТоварыТовары.КоличествоУпаковок КАК КоличествоУпаковок,
				|		РасходныйОрдерНаТоварыТовары.Количество КАК Количество
				|	ИЗ
				|		Документ.РасходныйОрдерНаТовары.Товары КАК РасходныйОрдерНаТоварыТовары
				|	ГДЕ
				|		РасходныйОрдерНаТоварыТовары.Ссылка.Распоряжение " + ТекстЗапросаПоРаспоряжениям + "
				|		И РасходныйОрдерНаТоварыТовары.Ссылка.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыРасходныхОрдеров.Отгружен)
				|		И РасходныйОрдерНаТоварыТовары.Ссылка.Проведен
				|		И НЕ РасходныйОрдерНаТоварыТовары.ЭтоУпаковочныйЛист
				|	
				|	ОБЪЕДИНИТЬ ВСЕ
				|	
				|	ВЫБРАТЬ
				|		ПриходныйОрдерНаТовары.Номенклатура,
				|		ПриходныйОрдерНаТовары.Характеристика,
				|		ВЫБОР КОГДА ЕСТЬNULL(ПриходныйОрдерНаТовары.Назначение.ДвиженияПоСкладскимРегистрам, ЛОЖЬ)  
				|				ТОГДА ПриходныйОрдерНаТовары.Назначение
				|				ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
				|		КОНЕЦ,
				|		ПриходныйОрдерНаТовары.Упаковка,
				|		-ПриходныйОрдерНаТовары.КоличествоУпаковок,
				|		-ПриходныйОрдерНаТовары.Количество
				|	ИЗ
				|		Документ.ПриходныйОрдерНаТовары.Товары КАК ПриходныйОрдерНаТовары
				|	ГДЕ
				|		ПриходныйОрдерНаТовары.Ссылка.Распоряжение = &Распоряжение
				|		И ПриходныйОрдерНаТовары.Ссылка <> &ТекущийПриходныйОрдер
				|		И ПриходныйОрдерНаТовары.Ссылка.Проведен
				|		И НЕ ПриходныйОрдерНаТовары.ЭтоУпаковочныйЛист)  КАК ВложенныйЗапрос
				|
				|СГРУППИРОВАТЬ ПО
				|	ВложенныйЗапрос.Номенклатура,
				|	ВложенныйЗапрос.Характеристика,
				|	ВложенныйЗапрос.Назначение,
				|	ВложенныйЗапрос.Упаковка
				|
				|ИМЕЮЩИЕ
				|	СУММА(ВложенныйЗапрос.Количество) > 0
				|;
				|
				|////////////////////////////////////////////////////////////////////////////////
				|ВЫБРАТЬ
				|	ТаблицаНомеклатурыДляЗапроса.Номенклатура,
				|	ТаблицаНомеклатурыДляЗапроса.Характеристика,
				|	ТаблицаНомеклатурыДляЗапроса.Назначение,
				|	МИНИМУМ(ТаблицаНомеклатурыДляЗапроса.НомерСтроки) КАК НомерСтроки
				|ПОМЕСТИТЬ ТаблицаТоваров
				|ИЗ
				|	ТаблицаНомеклатурыДляЗапроса КАК ТаблицаНомеклатурыДляЗапроса
				|
				|СГРУППИРОВАТЬ ПО
				|	ТаблицаНомеклатурыДляЗапроса.Номенклатура,
				|	ТаблицаНомеклатурыДляЗапроса.Характеристика,
				|	ТаблицаНомеклатурыДляЗапроса.Назначение
				|;
				|
				|////////////////////////////////////////////////////////////////////////////////
				|ВЫБРАТЬ
				|	ТаблицаТоваров.Номенклатура,
				|	ТаблицаТоваров.Характеристика,
				|	ТаблицаТоваров.Назначение,
				|	ТаблицаНепринятыхТоваров.Упаковка,
				|	ТаблицаНепринятыхТоваров.КоличествоУпаковок КАК КоличествоУпаковок,
				|	ТаблицаНепринятыхТоваров.Количество КАК Количество,
				|	ТаблицаТоваров.НомерСтроки КАК НомерСтроки
				|ИЗ
				|	ТаблицаТоваров КАК ТаблицаТоваров
				|		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаНепринятыхТоваров КАК ТаблицаНепринятыхТоваров
				|		ПО ТаблицаТоваров.Номенклатура = ТаблицаНепринятыхТоваров.Номенклатура
				|			И ТаблицаТоваров.Характеристика = ТаблицаНепринятыхТоваров.Характеристика
				|			И ТаблицаТоваров.Назначение = ТаблицаНепринятыхТоваров.Назначение
				|
				|УПОРЯДОЧИТЬ ПО
				|	ТаблицаТоваров.НомерСтроки";
				
				Запрос.УстановитьПараметр("ТаблицаТоваров",ПриходныйОрдер.Товары.Выгрузить(,"Номенклатура,Характеристика,Назначение,НомерСтроки"));
			КонецЕсли;	
			
			Запрос.Текст = ТекстЗапроса;
			Запрос.УстановитьПараметр("Распоряжение",Распоряжение);
			Запрос.УстановитьПараметр("ТекущийПриходныйОрдер",ПриходныйОрдер.Ссылка);
			
			ПриходныйОрдер.Товары.Загрузить(Запрос.Выполнить().Выгрузить());
			
			Возврат;
		КонецЕсли;	
	КонецЕсли;

	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка", ПриходныйОрдер.Ссылка);
	Запрос.УстановитьПараметр("Склад", ПриходныйОрдер.Склад);
	Запрос.УстановитьПараметр("Распоряжение", Распоряжение);
	Если ЗначениеЗаполнено(ДатаПоступления) Тогда
		Запрос.УстановитьПараметр("ДатаОстатков", КонецДня(ДатаПоступления));
	Иначе
		Запрос.УстановитьПараметр("ДатаОстатков", ДатаПоступления);
	КонецЕсли;
		
	Если ВидЗаполнения = "Номенклатура" Или ВидЗаполнения = "НоменклатураКоличество" Тогда

		ПриходныйОрдер.Товары.Очистить();

		ТекстЗапроса =
		"ВЫБРАТЬ
		|	ТоварыКПоступлению.Номенклатура      КАК Номенклатура,
		|	ТоварыКПоступлению.Характеристика    КАК Характеристика,
		|	ВЫБОР КОГДА ЕСТЬNULL(ТоварыКПоступлению.Назначение.ДвиженияПоСкладскимРегистрам, ЛОЖЬ)  
		|			ТОГДА ТоварыКПоступлению.Назначение
		|			ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
		|	КОНЕЦ								   КАК Назначение,";

		Если ВидЗаполнения = "НоменклатураКоличество" Тогда

			ТекстЗапроса = ТекстЗапроса + "
				|	СУММА(ТоварыКПоступлению.Количество) КАК Количество,
				|	СУММА(ТоварыКПоступлению.Количество) КАК КоличествоУпаковок ";
		Иначе

			ТекстЗапроса = ТекстЗапроса + "
				|	СУММА(ТоварыКПоступлению.Количество) КАК КоличествоРегистр, 
				|	0 КАК КоличествоУпаковок, 
				|	0 КАК Количество ";
		КонецЕсли;

		ТекстЗапроса = ТекстЗапроса + "
		|ИЗ
		|	(ВЫБРАТЬ
		|		ТоварыКПоступлению.Номенклатура      КАК Номенклатура,
		|		ТоварыКПоступлению.Характеристика    КАК Характеристика,
		|		ТоварыКПоступлению.Назначение    	 КАК Назначение,
		|		ТоварыКПоступлению.КОформлениюНакладныхПоРаспоряжениюОстаток
		|		 - ТоварыКПоступлению.ПринимаетсяОстаток КАК Количество
		|	ИЗ
		|		РегистрНакопления.ТоварыКПоступлению.Остатки(&ДатаОстатков,
		|				ДокументПоступления = &Распоряжение
		|				И Склад = &Склад) КАК ТоварыКПоступлению
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		ТоварыКПоступлению.Номенклатура,
		|		ТоварыКПоступлению.Характеристика,
		|		ТоварыКПоступлению.Назначение,
		|		ВЫБОР КОГДА ТоварыКПоступлению.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) ТОГДА
		|				-ТоварыКПоступлению.КОформлениюНакладныхПоРаспоряжению
		|			ИНАЧЕ ТоварыКПоступлению.КОформлениюНакладныхПоРаспоряжению
		|			КОНЕЦ
		|			- ВЫБОР КОГДА ТоварыКПоступлению.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) ТОГДА
		|				- ТоварыКПоступлению.Принимается
		|			ИНАЧЕ ТоварыКПоступлению.Принимается
		|		КОНЕЦ 
		|	ИЗ
		|		РегистрНакопления.ТоварыКПоступлению КАК ТоварыКПоступлению
		|	ГДЕ
		|		ТоварыКПоступлению.Регистратор = &Ссылка
		|		И ТоварыКПоступлению.Активность
		|		И ТоварыКПоступлению.Склад = &Склад
		|		И ТоварыКПоступлению.ДокументПоступления = &Распоряжение
		|
		|) КАК ТоварыКПоступлению
		|
		|СГРУППИРОВАТЬ ПО
		|	ТоварыКПоступлению.Номенклатура,
		|	ТоварыКПоступлению.Характеристика,
		|	ТоварыКПоступлению.Назначение
		|
		|ИМЕЮЩИЕ
		|	СУММА(ТоварыКПоступлению.Количество) > 0
		|
		|УПОРЯДОЧИТЬ ПО
		|	Номенклатура.Наименование,
		|	Характеристика.Наименование
		|";
		Запрос.Текст = ТекстЗапроса;
		Результат = Запрос.Выполнить();
		Если Не Результат.Пустой() Тогда

			ПриходныйОрдер.Товары.Загрузить(Результат.Выгрузить());

		КонецЕсли;

	Иначе
		ТекстЗапроса =
		
		"ВЫБРАТЬ
		|	Таблица.Номенклатура КАК Номенклатура,
		|	Таблица.Характеристика КАК Характеристика,
		|	Таблица.НомерСтроки КАК НомерСтроки
		|ПОМЕСТИТЬ ТаблицаНоменклатурыДляЗапроса
		|ИЗ
		|	&Таблица КАК Таблица
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Таблица.Номенклатура КАК Номенклатура,
		|	Таблица.Характеристика КАК Характеристика,
		|	МИНИМУМ(Таблица.НомерСтроки) КАК НомерСтроки
		|ПОМЕСТИТЬ ТаблицаНоменклатуры
		|ИЗ
		|	ТаблицаНоменклатурыДляЗапроса КАК Таблица
		|
		|СГРУППИРОВАТЬ ПО
		|	Таблица.Номенклатура,
		|	Таблица.Характеристика
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТоварыКПоступлению.Номенклатура КАК Номенклатура,
		|	ТоварыКПоступлению.Характеристика КАК Характеристика,
		|	ТоварыКПоступлению.КОформлениюНакладныхПоРаспоряжениюОстаток - ТоварыКПоступлению.ПринимаетсяОстаток КАК Количество
		|ПОМЕСТИТЬ ТоварыКПоступлению
		|ИЗ
		|	РегистрНакопления.ТоварыКПоступлению.Остатки(&ДатаОстатков
		|			,
		|			ДокументПоступления = &Распоряжение
		|				И Склад = &Склад) КАК ТоварыКПоступлению
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ТоварыКПоступлению.Номенклатура,
		|	ТоварыКПоступлению.Характеристика,
		|	ВЫБОР
		|		КОГДА ТоварыКПоступлению.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|			ТОГДА -ТоварыКПоступлению.КОформлениюНакладныхПоРаспоряжению
		|		ИНАЧЕ ТоварыКПоступлению.КОформлениюНакладныхПоРаспоряжению
		|	КОНЕЦ - ВЫБОР
		|		КОГДА ТоварыКПоступлению.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|			ТОГДА -ТоварыКПоступлению.Принимается
		|		ИНАЧЕ ТоварыКПоступлению.Принимается
		|	КОНЕЦ
		|ИЗ
		|	РегистрНакопления.ТоварыКПоступлению КАК ТоварыКПоступлению
		|ГДЕ
		|	ТоварыКПоступлению.Регистратор = &Ссылка
		|	И ТоварыКПоступлению.Активность = ИСТИНА
		|	И ТоварыКПоступлению.Склад = &Склад
		|	И ТоварыКПоступлению.ДокументПоступления = &Распоряжение
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТаблицаНоменклатуры.Номенклатура КАК Номенклатура,
		|	ТаблицаНоменклатуры.Характеристика КАК Характеристика,
		|	МИНИМУМ(ТаблицаНоменклатуры.НомерСтроки) КАК НомерСтрокиСтарый,
		|	СУММА(ЕСТЬNULL(ТоварыКПоступлению.Количество, 0)) КАК Количество,
		|	СУММА(ЕСТЬNULL(ТоварыКПоступлению.Количество, 0)) КАК КоличествоУпаковок
		|ИЗ
		|	ТаблицаНоменклатуры КАК ТаблицаНоменклатуры
		|		ЛЕВОЕ СОЕДИНЕНИЕ ТоварыКПоступлению КАК ТоварыКПоступлению
		|		ПО ТаблицаНоменклатуры.Номенклатура = ТоварыКПоступлению.Номенклатура
		|			И ТаблицаНоменклатуры.Характеристика = ТоварыКПоступлению.Характеристика
		|
		|СГРУППИРОВАТЬ ПО
		|	ТаблицаНоменклатуры.Номенклатура,
		|	ТаблицаНоменклатуры.Характеристика
		|
		|УПОРЯДОЧИТЬ ПО
		|	НомерСтрокиСтарый
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ТаблицаНоменклатурыДляЗапроса
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ТаблицаНоменклатуры
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ТоварыКПоступлению";	
		
		Запрос.УстановитьПараметр("Таблица", ПриходныйОрдер.Товары.Выгрузить());
		Запрос.Текст = ТекстЗапроса;
		
		ПриходныйОрдер.Товары.Загрузить(Запрос.Выполнить().Выгрузить());
	КонецЕсли;

	Если ВидЗаполнения = "Количество"
		Или ВидЗаполнения = "НоменклатураКоличество" Тогда
	
	   	Если СкладыСервер.ИспользоватьАдресноеХранение(ПриходныйОрдер.Склад, ПриходныйОрдер.Помещение, ПриходныйОрдер.Дата) Тогда
			РазбитьТЧТоварыПриходныйОрдерПоУпаковкамСправочно(ПриходныйОрдер);
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура РазбитьТЧТоварыПриходныйОрдерПоУпаковкамСправочно(ПриходныйОрдер)
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Таблица.Номенклатура КАК Номенклатура,
	|	Таблица.Характеристика КАК Характеристика,
	|	Таблица.НомерСтроки КАК НомерСтроки,
	|	Таблица.Количество КАК Количество,
	|	Таблица.Назначение КАК Назначение
	|ПОМЕСТИТЬ ТаблицаНоменклатурыДляЗапроса
	|ИЗ
	|	&Таблица КАК Таблица
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Таблица.Номенклатура КАК Номенклатура,
	|	МИНИМУМ(Таблица.НомерСтроки) КАК НомерСтроки,
	|	ВЫРАЗИТЬ(Таблица.Номенклатура КАК Справочник.Номенклатура).НаборУпаковок КАК НаборУпаковок,
	|	Таблица.Характеристика КАК Характеристика,
	|	Таблица.Назначение КАК Назначение,
	|	СУММА(Таблица.Количество) КАК Количество
	|ПОМЕСТИТЬ ТаблицаНоменклатуры
	|ИЗ
	|	ТаблицаНоменклатурыДляЗапроса КАК Таблица
	|
	|СГРУППИРОВАТЬ ПО
	|	Таблица.Номенклатура,
	|	ВЫРАЗИТЬ(Таблица.Номенклатура КАК Справочник.Номенклатура).НаборУпаковок,
	|	Таблица.Характеристика,
	|	Таблица.Назначение  
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаНоменклатуры.Номенклатура КАК Номенклатура,
	|	ТаблицаНоменклатуры.Количество,
	|	ТаблицаНоменклатуры.НомерСтроки,
	|	ТаблицаНоменклатуры.Характеристика КАК Характеристика,
	|	ТаблицаНоменклатуры.Назначение КАК Назначение,
	|	ЕСТЬNULL(УпаковкиНоменклатуры.Числитель, 1) КАК КоличествоВУпаковке,
	//|	1 КАК КоличествоВУпаковке,
	|	ЕСТЬNULL(УпаковкиНоменклатуры.Ссылка, ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)) КАК Упаковка,
	|	ЕСТЬNULL(УпаковкиНоменклатуры.ЕдиницаИзмерения.Представление, """") КАК ЕдиницаИзмеренияУпаковкиПредставление
	|ИЗ
	|	ТаблицаНоменклатуры КАК ТаблицаНоменклатуры
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.УпаковкиЕдиницыИзмерения КАК УпаковкиНоменклатуры
	|		ПО (ТаблицаНоменклатуры.Номенклатура = УпаковкиНоменклатуры.Владелец
	|				ИЛИ ТаблицаНоменклатуры.НаборУпаковок = УпаковкиНоменклатуры.Владелец)
	|			И (НЕ УпаковкиНоменклатуры.ПометкаУдаления)
	|			И ТаблицаНоменклатуры.Количество >= УпаковкиНоменклатуры.Числитель
	|			И (УпаковкиНоменклатуры.Числитель <> 0)
	|
	|УПОРЯДОЧИТЬ ПО
	|	ТаблицаНоменклатуры.НомерСтроки,
	|	КоличествоВУпаковке,
	|	ЕдиницаИзмеренияУпаковкиПредставление";
	
	ТаблицаНоменклатуры = ПриходныйОрдер.Товары.Выгрузить();
	Запрос.УстановитьПараметр("Таблица",ТаблицаНоменклатуры);
	
	ПриходныйОрдер.Товары.Очистить();
	
	Выборка = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	ТекНомерСтроки = Неопределено;
	ТекНоменклатура = Неопределено;
	ТекХарактеристика = Неопределено;
	ТекНазначение = Неопределено;
	Количество = Неопределено;
	
	Пока Выборка.Следующий() Цикл
		
		Если Выборка.НомерСтроки <> ТекНомерСтроки Тогда
			
			Если Количество <> Неопределено Тогда
				НоваяСтрока = ПриходныйОрдер.Товары.Добавить();
				НоваяСтрока.Количество = Количество;
				НоваяСтрока.КоличествоУпаковок = Количество;
				
				НоваяСтрока.Номенклатура = ТекНоменклатура;
				НоваяСтрока.Характеристика = ТекХарактеристика;
				НоваяСтрока.Назначение = ТекНазначение;
			КонецЕсли;
			
			ТекНомерСтроки              = Выборка.НомерСтроки;
			ТекНоменклатура             = Выборка.Номенклатура; 
			ТекХарактеристика           = Выборка.Характеристика;
			ТекНазначение               = Выборка.Назначение;
			
			Количество = Выборка.Количество;
			
		КонецЕсли;
		
		Если Количество <> Неопределено Тогда
			КоличествоВДокумент = Цел(Количество / Выборка.КоличествоВУпаковке);
			
			Если КоличествоВДокумент > 0 Тогда
				
				НоваяСтрока = ПриходныйОрдер.Товары.Добавить();
				НоваяСтрока.Количество = КоличествоВДокумент * Выборка.КоличествоВУпаковке;
				НоваяСтрока.КоличествоУпаковок = КоличествоВДокумент;
				НоваяСтрока.Упаковка = Выборка.Упаковка;
				
				НоваяСтрока.Номенклатура = ТекНоменклатура;
				НоваяСтрока.Характеристика = ТекХарактеристика;
				НоваяСтрока.Назначение = ТекНазначение;
				
				Если Количество = КоличествоВДокумент * Выборка.КоличествоВУпаковке Тогда
					Количество = Неопределено;
				Иначе
					Количество = Количество - КоличествоВДокумент * Выборка.КоличествоВУпаковке;
				КонецЕсли;
				
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	Если Количество <> Неопределено Тогда
		НоваяСтрока = ПриходныйОрдер.Товары.Добавить();
		НоваяСтрока.Количество = Количество;
		НоваяСтрока.КоличествоУпаковок = Количество;
		НоваяСтрока.Номенклатура = ТекНоменклатура;
		НоваяСтрока.Характеристика = ТекХарактеристика;
		НоваяСтрока.Назначение = ТекНазначение;
	КонецЕсли;
	
КонецПроцедуры
//-MG