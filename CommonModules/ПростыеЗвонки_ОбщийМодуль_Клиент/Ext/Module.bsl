
&НаКлиенте
Процедура ПриИзмененияСостоянияПодключения(Статус)
	
	Оповестить("ПростыеЗвонки_ИзменилосьСостояние",Статус);
	
КонецПроцедуры

&НаКлиенте
Функция ПолучитьСостояние() Экспорт
	
	Попытка
		Состояние = ПростыеЗвонкиКомпонента.connectionState;
	Исключение
		Состояние = 0;
		Предупреждение("Не удалось получить состояние компоненты Простые звонки");
	КонецПопытки;
	
	Возврат Состояние;
	
КонецФункции

&НаКлиенте
Процедура ПереадресоватьВходящийЗвонок(callID, from)
	
	ИспользоватьАвтоматическуюПереадресацию = ПростыеЗвонкиПараметры.ИспользоватьАвтоматическуюПереадресацию;	
	
	Если ИспользоватьАвтоматическуюПереадресацию = Истина Тогда
		
		НомерПереадресации = ПростыеЗвонки_ОбщийМодуль_Сервер.ОпределитьПолучателяПоВходящемуНомеру(СокрЛП(from));
		Если НомерПереадресации = Неопределено Тогда
			ПростыеЗвонкиКомпонента.Transfer(callID,"");
		Иначе
			ПростыеЗвонкиКомпонента.Transfer(callID,НомерПереадресации);
		КонецЕсли;
		
	Иначе
		
		ПростыеЗвонкиКомпонента.Transfer(callID,"");

	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриЗавершенииЗвонка(callID, src, dst, duration, start, end, direction, record)
	
	Если ((direction = 0 И СокрЛП(dst) <> СокрЛП(ПростыеЗвонкиПараметры.ВнутреннийНомерПользователя)) ИЛИ
		 (direction = 1 И СокрЛП(src) <> СокрЛП(ПростыеЗвонкиПараметры.ВнутреннийНомерПользователя))) Тогда
		 
		 Возврат;
		 
	КонецЕсли;	 
		 
	ПоказыватьОкноВходящегоВызова	= ПростыеЗвонкиПараметры.ПоказыватьОкноВходящегоВызова;
	ПоказыватьОкноИсходящегоВызова	= ПростыеЗвонкиПараметры.ПоказыватьОкноИсходящегоВызова;
	СоздаватьВходящееСобытиеЗвонок	= ПростыеЗвонкиПараметры.СоздаватьВходящееСобытиеЗвонок;
	СоздаватьИсходящееСобытиеЗвонок	= ПростыеЗвонкиПараметры.СоздаватьИсходящееСобытиеЗвонок;
	СохранятьИсториюЗвонков			= ПростыеЗвонкиПараметры.СохранятьИсториюЗвонков;
	
	Если ПоказыватьОкноВходящегоВызова = "По завершению разговора" Тогда
		
		Если direction = 0 Тогда
			ПоказатьОкноВходящегоВызова(src,dst);
		КонецЕсли;
		
	КонецЕсли;
	Если ПоказыватьОкноИсходящегоВызова = "По завершению разговора" Тогда
		
		Если direction = 1 Тогда
			ПоказатьОкноИсходящегоВызова(src,dst);
		КонецЕсли;
		
	КонецЕсли;
	Если СоздаватьВходящееСобытиеЗвонок = "По завершению разговора" Тогда
		
		Если direction = 0 Тогда
			СоздатьДокументТелефонныйЗвонокНаКлиенте(src,dst,0);
		КонецЕсли;
		
	КонецЕсли;
	Если СоздаватьИсходящееСобытиеЗвонок = "По завершению разговора" Тогда
		
		Если direction = 1 Тогда
			СоздатьДокументТелефонныйЗвонокНаКлиенте(src,dst,1);
		КонецЕсли;
		
	КонецЕсли;
	
	НужноСохранитьИсторию = Ложь;
	
	Если СохранятьИсториюЗвонков = "Только входящие" Тогда
		Если direction = 0 Тогда
			НужноСохранитьИсторию = Истина;
		КонецЕсли;
	ИначеЕсли СохранятьИсториюЗвонков = "Только исходящие" Тогда
		Если direction = 1 Тогда
			НужноСохранитьИсторию = Истина;
		КонецЕсли;
	ИначеЕсли СохранятьИсториюЗвонков = "Входящие и исходящие" Тогда
		НужноСохранитьИсторию = Истина;
	КонецЕсли;
	
	Если НужноСохранитьИсторию Тогда
		ПростыеЗвонки_ОбщийМодуль_Сервер.СохранитьИсториюЗвонка(src, dst, duration, start, end, direction, record, callID);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПоказатьОкноВходящегоВызова(НомерС,НомерНа)
	
	СтруктураКлиентов = ПростыеЗвонки_ОбщийМодуль_Сервер.ПолучитьКлиентаПоНомеруТелефона(НомерС);
	
	Если СтруктураКлиентов.Партнер = Неопределено Тогда
		
		ПараметрФормыВходящегоЗвонка = Новый Структура("НомерТелефона", НомерС);
		ПолучитьФорму("ОбщаяФорма.ПростыеЗвонки_ВходящийЗвонок", ПараметрФормыВходящегоЗвонка).Открыть();
		
	Иначе
		//кожемякин 030915
		Если Не ЗначениеЗаполнено(СтруктураКлиентов.КонтактноеЛицо) Тогда
			ПараметрФормыПартнера = Новый Структура("Ключ", СтруктураКлиентов.Партнер);
			ПолучитьФорму("Справочник.Партнеры.ФормаОбъекта", ПараметрФормыПартнера).Открыть();
		Иначе
			ПараметрФормыПартнера = Новый Структура("Ключ", СтруктураКлиентов.КонтактноеЛицо);
			ПолучитьФорму("Справочник.КонтактныеЛицаПартнеров.ФормаОбъекта", ПараметрФормыПартнера).Открыть();
		КонецЕсли;	
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПоказатьОкноИсходящегоВызова(НомерС,НомерНа)
	
	СтруктураКлиентов = ПростыеЗвонки_ОбщийМодуль_Сервер.ПолучитьКлиентаПоНомеруТелефона(НомерНа);
	Если НЕ ЗначениеЗаполнено(СтруктураКлиентов.Партнер) Тогда
			
		ПараметрФормыИсходящегоЗвонка = Новый Структура("НомерТелефона", СокрЛП(НомерНа));
		ПолучитьФорму("ОбщаяФорма.ПростыеЗвонки_ИсходящийЗвонок", ПараметрФормыИсходящегоЗвонка).Открыть();
			
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СоздатьДокументТелефонныйЗвонокНаКлиенте(НомерС,НомерНа,Направление,Знач ДатаВремяНачала = Неопределено,Знач ДатаВремяОкончания = Неопределено)
	
	СозданныйДокумент = ПростыеЗвонки_ОбщийМодуль_Сервер.СоздатьДокументТелефонныйЗвонок(НомерС,НомерНа,Направление,ДатаВремяНачала,ДатаВремяОкончания);
	
	Если НЕ СозданныйДокумент = Неопределено Тогда
		
		НужноПоказатьФорму = Ложь;
		
		ПоказыватьФорму = ПростыеЗвонкиПараметры.ПоказыватьСозданноеСобытиеЗвонок;
		
		Если ПоказыватьФорму = "Только входящие" Тогда
			Если Направление = 0 Тогда
				НужноПоказатьФорму = Истина;
			КонецЕсли;
		ИначеЕсли ПоказыватьФорму = "Только исходящие" Тогда
			Если Направление = 1 Тогда
				НужноПоказатьФорму = Истина;
			КонецЕсли;
		ИначеЕсли ПоказыватьФорму = "Входящие и исходящие" Тогда
			НужноПоказатьФорму = Истина;
		КонецЕсли;
		
		Если НужноПоказатьФорму Тогда							
			СтруктураПараметров = Новый Структура("Ключ", СозданныйДокумент);
			ПолучитьФорму("Документ.ТелефонныйЗвонок.Форма.ФормаДокумента", СтруктураПараметров).Открыть();
		КонецЕсли;	
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработатьВходящийЗвонок(callID, src, dst)
	
	Если СокрЛП(dst)=СокрЛП(ПростыеЗвонкиПараметры.ВнутреннийНомерПользователя) Тогда
		
		ПоказыватьОкноВходящегоВызова	= ПростыеЗвонкиПараметры.ПоказыватьОкноВходящегоВызова;
		СоздаватьВходящееСобытиеЗвонок	= ПростыеЗвонкиПараметры.СоздаватьВходящееСобытиеЗвонок;
		
		Если НЕ ЗначениеЗаполнено(ПоказыватьОкноВходящегоВызова) Тогда
			ПоказыватьОкноВходящегоВызова = "При поступлении звонка";
		КонецЕсли;
		Если НЕ ЗначениеЗаполнено(СоздаватьВходящееСобытиеЗвонок) Тогда
			СоздаватьВходящееСобытиеЗвонок = "По завершению разговора";
		КонецЕсли;
		
		Если ПоказыватьОкноВходящегоВызова = "При поступлении звонка" Тогда
			
			ПоказатьОкноВходящегоВызова(src,dst);
			
		КонецЕсли;
		
		Если СоздаватьВходящееСобытиеЗвонок = "При начале звонка" Тогда
			
			СоздатьДокументТелефонныйЗвонокНаКлиенте(src,dst,0);
			
		КонецЕсли;
		
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработатьИсходящийЗвонок(callID, src, dst)
	
	Если СокрЛП(src) = СокрЛП(ПростыеЗвонкиПараметры.ВнутреннийНомерПользователя) Тогда
		
		Если ПростыеЗвонкиПараметры.ПоказыватьОкноИсходящегоВызова = "При начале звонка" Тогда
			
			ПоказатьОкноИсходящегоВызова(src,dst);
			
		КонецЕсли;
		Если ПростыеЗвонкиПараметры.СоздаватьИсходящееСобытиеЗвонок = "При начале звонка" Тогда
			
			СоздатьДокументТелефонныйЗвонокНаКлиенте(src,dst,1);
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработатьОтветНаИсходящийЗвонок(callID, src, dst)
	
	Если СокрЛП(src) = СокрЛП(ПростыеЗвонкиПараметры.ВнутреннийНомерПользователя) Тогда

		ПоказыватьОкноИсходящегоВызова	= ПростыеЗвонкиПараметры.ПоказыватьОкноИсходящегоВызова;
		СоздаватьИсходящееСобытиеЗвонок	= ПростыеЗвонкиПараметры.СоздаватьИсходящееСобытиеЗвонок;
		
		Если ПоказыватьОкноИсходящегоВызова = "По поднятию трубки" Тогда
		
			ПоказатьОкноИсходящегоВызова(src,dst);
		
		КонецЕсли;
		Если СоздаватьИсходящееСобытиеЗвонок = "По поднятию трубки" Тогда
		
			СоздатьДокументТелефонныйЗвонокНаКлиенте(src,dst,1);
		
		КонецЕсли;
		
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ОбработатьОтветНаВходящийЗвонок(callID, src, dst)
	
	Если СокрЛП(dst)=СокрЛП(ПростыеЗвонкиПараметры.ВнутреннийНомерПользователя) Тогда

		ПоказыватьОкноВходящегоВызова	= ПростыеЗвонкиПараметры.ПоказыватьОкноВходящегоВызова;
		СоздаватьВходящееСобытиеЗвонок	= ПростыеЗвонкиПараметры.СоздаватьВходящееСобытиеЗвонок;
	
		Если ПоказыватьОкноВходящегоВызова = "По поднятию трубки" Тогда
		
			ПоказатьОкноВходящегоВызова(src,dst);
		
		КонецЕсли;
	
		Если СоздаватьВходящееСобытиеЗвонок = "По поднятию трубки" Тогда
		
			СоздатьДокументТелефонныйЗвонокНаКлиенте(src,dst,0);
		
		КонецЕсли;
		
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура УстановитьПараметры() 
	
	ПоказыватьОкноВходящегоВызова			= ПростыеЗвонки_ОбщийМодуль_Сервер.ПолучитьЗначениеНастройки("ПоказыватьОкноВходящегоВызова");
	ПоказыватьОкноИсходящегоВызова			= ПростыеЗвонки_ОбщийМодуль_Сервер.ПолучитьЗначениеНастройки("ПоказыватьОкноИсходящегоВызова");
	СоздаватьВходящееСобытиеЗвонок			= ПростыеЗвонки_ОбщийМодуль_Сервер.ПолучитьЗначениеНастройки("СоздаватьВходящееСобытиеЗвонок");
	СоздаватьИсходящееСобытиеЗвонок			= ПростыеЗвонки_ОбщийМодуль_Сервер.ПолучитьЗначениеНастройки("СоздаватьИсходящееСобытиеЗвонок");
	ПоказыватьСозданноеСобытиеЗвонок		= ПростыеЗвонки_ОбщийМодуль_Сервер.ПолучитьЗначениеНастройки("ПоказыватьСозданноеСобытиеЗвонок");
	СохранятьИсториюЗвонков					= ПростыеЗвонки_ОбщийМодуль_Сервер.ПолучитьЗначениеНастройки("СохранятьИсториюЗвонков");
	ИспользоватьАвтоматическуюПереадресацию	= ПростыеЗвонки_ОбщийМодуль_Сервер.ПолучитьЗначениеНастройки("ИспользоватьАвтоматическуюПереадресацию");
	ИдентификаторБазы1С						= ПростыеЗвонки_ОбщийМодуль_Сервер.ПолучитьЗначениеНастройки("ИдентификаторБазы1С");
	СерверАТС								= ПростыеЗвонки_ОбщийМодуль_Сервер.ПолучитьЗначениеНастройки("СерверАТС");
	Пароль									= ПростыеЗвонки_ОбщийМодуль_Сервер.ПолучитьЗначениеНастройки("Пароль");
	КоличествоПоследнихЦифрНомера			= ПростыеЗвонки_ОбщийМодуль_Сервер.ПолучитьЗначениеНастройки("КоличествоПоследнихЦифрНомера");
	
	Если НЕ ЗначениеЗаполнено(ПоказыватьОкноВходящегоВызова) Тогда
		ПоказыватьОкноВходящегоВызова = "При поступлении звонка";
	КонецЕсли;
	Если НЕ ЗначениеЗаполнено(ПоказыватьОкноИсходящегоВызова) Тогда
		ПоказыватьОкноИсходящегоВызова = "По завершению разговора";
	КонецЕсли;
	Если НЕ ЗначениеЗаполнено(СоздаватьВходящееСобытиеЗвонок) Тогда
		СоздаватьВходящееСобытиеЗвонок = "По завершению разговора";
	КонецЕсли;
	Если НЕ ЗначениеЗаполнено(СоздаватьИсходящееСобытиеЗвонок) Тогда
		СоздаватьИсходящееСобытиеЗвонок = "По завершению разговора";
	КонецЕсли;
	Если НЕ ЗначениеЗаполнено(ПоказыватьСозданноеСобытиеЗвонок) Тогда
		ПоказыватьСозданноеСобытиеЗвонок = "Входящие и исходящие";
	КонецЕсли;
	Если НЕ ЗначениеЗаполнено(СохранятьИсториюЗвонков) Тогда
		СохранятьИсториюЗвонков = "Входящие и исходящие";
	КонецЕсли;
	Если НЕ ЗначениеЗаполнено(ИспользоватьАвтоматическуюПереадресацию) Тогда
		ИспользоватьАвтоматическуюПереадресацию = Истина;
	КонецЕсли;
	Если НЕ ЗначениеЗаполнено(ИдентификаторБазы1С) Тогда
		 ИдентификаторБазы1С = "ID";
    КонецЕсли;
	Если НЕ ЗначениеЗаполнено(СерверАТС) Тогда
		СерверАТС = "127.0.0.1:10150";
	КонецЕсли;
	Если НЕ ЗначениеЗаполнено(Пароль) Тогда
		Пароль = "";
	КонецЕсли;
 	Если НЕ ЗначениеЗаполнено(КоличествоПоследнихЦифрНомера) Тогда
		КоличествоПоследнихЦифрНомера = 5;
	КонецЕсли;

		  
	ПростыеЗвонкиПараметры = Новый Структура;
	ПростыеЗвонкиПараметры.Вставить("ПоказыватьОкноВходящегоВызова",			ПоказыватьОкноВходящегоВызова);
	ПростыеЗвонкиПараметры.Вставить("ПоказыватьОкноИсходящегоВызова",			ПоказыватьОкноИсходящегоВызова);
	ПростыеЗвонкиПараметры.Вставить("СоздаватьВходящееСобытиеЗвонок",			СоздаватьВходящееСобытиеЗвонок);
	ПростыеЗвонкиПараметры.Вставить("СоздаватьИсходящееСобытиеЗвонок",			СоздаватьИсходящееСобытиеЗвонок);
	ПростыеЗвонкиПараметры.Вставить("ПоказыватьСозданноеСобытиеЗвонок",			ПоказыватьСозданноеСобытиеЗвонок);
	ПростыеЗвонкиПараметры.Вставить("СохранятьИсториюЗвонков",					СохранятьИсториюЗвонков);
	ПростыеЗвонкиПараметры.Вставить("ИспользоватьАвтоматическуюПереадресацию",	ИспользоватьАвтоматическуюПереадресацию);
	ПростыеЗвонкиПараметры.Вставить("ВнутреннийНомерПользователя",				ПростыеЗвонки_ОбщийМодуль_Сервер.ПолучитьВнутреннийНомерПользователя());
	ПростыеЗвонкиПараметры.Вставить("ИдентификаторБазы1С",						ИдентификаторБазы1С);
    ПростыеЗвонкиПараметры.Вставить("СерверАТС",								СерверАТС);
	ПростыеЗвонкиПараметры.Вставить("Пароль",									Пароль);
	ПростыеЗвонкиПараметры.Вставить("КоличествоПоследнихЦифрНомера",			КоличествоПоследнихЦифрНомера);

КонецПроцедуры

&НаКлиенте
Процедура ПодключитьКомпоненту()  Экспорт
	
	ПростыеЗвонкиКомпонента = Новый COMОбъект("CTIControlX.CTIControlX");
	
	ДобавитьОбработчик ПростыеЗвонкиКомпонента.OnConnectionState,		ПриИзмененияСостоянияПодключения;
	ДобавитьОбработчик ПростыеЗвонкиКомпонента.OnTransferRequest,		ПереадресоватьВходящийЗвонок;
	ДобавитьОбработчик ПростыеЗвонкиКомпонента.OnCompletedCall,			ПриЗавершенииЗвонка;
	ДобавитьОбработчик ПростыеЗвонкиКомпонента.OnTransferredCall,		ОбработатьВходящийЗвонок;
	ДобавитьОбработчик ПростыеЗвонкиКомпонента.OnOutcomingCall,			ОбработатьИсходящийЗвонок;
	ДобавитьОбработчик ПростыеЗвонкиКомпонента.OnOutcomingCallAnswer,	ОбработатьОтветНаИсходящийЗвонок;
	ДобавитьОбработчик ПростыеЗвонкиКомпонента.OnTransferredCallAnswer, ОбработатьОтветНаВходящийЗвонок;
	
	УстановитьПараметры();
	
	Если ЗначениеЗаполнено(ПростыеЗвонкиПараметры.ВнутреннийНомерПользователя) Тогда
		Подключиться()	
	КонецЕсли
	
КонецПроцедуры

&НаКлиенте
Процедура Подключиться()  Экспорт
		
	ПутьКСерверу	= ПростыеЗвонкиПараметры.СерверАТС;
	Пароль			= ПростыеЗвонкиПараметры.Пароль;
	УИД				= ПростыеЗвонки_ОбщийМодуль_Сервер.ПолучитьУИДТекущегоПользователя();
	
	ПутьКЛогу = КаталогВременныхФайлов() + "prostiezvonki_1C.log";      
	
	Попытка
		ПростыеЗвонкиКомпонента.PhoneNumber = СокрЛП(ПростыеЗвонкиПараметры.ВнутреннийНомерПользователя);
		ПростыеЗвонкиКомпонента.BroadcastGroup = ПростыеЗвонкиПараметры.ИдентификаторБазы1С;
		ПростыеЗвонкиКомпонента.Connect(ПутьКСерверу, Пароль, "1C", УИД, ПутьКЛогу, 0, 5000);
	Исключение
		Предупреждение("Не удалось подключиться к серверу с помощью компоненты Простые звонки");
	КонецПопытки

КонецПроцедуры

&НаКлиенте
Функция ПреобразоватьНомерТелефона(НомерТелефона)
	
	ТолькоЦифрыНомера = "";
	Для а=1 По СтрДлина(НомерТелефона) Цикл
		Если СтрЧислоВхождений("1234567890",Сред(НомерТелефона,а,1)) > 0 Тогда
			ТолькоЦифрыНомера = ТолькоЦифрыНомера + Сред(НомерТелефона,а,1);
		КонецЕсли;
	КонецЦикла;
	
	Возврат ТолькоЦифрыНомера;
	
КонецФункции

&НаКлиенте
Функция ПолучитьВерсиюКомпоненты() Экспорт
	
	Попытка
		Версия = ПростыеЗвонкиКомпонента.activeXVersion();
	Исключение
		Версия = Неопределено;
	КонецПопытки;
	
	Возврат Версия;
	
КонецФункции

&НаКлиенте
Функция ПолучитьВерсиюМодуля() Экспорт
	
	Возврат "1.1.0.0";
	
КонецФункции

&НаКлиенте
Процедура Позвонить(НомерТелефона) Экспорт
	
	НомерПользователя = ПростыеЗвонкиПараметры.ВнутреннийНомерПользователя;
	
	Попытка
		ПростыеЗвонкиКомпонента.Call(НомерПользователя, ПреобразоватьНомерТелефона(НомерТелефона));
	Исключение
	КонецПопытки;
	
КонецПроцедуры

&НаКлиенте
Процедура Отключиться() Экспорт
	
	Попытка
		ПростыеЗвонкиКомпонента.Disconnect();
	Исключение
		Предупреждение("Не удалось отключить компоненту Простые звонки");
	КонецПопытки;
	
КонецПроцедуры