
&НаКлиенте
Процедура Печать(Команда) 
	
	//ТабДок = Новый ТабличныйДокумент;
	//Макет = ВернутьМакет(ТабДок);
	//ТабДок.ОтображатьСетку = Ложь;
	//ТабДок.Защита = Ложь;
	//ТабДок.ТолькоПросмотр = Ложь;
	//ТабДок.ОтображатьЗаголовки = Ложь;
	//ТабДок.Показать();
	
	
	Результат =  SendPackToPrint (Объект.Ссылка, Объект.ТСД);
	Сообщить (Результат);
	
КонецПроцедуры

&НаСервере
Функция SendPackToPrint(СсылкаНаДок, УзелПО)
	
		
	КаталогСохранения = УзелПО.КаталогВыгрузкиФайлаПечати;
	Если КаталогСохранения = "" тогда
		Сообщение = "Не заданы настройки печати" ;
		Возврат Сообщение;
	КонецЕсли;	
	
	СтруктураПоиска = Новый Структура("ТипОперации", "Печать упаковочного листа");
	СтрокиРеквизитов = УзелПО.Печать.НайтиСтроки(СтруктураПоиска);
	Если  СтрокиРеквизитов.Количество()>0 тогда
	
	ЗаписьXML = Новый ЗаписьXML;
	
	ИмяФайла = СтрЗаменить(ТекущаяДата(),":","");
	ИмяФайла = СтрЗаменить(ИмяФайла, ".","");
	ИмяФайла = СтрЗаменить(ИмяФайла, " ","");

	
	ИмяФайла = ИмяФайла + СсылкаНаДок.Номер;

	
	Попытка
		ЗаписьXML.ОткрытьФайл(КаталогСохранения+ИмяФайла+".xml", "UTF-8");
	Исключение
		Сообщение = "Нет доступа к каталогу записи файлов для печати " + КаталогСохранения ;
		Возврат Сообщение;
	КонецПопытки;
		
	ЗаписьXML.ЗаписатьОбъявлениеXML();	
	
	ЗаписьXML.ЗаписатьНачалоЭлемента("PrintData");
	
		Count = 0 ;
		//
		Для Н = 0 По 0 Цикл
			
		ЗаписьXML.ЗаписатьНачалоЭлемента("PrinterName");
			ЗаписьXML.ЗаписатьТекст(СтрокиРеквизитов[Н].ИмяПринтера);
		ЗаписьXML.ЗаписатьКонецЭлемента();		

		ЗаписьXML.ЗаписатьНачалоЭлемента("TemplateName");
			ЗаписьXML.ЗаписатьТекст(СтрокиРеквизитов[Н].ИмяШаблона);
		ЗаписьXML.ЗаписатьКонецЭлемента();		
		
		Count = Count+1;
		ЗаписьXML.ЗаписатьНачалоЭлемента("Count");
			ЗаписьXML.ЗаписатьТекст(Строка(Count));
		ЗаписьXML.ЗаписатьКонецЭлемента();		
		
		КонецЦикла;
		
	ЗаписьXML.ЗаписатьНачалоЭлемента("Head");
	
	
		//ЗаписьXML.ЗаписатьНачалоЭлемента("Client");
		//ЗаписьXML.ЗаписатьТекст(ДатаМобайл_ОбщийМодуль.ЧистаяСтрока(СсылкаНаДок.Клиент));
		//ЗаписьXML.ЗаписатьКонецЭлемента();//Client
		
		
		ЗаписьXML.ЗаписатьНачалоЭлемента("Date");
		ЗаписьXML.ЗаписатьТекст(ДатаМобайл_ОбщийМодуль.ЧистаяСтрока(СсылкаНаДок.Дата));
		ЗаписьXML.ЗаписатьКонецЭлемента();//Date
		
		
		ЗаписьXML.ЗаписатьНачалоЭлемента("Barcode");
		ЗаписьXML.ЗаписатьТекст(ДатаМобайл_ОбщийМодуль.ЧистаяСтрока("UPL"+СсылкаНаДок.Номер));
		ЗаписьXML.ЗаписатьКонецЭлемента();//Barcode
		
		
		//QRData = "";
		//Для Каждого СтрокаТЧ ИЗ СсылкаНАДок.Собранныеданныеподбор Цикл
		//	
		//	QRData = QRData + ДатаМобайл_ОбщийМодуль.ЧистаяСтрока(СтрокаТЧ.Штрихкод)+"\r\n";
		//	
		//КонецЦикла;
		//
		//Для Каждого СтрокаТЧ ИЗ СсылкаНАДок.СобранныеДанныеПриемка Цикл
		//	
		//	QRData = QRData + ДатаМобайл_ОбщийМодуль.ЧистаяСтрока(СтрокаТЧ.Штрихкод)+"\r\n";
		//	
		//КонецЦикла;
		//
		//ЗаписьXML.ЗаписатьНачалоЭлемента("QRData");
		//ЗаписьXML.ЗаписатьТекст(QRData);
		//ЗаписьXML.ЗаписатьКонецЭлемента();//BC>
		
		
		//
		ЗаписьXML.ЗаписатьНачалоЭлемента("Number");
		ЗаписьXML.ЗаписатьТекст(ДатаМобайл_ОбщийМодуль.ЧистаяСтрока(СсылкаНаДок.Номер));
		ЗаписьXML.ЗаписатьКонецЭлемента();//Number

		
	ЗаписьXML.ЗаписатьКонецЭлемента();//Head
	
	ЗаписьXML.ЗаписатьНачалоЭлемента("Detail");
	
	    Для Каждого СтрокаТЧ ИЗ СсылкаНаДок.Товары Цикл
		ЗаписьXML.ЗаписатьНачалоЭлемента("Item");
		
			ЗаписьXML.ЗаписатьНачалоЭлемента("ArtName");
			ЗаписьXML.ЗаписатьТекст(ДатаМобайл_ОбщийМодуль.ЧистаяСтрока(СтрокаТЧ.Номенклатура.Наименование));
			ЗаписьXML.ЗаписатьКонецЭлемента();//Param1
			ЗаписьXML.ЗаписатьНачалоЭлемента("Barcode");
			ЗаписьXML.ЗаписатьТекст(ДатаМобайл_ОбщийМодуль.ЧистаяСтрока(СтрокаТЧ.ШтрихКод));
			ЗаписьXML.ЗаписатьКонецЭлемента();//Param2              
			ЗаписьXML.ЗаписатьНачалоЭлемента("QNT");
			ЗаписьXML.ЗаписатьТекст(ДатаМобайл_ОбщийМодуль.ЧистаяСтрока(СтрокаТЧ.Количество));
			ЗаписьXML.ЗаписатьКонецЭлемента();//Param3              
			
			
			//
			Если НЕ СтрокаТЧ.Серия.Пустая() тогда

			ЗаписьXML.ЗаписатьНачалоЭлемента("Param1");
			ЗаписьXML.ЗаписатьТекст(ДатаМобайл_ОбщийМодуль.ЧистаяСтрока(СтрокаТЧ.Серия.Номер));
			ЗаписьXML.ЗаписатьКонецЭлемента();//    
			
			ЗаписьXML.ЗаписатьНачалоЭлемента("Param2");
			ЗаписьXML.ЗаписатьТекст(ДатаМобайл_ОбщийМодуль.ЧистаяСтрока(Формат(СтрокаТЧ.Серия.ГоденДо,"ДФ=dd.MM.yyyy")));
			ЗаписьXML.ЗаписатьКонецЭлемента(); 
			Иначе 
			
			ЗаписьXML.ЗаписатьНачалоЭлемента("Param1");
			ЗаписьXML.ЗаписатьТекст("");
			ЗаписьXML.ЗаписатьКонецЭлемента();//    
			
			ЗаписьXML.ЗаписатьНачалоЭлемента("Param2");
			ЗаписьXML.ЗаписатьТекст("");
			ЗаписьXML.ЗаписатьКонецЭлемента(); 


			КонецЕсли;

						
		ЗаписьXML.ЗаписатьКонецЭлемента();//Item
		КонецЦикла;
		
	//	Для Каждого СтрокаТЧ ИЗ СсылкаНаДок.СобранныеДанныеПриемка Цикл
	//	ЗаписьXML.ЗаписатьНачалоЭлемента("Item");
	//	
	//		ЗаписьXML.ЗаписатьНачалоЭлемента("ArtName");
	//		ЗаписьXML.ЗаписатьТекст(ДатаМобайл_ОбщийМодуль.ЧистаяСтрока(СтрокаТЧ.НазваниеТовара));
	//		ЗаписьXML.ЗаписатьКонецЭлемента();//Param1
	//		ЗаписьXML.ЗаписатьНачалоЭлемента("Barcode");
	//		ЗаписьXML.ЗаписатьТекст(ДатаМобайл_ОбщийМодуль.ЧистаяСтрока(СтрокаТЧ.ШтрихКод));
	//		ЗаписьXML.ЗаписатьКонецЭлемента();//Param2              
	//		ЗаписьXML.ЗаписатьНачалоЭлемента("QNT");
	//		ЗаписьXML.ЗаписатьТекст(ДатаМобайл_ОбщийМодуль.ЧистаяСтрока(СтрокаТЧ.Количество));
	//		ЗаписьXML.ЗаписатьКонецЭлемента();//Param3              
	//		
	//	ЗаписьXML.ЗаписатьКонецЭлемента();//Item
	//КонецЦикла;
	
	ЗаписьXML.ЗаписатьКонецЭлемента();//Detail
	
	//ЗаписьXML.ЗаписатьНачалоЭлемента("Summary");
	//	ЗаписьXML.ЗаписатьНачалоЭлемента("Itog");
	//	ЗаписьXML.ЗаписатьТекст("Итого:");
	//	ЗаписьXML.ЗаписатьКонецЭлемента();//ITOG ?
	//	ЗаписьXML.ЗаписатьНачалоЭлемента("Summ");
	//	ЗаписьXML.ЗаписатьТекст(Строка(СсылкаНаДок.СобранныеДанныеПодбор.Итог("Количество")+СсылкаНаДок.СобранныеДанныеПриемка.Итог("Количество")));
	//	ЗаписьXML.ЗаписатьКонецЭлемента();//Summ ?
	//ЗаписьXML.ЗаписатьКонецЭлемента();//Summary
	
	ЗаписьXML.ЗаписатьНачалоЭлемента("Footer");
	
	
		Год = Строка(Формат(Год(ТекущаяДата()),"ЧГ="));
		Месяц = Строка(Месяц(ТекущаяДата()));
		День = Строка(День(ТекущаяДата()));
		ДатаСтрока = ГОД+Строка(Месяц)+Строка(День);
		ЗаписьXML.ЗаписатьНачалоЭлемента("Date");	
		ЗаписьXML.ЗаписатьТекст(ДатаМобайл_ОбщийМодуль.ЧистаяСтрока(ГОД+Месяц+ДЕНЬ));
		ЗаписьXML.ЗаписатьКонецЭлемента();//Date
		ЗаписьXML.ЗаписатьНачалоЭлемента("User");	
		ЗаписьXML.ЗаписатьТекст(ДатаМобайл_ОбщийМодуль.ЧистаяСтрока(СсылкаНаДок.Ответственный));
		ЗаписьXML.ЗаписатьКонецЭлемента();//User
	ЗаписьXML.ЗаписатьКонецЭлемента();//Footer
	
	ЗаписьXML.ЗаписатьКонецЭлемента();//PrintData
	
	Сообщение = "Документ отправлен на печать";

	Возврат Сообщение;
	Иначе
		Сообщение = "Не заданы настройки печати" ;
		Возврат Сообщение;

	КонецЕсли;



	Сообщение = "Не удалось напечатать документ";
	Возврат Сообщение;

КонецФункции

&НаСервере
Функция ВернутьМакет(ТабДок)
	
		Макет = Документы.ДатаМобайл_УпаковочныйЛист.ПолучитьМакет("Паклист");
	// Заголовок
	Область = Макет.ПолучитьОбласть("Заголовок");
	ТабДок.Вывести(Область);
	// Шапка
	Шапка = Макет.ПолучитьОбласть("Шапка");
	
		Шапка.Параметры.Заполнить(ЭтотОбъект);
		Шапка.Рисунки.Штрихкод.Объект.АвтоТип = Истина;
		Шапка.Рисунки.Штрихкод.Объект.ТипКода = 4;
		Шапка.Рисунки.Штрихкод.Объект.ОтображатьТекст = Ложь;
		Шапка.Рисунки.Штрихкод.Объект.Сообщение = СокрЛП(Объект.Номер);
		Шапка.Рисунки.Штрихкод.Объект.ТекстКода= СокрЛП(Объект.Номер);
		

	ТабДок.Вывести(Шапка);
	// Товары
	Область = Макет.ПолучитьОбласть("ТоварыШапка");
	ТабДок.Вывести(Область);
	ОбластьТовары = Макет.ПолучитьОбласть("Товары");
	ОбластьИТогоТовар = Макет.ПолучитьОбласть("ИтогоТовар");
	ТЗТовары = Объект.Товары.Выгрузить(,"Номенклатура");
	ТЗТовары.Свернуть("Номенклатура");
	ТЗТовары.Сортировать("Номенклатура");
	Для Каждого СтрокаТовара ИЗ ТЗТовары Цикл
		ИтогоКолво = 0;
		ИтогоКолвоМест = 0;
	Для Каждого ТекСтрокаТовары Из Объект.Товары Цикл
		Если ТекСтрокаТовары.Номенклатура = СтрокаТовара.Номенклатура Тогда		
		ОбластьТовары.Параметры.Заполнить(ТекСтрокаТовары);
		ОбластьТовары.Параметры.КоличествоМест = ТекСтрокаТовары.Количество;
		ОбластьТовары.Параметры.ЕдиницаИзмеренияМест = ТекСтрокаТовары.Упаковка;
		ОбластьТовары.Параметры.ХарактеристикаНоменклатуры = ТекСтрокаТовары.Характеристика;
		ОбластьТовары.Параметры.Количество = ТекСтрокаТовары.Коэффициент*ТекСтрокаТовары.Количество;
		ОбластьТовары.Параметры.ЕдиницаИзмерения = ТекСтрокаТовары.Номенклатура.ЕдиницаИзмерения;
		ТабДок.Вывести(ОбластьТовары);
		ИтогоКолво = ИтогоКолво + ТекСтрокаТовары.Коэффициент*ТекСтрокаТовары.Количество;
		ИтогоКолвоМест = ИтогоКолвоМест+ТекСтрокаТовары.Количество; 
	КонецЕсли;
	КонецЦикла;
	
	ОбластьИТогоТовар.Параметры.ИтогоКолВо = ИтогоКолВо;
	ОбластьИТогоТовар.Параметры.ИтогоКолВоМест = ИтогоКолВоМест;
	ОбластьИТогоТовар.Параметры.ИтогоЕдиницаИзмерения = СтрокаТовара.Номенклатура.ЕдиницаИзмерения;
	ТабДок.Вывести(ОбластьИТогоТовар);
	
	КонецЦикла;

	
КонецФункции

&НаКлиенте
Процедура ТоварыНоменклатураПриИзменении(Элемент)
	
	Стр = Элементы.Товары.текущиеданные;	
	Стр.Штрихкод = ПолучитьШтрихкодТовара(Стр.Номенклатура, Стр.Упаковка);
	Стр.Характеристика = НайтиХарактеристикуНоменклатуры(Стр.номенклатура);
	Стр.Упаковка = НайтиЕдиницуНоменклатуры(Стр.номенклатура);
	Стр.Коэффициент = ВернутьКоэффициент(Стр.Номенклатура, Стр.Упаковка);
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыЕдиницаИзмеренияПриИзменении(Элемент)
	
	Стр = Элементы.Товары.текущиеданные;          
	Стр.Коэффициент = ВернутьКоэффициент(Стр.Номенклатура, Стр.Упаковка);	
	Стр.Штрихкод = ПолучитьШтрихкодТовара(Стр.Номенклатура, Стр.Упаковка);
	
КонецПроцедуры

&НаСервере
Функция НайтиЕдиницуНоменклатуры(Товар)
	
	Возврат Товар.ЕдиницаИзмерения;
	
КонецФункции
&НаСервере
Функция НайтиХарактеристикуНоменклатуры(Товар)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("товар", Товар);

	Запрос.Текст = "ВЫБРАТЬ
	               |	ХарактеристикиНоменклатуры.Ссылка
	               |ИЗ
	               |	Справочник.ХарактеристикиНоменклатуры КАК ХарактеристикиНоменклатуры
	               |ГДЕ
	               |	ХарактеристикиНоменклатуры.Владелец = &Товар";
				   
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		Возврат Выборка.Ссылка;
	КонецЦикла;
	
КонецФункции
&НаСервере
Функция НайтиСериюНоменклатуры(Товар)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("товар", Товар.ВидНоменклатуры);

	Запрос.Текст = "ВЫБРАТЬ
	               |	СерииНоменклатуры.Ссылка
	               |ИЗ
	               |	Справочник.СерииНоменклатуры КАК СерииНоменклатуры
	               |ГДЕ
	               |	СерииНоменклатуры.ВидНоменклатуры = &Товар";
				   
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		Возврат Выборка.Ссылка;
	КонецЦикла;
	
КонецФункции
&НаСервере
Функция ВернутьКоэффициент(Номенклатура, ЕдиницаИзмерения)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Товар", Номенклатура);
	Запрос.УстановитьПараметр("ЕдиницаИЗмерения", ЕдиницаИзмерения);
	
	Запрос.Текст = "ВЫБРАТЬ
	               |	ВЫБОР
				   |		КОГДА УпаковкиНоменклатуры.Знаменатель=0 ИЛИ УпаковкиНоменклатуры.Числитель=0 ТОГДА 1
				   |		ИНАЧЕ
				   |				ЕСТЬNULL(УпаковкиНоменклатуры.Числитель/УпаковкиНоменклатуры.Знаменатель,1)
				   |		КОНЕЦ КАК Коэффициент	 
	               |ИЗ
	               |	Справочник.УпаковкиЕдиницыИзмерения КАК УпаковкиНоменклатуры
	               |ГДЕ
	               |	УпаковкиНоменклатуры.ЕдиницаИзмерения = &ЕдиницаИзмерения
	               |	И УпаковкиНоменклатуры.Владелец = &Товар";
				   
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		
		Возврат Выборка.Коэффициент;
		
	КонецЦикла;
	
	    Возврат 1;
		
КонецФУнкции
&НаСервере
Функция ПолучитьШтрихкодТовара(Товар, ЕдиницаИзмерения)
	
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Товар", Товар);
	Запрос.УстановитьПараметр("ЕдиницаИзмерения", ЕдиницаИзмерения);
	
	Запрос.Текст = "ВЫБРАТЬ ПЕРВЫЕ 1
	               |	Штрихкоды.Штрихкод
	               |ПОМЕСТИТЬ тШтрихкод
	               |ИЗ
	               |	РегистрСведений.ШтрихкодыНоменклатуры КАК Штрихкоды
	               |ГДЕ
	               |	Штрихкоды.Номенклатура = &Товар
	               |	И Штрихкоды.Упаковка.ЕдиницаИзмерения = &ЕдиницаИзмерения
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	тШтрихкод.Штрихкод
	               |ИЗ
	               |	тШтрихкод КАК тШтрихкод";
				   
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		Возврат Выборка.Штрихкод;
	КонецЦикла;
	
	
КонецФункции


