#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
	ТипЗначения = ТипЗнч(ДанныеЗаполнения);
	Если ТипЗначения = Тип("Структура")
	 И ДанныеЗаполнения.Свойство("МассивДокументов") Тогда
		
		ЗаполнитьПоМассивуДокументов(
			ДанныеЗаполнения.МассивДокументов,
			ДанныеЗаполнения.ЭтоВходящиеПлатежи,
			ДанныеЗаполнения);

	ИначеЕсли ТипЗначения = Тип("ДокументСсылка.ПоступлениеБезналичныхДенежныхСредств") Тогда
	
		ЗаполнитьПоПоступлениюБезналичныхДенежныхСредств(
			ДанныеЗаполнения,
			ДанныеЗаполнения);
	
	ИначеЕсли ТипЗначения = Тип("ДокументСсылка.СписаниеБезналичныхДенежныхСредств") Тогда
		
		ЗаполнитьПоСписаниюБезналичныхДенежныхСредств(
			ДанныеЗаполнения,
			ДанныеЗаполнения);
		
	Иначе
		
		БанковскийСчет = Справочники.БанковскиеСчетаОрганизаций.ПолучитьБанковскийСчетОрганизацииПоУмолчанию(Неопределено);
		Если ЗначениеЗаполнено(БанковскийСчет) Тогда
			Организация =
				Справочники.БанковскиеСчетаОрганизаций.ПолучитьРеквизитыБанковскогоСчетаОрганизации(БанковскийСчет).Организация;
		КонецЕсли;
		
	КонецЕсли;
	
	ИнициализироватьДокумент(ДанныеЗаполнения);
	
КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)

	ВходящиеПлатежи.Очистить();
	ИсходящиеПлатежи.Очистить();
	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	МассивНепроверяемыхРеквизитов = Новый Массив;
	
	ОбщегоНазначения.УдалитьНепроверяемыеРеквизитыИзМассива(ПроверяемыеРеквизиты, МассивНепроверяемыхРеквизитов);
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;

	ОбновлениеИнформационнойБазы.ПроверитьОбъектОбработан(ЭтотОбъект);

	ПроведениеСервер.УстановитьРежимПроведения(ЭтотОбъект, РежимЗаписи, РежимПроведения);

	ДополнительныеСвойства.Вставить("ЭтоНовый",    ЭтоНовый());
	ДополнительныеСвойства.Вставить("РежимЗаписи", РежимЗаписи);

	ЗаполнитьИтоговыеСуммы();
	
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)

	// Инициализация дополнительных свойств для проведения документа
	ПроведениеСервер.ИнициализироватьДополнительныеСвойстваДляПроведения(Ссылка, ДополнительныеСвойства, РежимПроведения);
	
	// Подготовка наборов записей
	ПроведениеСервер.ПодготовитьНаборыЗаписейКРегистрацииДвижений(ЭтотОбъект);
	
	// Запись наборов записей
	ПроведениеСервер.ЗаписатьНаборыЗаписей(ЭтотОбъект);
	
	ПроведениеСервер.ОчиститьДополнительныеСвойстваДляПроведения(ДополнительныеСвойства);

КонецПроцедуры

Процедура ОбработкаУдаленияПроведения(Отказ)
	
	// Инициализация дополнительных свойств для проведения документа
	ПроведениеСервер.ИнициализироватьДополнительныеСвойстваДляПроведения(Ссылка, ДополнительныеСвойства);
	
	// Подготовка наборов записей
	ПроведениеСервер.ПодготовитьНаборыЗаписейКРегистрацииДвижений(ЭтотОбъект);
	// Запись наборов записей
	ПроведениеСервер.ЗаписатьНаборыЗаписей(ЭтотОбъект);
	
	ПроведениеСервер.ОчиститьДополнительныеСвойстваДляПроведения(ДополнительныеСвойства);

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ЗаполнитьИтоговыеСуммы()
	
	Если СуммаПоступленияВсего <> ВходящиеПлатежи.Итог("Сумма") Тогда
		СуммаПоступленияВсего = ВходящиеПлатежи.Итог("Сумма");
	КонецЕсли;
	Если СуммаСписанияВсего <> ИсходящиеПлатежи.Итог("Сумма") Тогда
		СуммаСписанияВсего = ИсходящиеПлатежи.Итог("Сумма");
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьПоПоступлениюБезналичныхДенежныхСредств(
	Знач ДокументОснование,
	ДанныеЗаполнения)

	// Заполним данные шапки документа.
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	ДанныеДокумента.Организация КАК Организация,
	|	ДанныеДокумента.БанковскийСчет КАК БанковскийСчет,
	|	ДанныеДокумента.Ссылка КАК ПлатежныйДокумент,
	|	ДанныеДокумента.СуммаДокумента КАК Сумма
	|ИЗ
	|	Документ.ПоступлениеБезналичныхДенежныхСредств КАК ДанныеДокумента
	|
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка
	|";
	
	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапроса;
	Запрос.УстановитьПараметр("Ссылка", ДокументОснование);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ДанныеЗаполнения = Новый Структура;
	Для Каждого Колонка Из РезультатЗапроса.Колонки Цикл
		ДанныеЗаполнения.Вставить(Колонка.Имя);
	КонецЦикла;
	
	Выборка = РезультатЗапроса.Выбрать();
	Если Выборка.Следующий() Тогда
		ЗаполнитьЗначенияСвойств(ДанныеЗаполнения, Выборка);
		
		НоваяСтрока = ВходящиеПлатежи.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
	КонецЕсли;
	
	ЗаполнитьИтоговыеСуммы();

КонецПроцедуры

Процедура ЗаполнитьПоСписаниюБезналичныхДенежныхСредств(
	Знач ДокументОснование,
	ДанныеЗаполнения)

	// Заполним данные шапки документа.
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	ДанныеДокумента.Организация КАК Организация,
	|	ДанныеДокумента.БанковскийСчет КАК БанковскийСчет,
	|	ДанныеДокумента.Ссылка КАК ПлатежныйДокумент,
	|	ДанныеДокумента.СуммаДокумента КАК Сумма
	|ИЗ
	|	Документ.СписаниеБезналичныхДенежныхСредств КАК ДанныеДокумента
	|
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка
	|";
	
	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапроса;
	Запрос.УстановитьПараметр("Ссылка", ДокументОснование);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ДанныеЗаполнения = Новый Структура;
	Для Каждого Колонка Из РезультатЗапроса.Колонки Цикл
		ДанныеЗаполнения.Вставить(Колонка.Имя);
	КонецЦикла;
	
	Выборка = РезультатЗапроса.Выбрать();
	Если Выборка.Следующий() Тогда
		ЗаполнитьЗначенияСвойств(ДанныеЗаполнения, Выборка);
		
		НоваяСтрока = ИсходящиеПлатежи.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
	КонецЕсли;
	
	ЗаполнитьИтоговыеСуммы();

КонецПроцедуры

Процедура ЗаполнитьПоМассивуДокументов(
	Знач МассивДокументов,
	Знач ЭтоВходящиеПлатежи,
	ДанныеЗаполнения)
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ
	|	Истина КАК ВходящийПлатеж,
	|	ДанныеДокумента.Организация КАК Организация,
	|	ДанныеДокумента.БанковскийСчет КАК БанковскийСчет,
	|	ДанныеДокумента.Ссылка КАК ПлатежныйДокумент,
	|	ДанныеДокумента.СуммаДокумента КАК Сумма
	|ИЗ
	|	Документ.ПоступлениеБезналичныхДенежныхСредств КАК ДанныеДокумента
	|ГДЕ
	|	(&ЭтоВходящиеПлатежи ИЛИ НЕ &ПроверятьТип)
	|	И ДанныеДокумента.Ссылка В (&МассивДокументов)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Истина КАК ВходящийПлатеж,
	|	ДанныеДокумента.БанковскийСчетПолучатель.Владелец КАК Организация,
	|	ДанныеДокумента.БанковскийСчетПолучатель КАК БанковскийСчет,
	|	ДанныеДокумента.Ссылка КАК ПлатежныйДокумент,
	|	ДанныеДокумента.СуммаДокумента КАК Сумма
	|ИЗ
	|	Документ.СписаниеБезналичныхДенежныхСредств КАК ДанныеДокумента
	|ГДЕ
	|	(&ЭтоВходящиеПлатежи ИЛИ НЕ &ПроверятьТип)
	|	И ДанныеДокумента.Ссылка В (&МассивДокументов)
	|	И ДанныеДокумента.ХозяйственнаяОперация В (
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПеречислениеДенежныхСредствНаДругойСчет),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОплатаДенежныхСредствВДругуюОрганизацию),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратДенежныхСредствВДругуюОрганизацию),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВнутренняяПередачаДенежныхСредств)
	|	)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Ложь КАК ВходящийПлатеж,
	|	ДанныеДокумента.Организация КАК Организация,
	|	ДанныеДокумента.БанковскийСчет КАК БанковскийСчет,
	|	ДанныеДокумента.Ссылка КАК ПлатежныйДокумент,
	|	ДанныеДокумента.СуммаДокумента КАК Сумма
	|ИЗ
	|	Документ.СписаниеБезналичныхДенежныхСредств КАК ДанныеДокумента
	|ГДЕ
	|	(НЕ &ЭтоВходящиеПлатежи ИЛИ НЕ &ПроверятьТип)
	|	И ДанныеДокумента.Ссылка В (&МассивДокументов)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Истина КАК ВходящийПлатеж,
	|	ДанныеДокумента.Организация КАК Организация,
	|	ДанныеДокумента.БанковскийСчет КАК БанковскийСчет,
	|	ДанныеДокумента.Ссылка КАК ПлатежныйДокумент,
	|	ДанныеДокумента.СуммаДокумента КАК Сумма
	|ИЗ
	|	Документ.РасходныйКассовыйОрдер КАК ДанныеДокумента
	|ГДЕ
	|	(&ЭтоВходящиеПлатежи ИЛИ НЕ &ПроверятьТип)
	|	И ДанныеДокумента.Ссылка В (&МассивДокументов)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Ложь КАК ВходящийПлатеж,
	|	ДанныеДокумента.Организация КАК Организация,
	|	ДанныеДокумента.БанковскийСчет КАК БанковскийСчет,
	|	ДанныеДокумента.Ссылка КАК ПлатежныйДокумент,
	|	ДанныеДокумента.СуммаДокумента КАК Сумма
	|ИЗ
	|	Документ.ПриходныйКассовыйОрдер КАК ДанныеДокумента
	|
	|ГДЕ
	|	(НЕ &ЭтоВходящиеПлатежи ИЛИ НЕ &ПроверятьТип)
	|	И ДанныеДокумента.Ссылка В (&МассивДокументов)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВЫБОР КОГДА ДанныеДокумента.СуммаДокумента < 0 ТОГДА
	|		Ложь
	|	ИНАЧЕ
	|		Истина
	|	КОНЕЦ КАК ВходящийПлатеж,
	|	ДанныеДокумента.Организация КАК Организация,
	|	ДанныеДокумента.БанковскийСчет КАК БанковскийСчет,
	|	ДанныеДокумента.Ссылка КАК ПлатежныйДокумент,
	|	ВЫБОР КОГДА ДанныеДокумента.СуммаДокумента < 0 ТОГДА
	|		-ДанныеДокумента.СуммаДокумента
	|	ИНАЧЕ
	|		ДанныеДокумента.СуммаДокумента
	|	КОНЕЦ КАК Сумма
	|ИЗ
	|	Документ.ОтчетБанкаПоОперациямЭквайринга КАК ДанныеДокумента
	|ГДЕ
	|	ДанныеДокумента.Ссылка В (&МассивДокументов)
	|");
	Запрос.УстановитьПараметр("МассивДокументов", МассивДокументов);
	Запрос.УстановитьПараметр("ЭтоВходящиеПлатежи", ЭтоВходящиеПлатежи);
	
	ПроверятьТип = Неопределено;
	Если Не ДанныеЗаполнения.Свойство("ПроверятьТип", ПроверятьТип) Тогда
		ПроверятьТип = Истина;
	КонецЕсли;
	Запрос.УстановитьПараметр("ПроверятьТип", ПроверятьТип);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ДанныеЗаполнения = Новый Структура;
	Для Каждого Колонка Из РезультатЗапроса.Колонки Цикл
		ДанныеЗаполнения.Вставить(Колонка.Имя);
	КонецЦикла;
	
	Выборка = РезультатЗапроса.Выбрать();
	Если Выборка.Следующий() Тогда
		ЗаполнитьЗначенияСвойств(ДанныеЗаполнения, Выборка);
	КонецЕсли;
	
	Выборка.Сбросить();
	Пока Выборка.Следующий() Цикл
		
		Если Выборка.ВходящийПлатеж Тогда
			НоваяСтрока = ВходящиеПлатежи.Добавить();
		Иначе
			НоваяСтрока = ИсходящиеПлатежи.Добавить();
		КонецЕсли;
		ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
		
	КонецЦикла;
	
	ЗаполнитьИтоговыеСуммы();

КонецПроцедуры

Процедура ИнициализироватьДокумент(ДанныеЗаполнения = Неопределено)

	Организация = ЗначениеНастроекПовтИсп.ПолучитьОрганизациюПоУмолчанию(Организация);
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли
