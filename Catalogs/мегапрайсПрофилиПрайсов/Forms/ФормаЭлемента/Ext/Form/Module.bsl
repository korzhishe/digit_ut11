

&НаСервере
Процедура ПриЧтенииСозданииНаСервере(ТекущийОбъект = НеОпределено)
	
	Если НЕ ТекущийОбъект = НеОпределено Тогда
		
		УстановитьРасписаниеРегламентногоЗаданияПриЧтенииНаСервере(ТекущийОбъект);		
		Возврат;
	
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	ПриЧтенииСозданииНаСервере(ТекущийОбъект);

КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ПриЧтенииСозданииНаСервере();

	Если ЗначениеЗаполнено(Объект.Ссылка) Тогда
	Иначе
		Объект.ВариантКурсаВалютыКонтрагента = Перечисления.мегапрайсВариантКурсаВалютыКонтрагента.КурсВалютыЦБ;
		Объект.Приоритет = 100;
		Объект.РоботЗагрузитьЦеныПоставщика = Истина;
		
		ВиртуальныйСклад = Константы.мегапрайсВиртуальныйСкладНаличияТоваров.Получить();
		Если ЗначениеЗаполнено(ВиртуальныйСклад) Тогда
			Объект.ВиртуальныйСкладПоставщика = ВиртуальныйСклад;
		КонецЕсли;			
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Объект.СпособНахожденияГрупп) Тогда
	    Объект.СпособНахожденияГрупп = "ПропускатьГруппы";
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	УстановитьНадписьРегламентногоЗадания();   

КонецПроцедуры



&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	Если ТекущийОбъект.ИспользоватьИндивидуальноеРегламентноеЗадание Тогда
		Если ТекущийОбъект.Код <> "" тогда
			Задание = ТекущийОбъект.ПолучитьРегламентноеЗадание();
			Если Задание = НеОпределено Тогда
				Задание = РегламентныеЗадания.СоздатьРегламентноеЗадание("мегапрайсИмпортИндивидуальноеЗадание");     
				Задание.Использование = Истина;
				Задание.Ключ = Строка(Новый УникальныйИдентификатор);
				ТекущийОбъект.ИдентификаторРегламентногоЗадания = Задание.УникальныйИдентификатор;
			КонецЕсли;
			
			ПараметрыЗадания = Новый Массив;
			ПараметрыЗадания.Добавить(ТекущийОбъект.Код);
			Задание.Наименование = "Мегапрайс Импорт прайса - "+ТекущийОбъект.Наименование;
			Задание.Параметры = ПараметрыЗадания;
			Задание.Расписание = РасписаниеРегламентногоЗадания;
			Задание.Записать();			
		Иначе
			Сообщить("Код настройки не прописался в регламентном задании.");	
		КонецЕсли;
	Иначе
		Задание = ТекущийОбъект.ПолучитьРегламентноеЗадание();
		Если НЕ Задание = НеОпределено Тогда
			Задание.Использование = Ложь;
			Задание.Записать();		
		КонецЕсли;		
	КонецЕсли;

КонецПроцедуры



&НаКлиенте
Процедура КомандаВыполнитьИмпорт(Команда)
	
	СтруктураПараметров = Новый Структура;
	СтруктураПараметров.Вставить("ПрайсПартнера", Объект.Ссылка);

	ОткрытьФорму("Обработка.мегапрайсРасширеннаяЗагрузкаИзExcel.Форма.Форма",СтруктураПараметров,ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ФайлКаталогНаЛокальномДискеПриИзменении(Элемент)
		
	СтандартнаяОбработка = Ложь;
	
	ДиалогОткрытияФайла = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.ВыборКаталога);
	ДиалогОткрытияФайла.Заголовок = НСтр("ru = 'Выберите путь'");
		
	Если ДиалогОткрытияФайла.Выбрать() Тогда
		Объект.ФайлКаталогНаЛокальномДиске = ДиалогОткрытияФайла.Каталог;
	КонецЕсли;		
	
КонецПроцедуры


//============================================================================
// ОБЩЕЕ РЕГЛАМЕНТНОЕ ЗАДАНИЕ

&НаСервереБезКонтекста
Функция ПолучитьИдентификаторРегламентногоЗадания()
	
	МетаданныеВыбор     = Метаданные.РегламентныеЗадания.мегапрайсИмпортЗагрузкаПрайсов;
	РегламентноеЗадание = РегламентныеЗадания.НайтиПредопределенное(МетаданныеВыбор);	
	Возврат Строка(РегламентноеЗадание.УникальныйИдентификатор);

КонецФункции

&НаКлиенте
Процедура НастроитьОбщееРегламентноеЗадание(Команда)

	СтандартнаяОбработка = Ложь;
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("Идентификатор",  ПолучитьИдентификаторРегламентногоЗадания());
	ПараметрыФормы.Вставить("Действие",      "Изменить");
	
	ОткрытьФорму("Обработка.РегламентныеИФоновыеЗадания.Форма.РегламентноеЗадание", ПараметрыФормы, ЭтотОбъект);

КонецПроцедуры

//============================================================================
// ИНДИВИДУАЛЬНОЕ РЕГЛАМЕНТНОЕ ЗАДАНИЕ

&НаСервере
Процедура УстановитьРасписаниеРегламентногоЗаданияПриЧтенииНаСервере(ТекущийОбъект)
	
	Задание = ТекущийОбъект.ПолучитьРегламентноеЗадание();
	
	Если НЕ Задание = НеОпределено Тогда
		РасписаниеРегламентногоЗадания = Задание.Расписание;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьРегламентныеЗаданияПриИзменении(Элемент)
	
	ПриИзмененииИспользоватьРегламентныеЗадания();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриИзмененииИспользоватьРегламентныеЗадания()
	
	УстановитьДоступностьРегламентногоЗадания();
	
	Если Объект.ИспользоватьИндивидуальноеРегламентноеЗадание Тогда
		ВыполнитьНастройкуРегламентногоЗадания();
		УстановитьНадписьРегламентногоЗадания();
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура УстановитьНадписьРегламентногоЗадания()
	
	Если РасписаниеРегламентногоЗадания = НеОпределено Тогда
		ТекстЗаголовка = НСтр("ru='Настроить расписание обмена'");
	Иначе
		ТекстЗаголовка = РасписаниеРегламентногоЗадания;
	КонецЕсли;
	
	Элементы.НастроитьИндивидуальноеРегламентноеЗадание.Заголовок = ТекстЗаголовка;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьДоступностьРегламентногоЗадания()
	
	Элементы.НастроитьИндивидуальноеРегламентноеЗадание.Доступность = Объект.ИспользоватьИндивидуальноеРегламентноеЗадание;
	
КонецПроцедуры	

&НаКлиенте
Процедура ВыполнитьНастройкуРегламентногоЗадания()
	
	Если РасписаниеРегламентногоЗадания = НеОпределено Тогда
		РасписаниеРегламентногоЗадания = Новый РасписаниеРегламентногоЗадания;
	КонецЕсли;
	
	Диалог = Новый ДиалогРасписанияРегламентногоЗадания(РасписаниеРегламентногоЗадания);
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ЗавершитьИзменятьРасписаниеLongPulling", ЭтотОбъект);
	
	Диалог.Показать(ОписаниеОповещения);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗавершитьИзменятьРасписаниеLongPulling(РасписаниеЗадания, ДополнительныеПараметры) Экспорт
	
	Если РасписаниеЗадания = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	РасписаниеРегламентногоЗадания = РасписаниеЗадания;
	УстановитьНадписьРегламентногоЗадания();
	
КонецПроцедуры

&НаКлиенте
Процедура НастроитьИндивидуальноеРегламентноеЗадание(Команда)
	
	ВыполнитьНастройкуРегламентногоЗадания();
	УстановитьНадписьРегламентногоЗадания();
	Модифицированность = Истина;

КонецПроцедуры



