
&НаКлиенте
Процедура ЗакрытьКоманда(Команда)
	
	ЭтаФорма.Закрыть();
	
КонецПроцедуры

&НаКлиенте
Процедура Далее(Команда)
	
	Если Элементы.Шаг1.Видимость Тогда
		Если ПроверитьЗаполнение() Тогда
			Элементы.Шаг1.Видимость = Ложь;
			Элементы.Шаг2.Видимость = Истина;		
		КонецЕсли;
	ИначеЕсли Элементы.Шаг2.Видимость Тогда
		Элементы.Шаг2.Видимость = Ложь;
		Элементы.Шаг3.Видимость = Истина;
		ОбновитьСоответствие();
	Иначе
		ОбновитьДанные();
		ПоказатьОповещениеПользователя("Загрузка данных", , "Загрузка данных завершена успешно.", БиблиотекаКартинок.ЗагрузкаИзВнешнегоИсточника);
		ЭтаФорма.Закрыть();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ДляБренда = ПланыВидовХарактеристик.ДополнительныеРеквизитыИСведения.НайтиПоНаименованию("Для бренда");
	НовыйПараметр = Новый ПараметрВыбора("Отбор.Владелец", ДляБренда);
	НовыйМассив = Новый Массив();
	НовыйМассив.Добавить(НовыйПараметр);
	Элементы.СоответствиеБренд.ПараметрыВыбора = Новый ФиксированныйМассив(НовыйМассив);
	
	ДляАппарата = ПланыВидовХарактеристик.ДополнительныеРеквизитыИСведения.НайтиПоНаименованию("Для аппарата");	
	НовыйПараметр = Новый ПараметрВыбора("Отбор.Владелец", ДляАппарата);
	НовыйМассив = Новый Массив();
	НовыйМассив.Добавить(НовыйПараметр);
	Элементы.СоответствиеТипАппарата.ПараметрыВыбора = Новый ФиксированныйМассив(НовыйМассив);
	
	ДляМоделиУстроиства = ПланыВидовХарактеристик.ДополнительныеРеквизитыИСведения.НайтиПоНаименованию("Для модели устройства");
	НовыйПараметр = Новый ПараметрВыбора("Отбор.Владелец", ДляМоделиУстроиства);
	НовыйМассив = Новый Массив();
	НовыйМассив.Добавить(НовыйПараметр);
	Элементы.СоответствиеМодель.ПараметрыВыбора = Новый ФиксированныйМассив(НовыйМассив);
	
	ОбновлятьДанные = Истина;
	
	Номер = 1;
	
	Для Каждого Колонка Из ПолучитьКолонки() Цикл
		
		Шапка = ТабличныйДокумент.Область(1, Номер, 1, Номер);
		Шапка.Текст = Колонка.Представление;
		Шапка.ЦветФона = Новый Цвет(245, 242, 221);
		Шапка.Шрифт = Новый Шрифт(Шапка.Шрифт,,10);
		Шапка.РазмещениеТекста = ТипРазмещенияТекстаТабличногоДокумента.Обрезать;
		
		Область = ТабличныйДокумент.Область("C"+Номер);
		Область.ШиринаКолонки = 20;
		Область.ГраницаСверху = Новый Линия(ТипЛинииЯчейкиТабличногоДокумента.Сплошная);
		Область.ГраницаСлева = Новый Линия(ТипЛинииЯчейкиТабличногоДокумента.Сплошная);
		Область.ГраницаСправа = Новый Линия(ТипЛинииЯчейкиТабличногоДокумента.Сплошная);
		Область.ГраницаСнизу = Новый Линия(ТипЛинииЯчейкиТабличногоДокумента.Сплошная);
		Область.ЦветРамки = Новый Цвет(204, 192, 133);
		
		Номер = Номер + 1;
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Функция ПолучитьКолонки()
	
	Колонки = Новый СписокЗначений();
	Колонки.Добавить("Наименование", "Наименование");
	
	Для Каждого Реквизит Из Метаданные.Справочники.МатрицаАппаратов.Реквизиты Цикл
		Колонки.Добавить(Реквизит.Имя, Реквизит.Синоним);
	КонецЦикла;
	
	Возврат Колонки;
	
КонецФункции

&НаСервере
Процедура ОбновитьСоответствие()
	
	ДляБренда = ПланыВидовХарактеристик.ДополнительныеРеквизитыИСведения.НайтиПоНаименованию("Для бренда");
	ДляАппарата = ПланыВидовХарактеристик.ДополнительныеРеквизитыИСведения.НайтиПоНаименованию("Для аппарата");	
	ДляМоделиУстроиства = ПланыВидовХарактеристик.ДополнительныеРеквизитыИСведения.НайтиПоНаименованию("Для модели устройства");
	
	Соответствие.Очистить();
	
	Колонки = ПолучитьКолонки();
	
	Для Номер = 2 По ТабличныйДокумент.ВысотаТаблицы Цикл
		
		НоваяСтрока = Соответствие.Добавить();
		
		Для Номер2 = 0 По Колонки.Количество()-1 Цикл
			
			Значение = ТабличныйДокумент.Область(Номер, Номер2+1).Текст;
			
			Если Колонки[Номер2].Значение = "Дата" Тогда
				НоваяСтрока[Колонки[Номер2].Значение] = ПолучитьДатуИзСтроки(Значение);
			ИначеЕсли Колонки[Номер2].Значение = "Бренд" Тогда
				НоваяСтрока[Колонки[Номер2].Значение] = Справочники.ЗначенияСвойствОбъектов.НайтиПоНаименованию(Значение, Истина, , ДляБренда);
			ИначеЕсли Колонки[Номер2].Значение = "Модель" Тогда
				НоваяСтрока[Колонки[Номер2].Значение] = Справочники.ЗначенияСвойствОбъектов.НайтиПоНаименованию(Значение, Истина, , ДляМоделиУстроиства);
			ИначеЕсли Колонки[Номер2].Значение = "ТипАппарата" Тогда
				НоваяСтрока[Колонки[Номер2].Значение] = Справочники.ЗначенияСвойствОбъектов.НайтиПоНаименованию(Значение, Истина, , ДляАппарата);
			Иначе
				НоваяСтрока[Колонки[Номер2].Значение] = Значение;
			КонецЕсли;
						
		КонецЦикла;
		
		НоваяСтрока.Ссылка = ПолучитьСоответствие(НоваяСтрока.Наименование);
		
	КонецЦикла;
	
	
КонецПроцедуры

&НаСервере
Функция ПолучитьДатуИзСтроки(Стр) 

         Д = Дата("00010101000000");

         Если ПустаяСтрока(Стр) Тогда
             Возврат Д;
         КонецЕсли;

         Если Найти(Стр,".") > 0 Тогда

             Если Найти(Стр,":") > 0 И Найти(Стр," ") > 0 Тогда 
                 М = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(Стр," ");
                 Возврат ПолучитьДатуИзСтроки(М[0]);
             КонецЕсли;

             М = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(Стр,".");

         ИначеЕсли Найти(Стр,"/")>0 Тогда

             М = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(Стр,"/");

         ИначеЕсли Найти(Стр,",")>0 Тогда

             М = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(Стр,",");

         ИначеЕсли Найти(Стр,"-")>0 Тогда

             М = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(Стр,"-");

         КонецЕсли; 

         Попытка

             Если М.Количество() = 3 Тогда //"01.02.13" или "01.02.2013"
                 Год = ?(СтрДлина(М[2]) = 2,2000 + М[2],М[2]);
                 Д = Дата(Год,М[1],М[0]);
             ИначеЕсли М.Количество() = 2 Тогда //"02.13" или "02.2013";
                 Год = ?(СтрДлина(М[1]) = 2,2000 + М[1],М[1]);
                 Д = Дата(Год,М[0],1);
             КонецЕсли;

         Исключение
         КонецПопытки; 

         Возврат Д; 

     КонецФункции

&НаСервере
Функция ПолучитьСоответствие(Наименование)
	
	Возврат Справочники.МатрицаАппаратов.НайтиПоНаименованию(Наименование, , , Владелец);
	
КонецФункции

&НаСервере
Процедура ОбновитьДанные()
	
	Для Каждого Строка Из Соответствие Цикл

		Объект = Неопределено;
		
		Если Строка.Ссылка.Пустая() Тогда
			Объект = Справочники.МатрицаАппаратов.СоздатьЭлемент();
		ИначеЕсли ОбновлятьДанные Тогда
			Объект = Строка.Ссылка.ПолучитьОбъект();
		КонецЕсли;
		
		Если Объект <> Неопределено Тогда
			
			Для Каждого Колонка Из ПолучитьКолонки() Цикл
				Если Строка(Строка[Колонка.Значение]) <> "" И Строка[Колонка.Значение] <> 0 И Строка[Колонка.Значение] <> Дата(1,1,1) Тогда
					Объект[Колонка.Значение] = Строка[Колонка.Значение];
				КонецЕсли;
			КонецЦикла;
			
			Объект.Владелец = Владелец;
			
			Объект.Записать();
			
		КонецЕсли;
		
	КонецЦикла;
	
	//Кожемякин А.Г. agkozhemyakin@gmail.com {
	//12.04.2016 10:14:02
	УстановитьСоотвествиеМатриц();		
	//}Кожемякин А.Г.	
	
КонецПроцедуры

&НаСервере
Процедура УстановитьСоотвествиеМатриц()

		//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	МатрицаАппаратов.Ссылка КАК АппаратКлиента
		|ПОМЕСТИТЬ АппаратыБезСоответствия
		|ИЗ
		|	Справочник.МатрицаАппаратов КАК МатрицаАппаратов
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.дпСоответствиеМатриц КАК дпСоответствиеМатриц
		|		ПО (дпСоответствиеМатриц.АппаратКлиента = МатрицаАппаратов.Ссылка)
		|ГДЕ
		|	МатрицаАппаратов.Владелец = &Владелец
		|	И дпСоответствиеМатриц.АппаратОрганизации ЕСТЬ NULL 
		|
		|СГРУППИРОВАТЬ ПО
		|	МатрицаАппаратов.Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	МатрицаАппаратов.Ссылка КАК АппаратОрганизации
		|ПОМЕСТИТЬ АппаратыОрганизации
		|ИЗ
		|	Справочник.МатрицаАппаратов КАК МатрицаАппаратов
		|ГДЕ
		|	МатрицаАппаратов.Владелец = &ВладелецОрганизация
		|
		|СГРУППИРОВАТЬ ПО
		|	МатрицаАппаратов.Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	АппаратыБезСоответствия.АппаратКлиента,
		|	МАКСИМУМ(АппаратыОрганизации.АппаратОрганизации) КАК АппаратОрганизации,
		|	МАКСИМУМ(дпСоответствиеМатриц.АппаратОрганизации) КАК АппаратОрганизации2
		|ИЗ
		|	АппаратыБезСоответствия КАК АппаратыБезСоответствия
		|		ЛЕВОЕ СОЕДИНЕНИЕ АппаратыОрганизации КАК АппаратыОрганизации
		|		ПО АппаратыБезСоответствия.АппаратКлиента.Наименование = АппаратыОрганизации.АппаратОрганизации.Наименование
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.дпСоответствиеМатриц КАК дпСоответствиеМатриц
		|		ПО АппаратыБезСоответствия.АппаратКлиента.Наименование = дпСоответствиеМатриц.АппаратКлиента.Наименование
		|ГДЕ
		|	(АппаратыОрганизации.АппаратОрганизации ЕСТЬ НЕ NULL 
		|			ИЛИ дпСоответствиеМатриц.АппаратОрганизации ЕСТЬ НЕ NULL )
		|
		|СГРУППИРОВАТЬ ПО
		|	АппаратыБезСоответствия.АппаратКлиента";
	
	Запрос.УстановитьПараметр("Владелец", Владелец);
	Запрос.УстановитьПараметр("ВладелецОрганизация", Справочники.Партнеры.НашеПредприятие);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Если ЗначениеЗаполнено(ВыборкаДетальныеЗаписи.АппаратКлиента)
			и (ЗначениеЗаполнено(ВыборкаДетальныеЗаписи.АппаратОрганизации)
			 или ЗначениеЗаполнено(ВыборкаДетальныеЗаписи.АппаратОрганизации2)) Тогда
			
			МенеджерЗаписи = РегистрыСведений.дпСоответствиеМатриц.СоздатьМенеджерЗаписи();
			МенеджерЗаписи.АппаратКлиента 		= ВыборкаДетальныеЗаписи.АппаратКлиента;
			Если ЗначениеЗаполнено(ВыборкаДетальныеЗаписи.АппаратОрганизации) Тогда
				МенеджерЗаписи.АппаратОрганизации 	= ВыборкаДетальныеЗаписи.АппаратОрганизации;
			Иначе
				МенеджерЗаписи.АппаратОрганизации 	= ВыборкаДетальныеЗаписи.АппаратОрганизации2;
			КонецЕсли;	
			МенеджерЗаписи.Записать();
			
			
		КонецЕсли;
	КонецЦикла;
	
	//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	

КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Если Владелец.Пустая() Тогда
		Результат = ОткрытьФормуМодально("Справочник.Партнеры.Форма.ФормаВыбора", Новый Структура("РежимВыбора", Истина));
		Если Результат <> Неопределено Тогда
			Владелец = Результат;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры
