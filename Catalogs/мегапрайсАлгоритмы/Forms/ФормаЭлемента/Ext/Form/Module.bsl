
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	//СтруктураПараметров = ПолучитьИзВременногоХранилища(Параметры.Адрес);

	Объект.ТекстАлгоритма = Параметры.ТекстАлгоритма;

КонецПроцедуры

&НаКлиенте
Процедура УстановитьВидимостьДиалогов()
	
	Элементы.ЗакладкаАлгоритм.Видимость = Объект.ИспользоватьАлгоритм;
	Элементы.ЗакладкаАвтозаменыПодстрок.Видимость = Объект.ИспользоватьЗамены;
	Элементы.ЗакладкаИсключенияИзИмпорта.Видимость = Объект.ИспользоватьФильтр;
	Элементы.ЗакладкаНазначениеГруппы.Видимость = Объект.ИспользоватьНазначениеГруппы;
	
КонецПроцедуры


&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	УстановитьВидимостьДиалогов();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриИзмененииОпций(Элемент)
	
	УстановитьВидимостьДиалогов();
	
КонецПроцедуры



//////////////////////////////////////////////////////////////////
//  Работа подсистемы АЛГОРИТМЫ

&НаСервере
Функция ПоместитьВоВременноеХранилищеНаСервере()
	
	Возврат ПоместитьВоВременноеХранилище(Объект.ПоискСоответствий.Выгрузить(), Новый УникальныйИдентификатор);
	
КонецФункции

&НаКлиенте
Процедура АлгоритмПроверить(Команда)
	
	Значение = АлгоритмЗначение;
	Выполнить(Объект.ТекстАлгоритма);
	АлгоритмРезультат = Значение;
	
КонецПроцедуры




&НаКлиенте
Процедура СложениеНаименования(Команда)
	
	Объект.ТекстАлгоритма = "Значение = Колонка1+" "+Колонка2;";
	
КонецПроцедуры

&НаКлиенте
Процедура ИгнорИмпортаСтроки(Команда)
	
	Объект.ТекстАлгоритма = "
	|Если Найти(Значение, ""Брак"") > 0 Тогда	
	|    Значение = Неопределено; 
    |КонецЕсли;";

КонецПроцедуры

&НаКлиенте
Процедура ДобавитьЛидирующийНули(Команда)
	
	Объект.ТекстАлгоритма = "Значение = Формат(Число(Значение),""ЧЦ=12; ЧН=0; ЧВН=; ЧГ=""); //размер числа 12 сивмолов";

КонецПроцедуры

&НаКлиенте
Процедура УбратьПервоеСлово(Команда)
	
	ТекстАлгоритма = "
	|ПервыйПробел = Найти(Значение,"" "");
	|Если ПервыйПробел  > 0 Тогда
	|	Значение = Прав(Значение,СтрДлина(Значение)-ПервыйПробел);
	|	Значение = СокрЛП(Значение);
	|КонецЕсли;";

	Объект.ТекстАлгоритма = ТекстАлгоритма;
	
КонецПроцедуры

Функция глРазложитьСтрокуВМассивПодстрок(Знач Стр, Разделитель = " ")

	МассивСтрок = Новый Массив();
	Если Разделитель = " " Тогда
		Стр = СокрЛП(Стр);
		Пока 1 = 1 Цикл
			Поз = Найти(Стр,Разделитель);
			
			Если Поз = 0 Тогда
				СтрокаВМассив = СокрЛП(Стр);

				МассивСтрок.Добавить(СтрокаВМассив);
				Возврат МассивСтрок;
			КонецЕсли;
			
			СтрокаВМассив = СокрЛП(Лев(Стр,Поз-1));
			
			МассивСтрок.Добавить(СтрокаВМассив);
			Стр = СокрЛ(Сред(Стр,Поз));
		КонецЦикла;
	Иначе
		ДлинаРазделителя = СтрДлина(Разделитель);
		Пока 1 = 1 Цикл
			Поз = Найти(Стр,Разделитель);
			
			Если Поз = 0 Тогда
				СтрокаВМассив = СокрЛП(Стр);

				МассивСтрок.Добавить(СтрокаВМассив);
				Возврат МассивСтрок;
			КонецЕсли;
			
			СтрокаВМассив = СокрЛП(Лев(Стр,Поз-1));

			МассивСтрок.Добавить(СтрокаВМассив);
			Стр = Сред(Стр,Поз+ДлинаРазделителя);
		КонецЦикла;
	КонецЕсли;
	
КонецФункции 

&НаКлиенте
Процедура АлгоритмПолучитьСловоПоПорядку(Команда)
	
	ТекстАлгоритма = "
	|МассивКлючевыхСлов = глРазложитьСтрокуВМассивПодстрок(Значение);
	|Значение = СокрЛП(МассивКлючевыхСлов.Получить(0)); //0 - первое слово, 1 - второе и так далее";
	
	//МассивКлючевыхСлов = глРазложитьСтрокуВМассивПодстрок(Значение);
	//Значение = СокрЛП(МассивКлючевыхСлов.Получить(0)); //0 - первое слово, 1 - второе и так далее";

	 Объект.ТекстАлгоритма = ТекстАлгоритма;
	
КонецПроцедуры

&НаКлиенте
Процедура УбратьДвойныеПробелы(Команда)
	
	ТекстАлгоритма = "
	|Значение = СтрЗаменить(Значение,"   "," ");
	|Значение = СтрЗаменить(Значение,"  "," ");";
	
	Объект.ТекстАлгоритма = ТекстАлгоритма;
	
КонецПроцедуры

&НаКлиенте
Процедура АлгоритмУбратьСимволыСтроки(Команда) 
	
	ТекстАлгоритма = "
	|Значение = СтрЗаменить(Значение,""-""," ");
	|Значение = СтрЗаменить(Значение,""_""," ");
	|Значение = СтрЗаменить(Значение,""(""," ");	
	|Значение = СтрЗаменить(Значение,"")""," ");
	|Значение = СтрЗаменить(Значение,""/""," ");
	|Значение = СтрЗаменить(Значение,""\""," ");
	|Значение = СтрЗаменить(Значение,""[""," ");	
	|Значение = СтрЗаменить(Значение,""]""," ");
	|Значение = СтрЗаменить(Значение,"".""," ");
	|Значение = СтрЗаменить(Значение,"":""," ");
	|Значение = СтрЗаменить(Значение,"",""," ");
	|Значение = СтрЗаменить(Значение,"";""," ");
	|Значение = СтрЗаменить(Значение,""""," ");
	|Значение = СтрЗаменить(Значение,""*""," ");
	|Значение = СтрЗаменить(Значение,""=""," ");
	|Значение = СтрЗаменить(Значение,""%""," ");
	|Значение = СтрЗаменить(Значение,"">""," ");
    |Значение = СтрЗаменить(Значение,""<""," ");
	|Значение = СтрЗаменить(Значение,""~""," ");	
	|Значение = СтрЗаменить(Значение," ","");
	|Значение = СокрЛП(Значение);	
	|Значение = ВРег(Значение);";
	
	Объект.ТекстАлгоритма = ТекстАлгоритма;
	
КонецПроцедуры


&НаКлиенте
Процедура УдалитьВсеПослеСкобки(Команда)
	
	ТекстАлгоритма = "
	|НайтиЧислоСимвола = Найти(Значение,""("");
	|Если НайтиЧислоСимвола  > 0 Тогда
	|	Значение = Лев(Значение,НайтиЧислоСимвола-1);
	|	Значение = СокрЛП(Значение);
	|КонецЕсли;";

	Объект.ТекстАлгоритма = ТекстАлгоритма;
	
КонецПроцедуры

&НаКлиенте
Процедура УбратьПереводСтроки(Команда)
	
	ТекстАлгоритма = "
	|Значение = СтрЗаменить(Значение,Символы.ПС," ");";

	Объект.ТекстАлгоритма = ТекстАлгоритма;
	
КонецПроцедуры




