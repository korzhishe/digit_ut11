#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ПередЗаписью(Отказ, Замещение)
	//ПРФТ++  Временно
	Возврат;
	
	Если ОбменДанными.Загрузка Или Не ПроведениеСервер.РассчитыватьИзменения(ДополнительныеСвойства)
		Или Не Константы.КонтролироватьТоварыОрганизацийПриОтменеПриходов.Получить()
	Тогда
		Возврат;
	КонецЕсли;

	СтруктураВременныеТаблицы = ДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы;
	БлокироватьДляИзменения = Истина;

	// Текущее состояние набора помещается во временную таблицу,
	// чтобы при записи получить изменение нового набора относительно текущего.
	Запрос = Новый Запрос("
		|ВЫБРАТЬ
		|	Таблица.Номенклатура   КАК Номенклатура,
		|	Таблица.Характеристика КАК Характеристика,
		|	Таблица.Склад          КАК Склад,
		|	Таблица.Организация    КАК Организация,
		|	Таблица.ВидЗапасов     КАК ВидЗапасов,
		|	Таблица.НомерГТД       КАК НомерГТД,
		|	(ВЫБОР КОГДА Таблица.Количество < 0
		|		ТОГДА -Таблица.Количество
		|		ИНАЧЕ Таблица.Количество КОНЕЦ) КАК КоличествоПередЗаписью
		|ПОМЕСТИТЬ ДвиженияТоварыОрганизацийПередЗаписью
		|ИЗ
		|	РегистрНакопления.ТоварыОрганизаций КАК Таблица
		|ГДЕ
		|	Таблица.Регистратор = &Регистратор
		|	И НЕ &ЭтоНовый
			// Интересует только положительный приход или сторнирующий расход
		|	И (Таблица.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) И Таблица.Количество > 0
		|		ИЛИ Таблица.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) И Таблица.Количество < 0)
		|");
	Запрос.УстановитьПараметр("Регистратор", Отбор.Регистратор.Значение);
	Запрос.УстановитьПараметр("ЭтоНовый", ДополнительныеСвойства.ЭтоНовый);
	Запрос.МенеджерВременныхТаблиц = СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
	Запрос.Выполнить();
КонецПроцедуры

Процедура ПриЗаписи(Отказ, Замещение)
	//ПРФТ++  Временно
	Возврат;
	
	Если ОбменДанными.Загрузка Или Не ПроведениеСервер.РассчитыватьИзменения(ДополнительныеСвойства)
		Или Не Константы.КонтролироватьТоварыОрганизацийПриОтменеПриходов.Получить()
	Тогда
		Возврат;
	КонецЕсли;

	СтруктураВременныеТаблицы = ДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы;
	// Рассчитывается изменение нового набора относительно текущего с учетом накопленных изменений
	// и помещается во временную таблицу.
	Запрос = Новый Запрос("
		|ВЫБРАТЬ
		|	ТаблицаИзменений.Номенклатура                КАК Номенклатура,
		|	ТаблицаИзменений.Характеристика              КАК Характеристика,
		|	ТаблицаИзменений.Склад                       КАК Склад,
		|	ТаблицаИзменений.Организация                 КАК Организация,
		|	ТаблицаИзменений.ВидЗапасов                  КАК ВидЗапасов,
		|	ТаблицаИзменений.НомерГТД                    КАК НомерГТД,
		|	СУММА(ТаблицаИзменений.КоличествоИзменение)  КАК КоличествоИзменение
		|ПОМЕСТИТЬ ДвиженияТоварыОрганизацийИзменение
		|ИЗ (
		|	ВЫБРАТЬ
		|		Таблица.Номенклатура   КАК Номенклатура,
		|		Таблица.Характеристика КАК Характеристика,
		|		Таблица.Склад          КАК Склад,
		|		Таблица.Организация    КАК Организация,
		|		Таблица.ВидЗапасов     КАК ВидЗапасов,
		|		Таблица.НомерГТД       КАК НомерГТД,
		|		Таблица.КоличествоПередЗаписью КАК КоличествоИзменение
		|	ИЗ
		|		ДвиженияТоварыОрганизацийПередЗаписью КАК Таблица
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	ВЫБРАТЬ
		|		Таблица.Номенклатура   КАК Номенклатура,
		|		Таблица.Характеристика КАК Характеристика,
		|		Таблица.Склад          КАК Склад,
		|		Таблица.Организация    КАК Организация,
		|		Таблица.ВидЗапасов     КАК ВидЗапасов,
		|		Таблица.НомерГТД       КАК НомерГТД,
		|		(ВЫБОР КОГДА Таблица.Количество < 0
		|			ТОГДА Таблица.Количество
		|			ИНАЧЕ -Таблица.Количество КОНЕЦ) КАК КоличествоИзменение
		|	ИЗ
		|		РегистрНакопления.ТоварыОрганизаций КАК Таблица
		|	ГДЕ
		|		Таблица.Регистратор = &Регистратор
				// Интересует только положительный приход или сторнирующий расход
		|		И (Таблица.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) И Таблица.Количество > 0
		|			ИЛИ Таблица.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) И Таблица.Количество < 0)
		|) КАК ТаблицаИзменений
		|
		|СГРУППИРОВАТЬ ПО
		|	ТаблицаИзменений.Номенклатура,
		|	ТаблицаИзменений.Характеристика,
		|	ТаблицаИзменений.Склад,
		|	ТаблицаИзменений.Организация,
		|	ТаблицаИзменений.ВидЗапасов,
		|	ТаблицаИзменений.НомерГТД
		|
		|ИМЕЮЩИЕ
		|	СУММА(ТаблицаИзменений.КоличествоИзменение) > 0
		|;
		|УНИЧТОЖИТЬ ДвиженияТоварыОрганизацийПередЗаписью
		|");
	Запрос.УстановитьПараметр("Регистратор", Отбор.Регистратор.Значение);
	Запрос.МенеджерВременныхТаблиц = СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
	Выборка = Запрос.ВыполнитьПакет()[0].Выбрать();
	Выборка.Следующий();
	
	// Новые изменения были помещены во временную таблицу.
	// Добавляется информация о ее существовании и наличии в ней записей об изменении.
	СтруктураВременныеТаблицы.Вставить("ДвиженияТоварыОрганизацийИзменение", Выборка.Количество > 0);
КонецПроцедуры

#КонецОбласти

#КонецЕсли