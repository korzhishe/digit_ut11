&НаСервере
Функция СобратьСписокИменАтрибута()
	СписокОтвета=Новый СписокЗначений();
	СписокОтвета.Добавить("");
	СписокОтвета.Добавить("Код");

	Для Каждого Реквизит из Метаданные.Справочники.Номенклатура.Реквизиты цикл
		СписокОтвета.Добавить(Реквизит.Имя);
	КонецЦикла;	
	Возврат СписокОтвета;
КонецФункции

&НаКлиенте
Процедура ИмяАтрибутаАвтоПодбор(Элемент, Текст, ДанныеВыбора, Параметры, Ожидание, СтандартнаяОбработка)
    СтандартнаяОбработка = Ложь;
    Список = Новый СписокЗначений();
    Список.ЗагрузитьЗначения(СобратьСписокИменАтрибута().ВыгрузитьЗначения());
    ДанныеВыбора=Список;
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	Попытка
	Ссылка=Объект.Ссылка;
	Если Предопределенный(Ссылка) тогда
		Сообщить ("Это предопределенный элемент обмена!" +Символы.ПС + " " + Символы.ПС + "Для обмена с ТСД создайте новый элемент");
		Отказ=Истина
	КонецЕсли;
	ЭтаФорма.Прочитать();
	ОбновитьОтображениеДанных();	
	Исключение
	КонецПопытки;
	
	
	
КонецПроцедуры
	
&НаСервере
Функция Предопределенный(Ссылка)
	План= Ссылка.ПолучитьОбъект();
	Если  План.ПометкаУдаления=Истина тогда
		Возврат Ложь;
	КонецЕсли;
	Попытка
		План.ПометкаУдаления=Истина;
		План.Записать();
		Если  План.ПометкаУдаления=Ложь тогда
			Возврат Истина;
		Иначе
		План.ПометкаУдаления=Ложь;
		План.Записать();
		
		КонецЕсли;
		Возврат Ложь;
	Исключение
		Возврат Истина;
	КонецПопытки;
КонецФункции

&НаКлиенте
Процедура КаталогВыгрузкиФайлаПечатиНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	Диалог = новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.ВыборКаталога);
	Диалог.Выбрать();
	
	Если Диалог.Каталог <> "" Тогда
		Если Прав(Диалог.Каталог, 1) <> "\" Тогда
		Объект.КаталогВыгрузкиФайлаПечати = Диалог.Каталог+"\";
		Иначе
		Объект.КаталогВыгрузкиФайлаПечати = Диалог.Каталог;
		КонецЕсли;
	КонецЕсли;

	
КонецПроцедуры

&НаКлиенте
Процедура ПечатьТипОперацииНачалоВыбораИзСписка(Элемент, СтандартнаяОбработка)
	
	СписокВыбораОпераций = Новый СписокЗначений;
	СписокВыбораОпераций.Добавить("Печать этикетки");
	СписокВыбораОпераций.Добавить("Печать документа");
	СписокВыбораОпераций.Добавить("Печать упаковочного листа");
	
	Элемент.СписокВыбора = СписокВыбораОпераций;

КонецПроцедуры

&НаКлиенте
Процедура ПечатьИмяПринтераНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
		
	
КонецПроцедуры


&НаКлиенте
Процедура ПечатьИмяПринтераОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)

	
КонецПроцедуры


&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	//Попытка
	//	СписокПринтеров = Новый СписокЗначений;
	//	PrintCOM = Новый COMОбъект ("WScript.Network"); 
	//	PrintList = PrintCOM.EnumPrinterConnections(); 
	//	i = 0;
	//	Пока i < PrintList.Count()-1 Цикл 
	//		СписокПринтеров.Добавить(PrintList.Item(i+1));
	//		i = i + 2;
	//	КонецЦикла; 
	//Исключение
	//Конецпопытки;
	//	
	//	Попытка
	//	ВремФайлСкрипт = ПолучитьИмяВременногоФайла(".bat");
	//	ВремФайлСписок = ПолучитьИмяВременногоФайла(".txt");
	//	ДвоичныеДанныеСкрипта = РеквизитФормыВЗначение("Объект").ПолучитьМакет("GetPrinters");
	//	ДвоичныеДанныеСкрипта.Записать(ВремФайлСкрипт);
	//	Script = Новый COMОбъект("Wscript.Shell");
	//	Script.Run(ВремФайлСкрипт+" "+ВремФайлСписок, 0, Истина);
	//	//ЗапуститьПриложение(ВремФайлСкрипт+" "+ВремФайлСписок,,Истина);
	//	ЧтениеТекста = Новый ЧтениеТекста(ВремФайлСписок, КодировкаТекста.OEM);
	//	ОтветСкрипта = ЧтениеТекста.Прочитать();
	//	Для Н = 4 По СтрЧислоСтрок(ОтветСкрипта) Цикл
	//		Если СокрЛП(СтрПолучитьСтроку(ОтветСкрипта, Н)) <> "" Тогда
	//			Если  СписокПринтеров.НайтиПоЗначению( СокрЛП(СтрПолучитьСтроку(ОтветСкрипта, Н))) = Неопределено Тогда
	//				СписокПринтеров.Добавить(СокрЛП(СтрПолучитьСтроку(ОтветСкрипта, Н)), СокрЛП(СтрПолучитьСтроку(ОтветСкрипта, Н)));
	//			КонецЕсли;
	//		КонецЕсли;
	//	КонецЦикла;
	//	ЧтениеТекста.Закрыть();
	//	
	//	УдалитьФайлы(ВремФайлСкрипт);
	//	УдалитьФайлы(ВремФайлСписок);
	//	Элементы.ПечатьИмяПринтера.СписокВыбора.ЗагрузитьЗначения(СписокПринтеров.ВыгрузитьЗначения());
	//Исключение
	//КонецПопытки;	
	//	
	//Если Элементы.ПечатьИмяПринтера.СписокВыбора.Количество() = 0 Тогда
	//	Сообщить("Не удалось сформировать список принтеров" , СтатусСообщения.Важное);
	//КонецЕсли;
	
	
КонецПроцедуры


&НаКлиенте
Процедура ПечатьИмяШаблонаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	Диалог = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
	Диалог.Фильтр = "Шаблоны (*.sctmpl)|*.sctmpl;|";
	Диалог.Выбрать();
		
	ИмяФайла = СтрЗаменить(Диалог.ПолноеИмяФайла, Диалог.Каталог, "");
	
	Элементы.Печать.ТекущиеДанные.ИмяШаблона = СокрЛП(ИмяФайла);

КонецПроцедуры
&НаКлиенте
Процедура ЗаполнитьАтрибутыЕГАИС(Команда)
	
	Объект.ИмяАтрибута5 = "ПроизводительИмпортерДляДекларацийАлко";
	Объект.ИмяАтрибута7 = "ОбъемДАЛ";
	Объект.ИмяАтрибута8 = "Крепость";
	Объект.ИмяАтрибута9 = "ВидАлкогольнойПродукции";

КонецПроцедуры



&НаКлиенте
Процедура ПечатьБейджей(Команда)
	
	Таб=ПолучитьМакетНаСервере();
	
	Таб.Показать("Бейджи");

КонецПроцедуры

&НаСервере
Функция ПолучитьМакетНаСервере()

ТекКолонка = 1;
	ТекСтрока  = 1;

	Таб                     = Новый ТабличныйДокумент;
	Таб.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_Пользователи"+СокрЛП(ИмяКомпьютера());
	Макет = РеквизитФормыВЗначение("Объект").ПолучитьМакет("Бейджи");
	ЭтикеткаОбласть         = Макет.ПолучитьОбласть(1,1,4,2);
	ОбластьПользователя     = ЭтикеткаОбласть.Области.Пользователь;
	ОбластьШтрихкод         = ЭтикеткаОбласть.Области.ОбластьШтрихкод;
	РисунокШтрихкод         = ЭтикеткаОбласть.Рисунки.Штрихкод;
//	ОбластьДоп             = ЭтикеткаОбласть.Области.Дополнительно;
	
	ВысотаЭтикетки=50;
	ШиринаЭтикетки=90;
	
	ОбластьПользователя.ВысотаСтроки = ВысотаЭтикетки * 2.65 * 0.3;
	ОбластьШтрихкод.ВысотаСтроки     = ВысотаЭтикетки * 2.65 * 0.5;
	РисунокШтрихкод.Расположить(ОбластьШтрихкод);
	//ОбластьДоп.ВысотаСтроки         = ВысотаЭтикетки * 2.65 * 0.2;
	
	ЭтикеткаОбласть.Область(2,2,2,2).ШиринаКолонки = ШиринаЭтикетки*0.53;
	
	ОбластьГраницаСправа      = Макет.ПолучитьОбласть(2,4,4,4);
	ОбластьНизГраницыСправа   = Макет.ПолучитьОбласть(5,4,5,4);
	ОбластьГраницаСнизу       = Макет.ПолучитьОбласть(6,2,6,2);
	ОбластьНачалоГраницыСнизу = Макет.ПолучитьОбласть(6,1,6,1);
	
	ОбластьГраницаСправа.Рисунки.ГраницаСправа.Высота = ВысотаЭтикетки*1.09;
	ОбластьГраницаСнизу.Рисунки.ГраницаСнизу.Ширина   = ШиринаЭтикетки*0.7;
	
	ОбластьГраницаСправа.Область(1,1,1,1).ВысотаСтроки = ВысотаЭтикетки*2.65;
	ОбластьГраницаСнизу.Область(1,1,1,1).ШиринаКолонки = ШиринаЭтикетки*0.53;
	
	ВсегоСтрок        = 5;
	КоличествоКолонок = 2;
	
	ВсегоКолонок = КоличествоКолонок;
	Если ВсегоКолонок > 1 Тогда
		ВсегоКолонок = ВсегоКолонок+ВсегоКолонок - 1; //добавляем разделители колонок.
	КонецЕсли;

	ВывелиХотяБыОдинШтрихКод = Ложь;
	Для Каждого СтрокаИзСписка Из Объект.ПользователиТСД Цикл
				
		КоличествоМиллиметровВПикселе = 0.5;

		ПараметрыШтрихкода = Новый Структура;
		ПараметрыШтрихкода.Вставить("Ширина",          Окр(ЭтикеткаОбласть.Рисунки.Штрихкод.Ширина / КоличествоМиллиметровВПикселе));
		ПараметрыШтрихкода.Вставить("Высота",          Окр(ЭтикеткаОбласть.Рисунки.Штрихкод.Высота / КоличествоМиллиметровВПикселе));
		ПараметрыШтрихкода.Вставить("Штрихкод",        СокрЛП(СтрокаИзСписка.Логин));
		ПараметрыШтрихкода.Вставить("ТипКода",         4); // Code128
		ПараметрыШтрихкода.Вставить("ОтображатьТекст", Ложь);
		ПараметрыШтрихкода.Вставить("РазмерШрифта",    6);
		
		ЭтикеткаОбласть.Рисунки.Штрихкод.Картинка = МенеджерОборудованияВызовСервера.ПолучитьКартинкуШтрихкода(ПараметрыШтрихкода);
		
				
		
		
		ОбластьПользователя.Текст        = "" + СтрокаИзСписка.Пользователь;
		
			Если ТекКолонка>ВсегоКолонок Тогда //новая строка.
				Если ВсегоСтрок<>1 Тогда //выведем разделитель.
					Для Сч = 1 по ВсегоКолонок Цикл
						Если Сч = 1 Тогда
							Таб.Вывести(ОбластьНачалоГраницыСнизу);
						Иначе
							Таб.Присоединить(ОбластьНачалоГраницыСнизу);
						КонецЕсли;
						Таб.Присоединить(ОбластьГраницаСнизу);
						Таб.Присоединить(ОбластьНизГраницыСправа);
						Сч = Сч + 1;
					КонецЦикла;
					ТекСтрока = ТекСтрока + 1;
				КонецЕсли;
				Если ТекСтрока/ВсегоСтрок = Цел(ТекСтрока/ВсегоСтрок) Тогда
					Таб.ВывестиГоризонтальныйРазделительСтраниц();
				КонецЕсли;
				ТекСтрока = ТекСтрока + 1;
				ТекКолонка=1;
			КонецЕсли;
			Если ТекКолонка<>1 Тогда //выведем разделитель.
				Таб.Присоединить(ОбластьГраницаСправа);
				ТекКолонка = ТекКолонка + 1;
				Таб.Присоединить(ЭтикеткаОбласть);
				ТекКолонка = ТекКолонка + 1;
			Иначе
				Таб.Вывести(ЭтикеткаОбласть);
				ТекКолонка = ТекКолонка + 1;
			КонецЕсли;

			ВывелиХотяБыОдинШтрихКод = Истина;
			КонецЦикла;

	Если ВывелиХотяБыОдинШтрихКод Тогда
					Таб.Защита              = Ложь;
			Таб.ТолькоПросмотр      = Истина;
			Таб.ОтображатьСетку     = Ложь;
			Таб.ОтображатьЗаголовки = Ложь;
			Возврат Таб;
			
	КонецЕсли;

КонецФункции

&НаКлиенте
Процедура ДобавитьПринтерВручную(Команда)
	
	СтрокаПринтера = "";
	ОписаниеОповещенияЗавершенияВводаСтроки = Новый ОписаниеОповещения("ЗавершениеВВодаСтрокиПринтераВручную", ЭтаФорма);
	ПоказатьВводСтроки(ОписаниеОповещенияЗавершенияВводаСтроки, СтрокаПринтера, "Введите путь к принтеру вручную",,Ложь);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗавершениеВВодаСтрокиПринтераВручную(Ответ, ДополнительныеПараметры) Экспорт
	
	СтрокаПринтера = Объект.Печать.Добавить();
	СтрокаПринтера.ИмяПринтера = Ответ;
	
	ДополнительныеПараметрыПередачи = Новый Структура("Строка", СтрокаПринтера);
	ОписаниеОповещенияОВыбореИзСписка = Новый ОписаниеОповещения("ЗакрытиеВыбораИзСпискаТипаПечати", ЭтаФорма, ДополнительныеПараметрыПередачи);
	
	СписокВыбораОпераций = Новый СписокЗначений;
	СписокВыбораОпераций.Добавить("Печать этикетки");
	СписокВыбораОпераций.Добавить("Печать документа");
	СписокВыбораОпераций.Добавить("Печать упаковочного листа");
	ПоказатьВыборИзСписка(ОписаниеОповещенияОВыбореИзСписка, СписокВыбораОпераций, Элементы.Печать.ПодчиненныеЭлементы.ПечатьТипОперации, 0); 	
	
КонецПроцедуры

&НаКлиенте
Процедура ЗакрытиеВыбораИзСпискаТипаПечати(Ответ, ДополнительныеПараметры) Экспорт
	
	ДополнительныеПараметры.Строка.ТипОперации = Ответ;
	
КонецПроцедуры