
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("Номенклатура") Тогда
		Запись.Номенклатура = Параметры.Номенклатура;
	КонецЕсли;
	
	УстановитьОтбор();

КонецПроцедуры

&НаСервере
Процедура ПриЗаписиНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
		
КонецПроцедуры

&НаСервере
Процедура АналогНоменклатураПриИзмененииСервер()
	
	Запись.АртикулАналога = Запись.АналогНоменклатура.Артикул;
	
КонецПроцедуры

&НаКлиенте
Процедура АналогНоменклатураПриИзменении(Элемент)
	
	АналогНоменклатураПриИзмененииСервер();
	
КонецПроцедуры


&НаСервере
Процедура УстановитьОтбор()
	
	Если НЕ ЗначениеЗаполнено(Запись.Номенклатура) Тогда
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(ТекущиеАналоги, "Номенклатура", 
	    "", ВидСравненияКомпоновкиДанных.Равно, , Ложь);
		Возврат;
	КонецЕсли;
	
	ОтборНоменклатура = Запись.Номенклатура;
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(ТекущиеАналоги, "Номенклатура", 
	Запись.Номенклатура, ВидСравненияКомпоновкиДанных.Равно, , Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура НоменклатураПриИзменении(Элемент)
	
	УстановитьОтбор();

КонецПроцедуры

&НаСервере
Процедура УдалитьАналоги(ТекущиеДанные)
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	мегапрайсВзаимозаменяемостьНоменклатуры.АналогНоменклатура КАК АналогНоменклатура,
	|	мегапрайсВзаимозаменяемостьНоменклатуры.Номенклатура КАК Номенклатура,
	|	мегапрайсВзаимозаменяемостьНоменклатуры.АртикулАналога КАК АналогАртикул,
	|	мегапрайсВзаимозаменяемостьНоменклатуры.Главный
	|ИЗ
	|	РегистрСведений.мегапрайсВзаимозаменяемостьНоменклатуры КАК мегапрайсВзаимозаменяемостьНоменклатуры
	|ГДЕ
	|	мегапрайсВзаимозаменяемостьНоменклатуры.Номенклатура = &ВыбНоменклатура";
	
	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапроса;
	Запрос.УстановитьПараметр("ВыбНоменклатура", Запись.Номенклатура);
	
	РезультатЗапроса = Запрос.Выполнить();
	ТаблицаРезультат = РезультатЗапроса.Выгрузить();
	
	НаборЗаписей = РегистрыСведений.мегапрайсВзаимозаменяемостьНоменклатуры.СоздатьНаборЗаписей(); 
	НаборЗаписей.Отбор.Номенклатура.Установить(ТекущиеДанные.АналогНоменклатура);
	НаборЗаписей.Записать(Истина);	
		
	Выборка = РезультатЗапроса.Выбрать();
	Пока Выборка.Следующий() Цикл		
		
		НаборЗаписей = РегистрыСведений.мегапрайсВзаимозаменяемостьНоменклатуры.СоздатьНаборЗаписей(); 
		НаборЗаписей.Отбор.Номенклатура.Установить(Выборка.АналогНоменклатура);
		НаборЗаписей.Отбор.АналогНоменклатура.Установить(ТекущиеДанные.АналогНоменклатура);
		НаборЗаписей.Записать(Истина);	
		
		//Для Каждого ВыборкаЗапись Из ТаблицаРезультат Цикл
		//	
		//	НаборЗаписей = РегистрыСведений.мегапрайсВзаимозаменяемостьНоменклатуры.СоздатьНаборЗаписей(); 
		//	НаборЗаписей.Отбор.Номенклатура.Установить(Выборка.АналогНоменклатура);
		//	НаборЗаписей.Отбор.АналогНоменклатура.Установить(ВыборкаЗапись.АналогНоменклатура);
		//	НаборЗаписей.Записать(Истина);			
		//КонецЦикла;		
	КонецЦикла;	

КонецПроцедуры

&НаКлиенте
Процедура ТекущиеАналогиПередУдалением(Элемент, Отказ)
	
	ТекущиеДанные = Элементы.ТекущиеАналоги.ТекущиеДанные;

	УдалитьАналоги(ТекущиеДанные);

КонецПроцедуры




&НаСервере
Процедура СозданиеАналогов(Значение)
	
	ЭлементПеретаскивания = Значение;
	
	Если ЭлементПеретаскивания = Запись.Номенклатура Тогда
		Сообщить("Нельзя выбирать самого себя");
		Возврат;
	КонецЕсли;

	НаборЗаписей = РегистрыСведений.мегапрайсВзаимозаменяемостьНоменклатуры.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Номенклатура.Установить(Запись.Номенклатура);
	НаборЗаписей.Отбор.АналогНоменклатура.Установить(ЭлементПеретаскивания);
	НаборЗаписей.Прочитать();
	Если НаборЗаписей.Количество() = 0 Тогда
		НоваяЗапись = НаборЗаписей.Добавить();
	Иначе
		НоваяЗапись = НаборЗаписей.Получить(0);
	КонецЕсли;	
	НоваяЗапись.Номенклатура       = Запись.Номенклатура;
	НоваяЗапись.АртикулАналога     = ЭлементПеретаскивания.Артикул;
	НоваяЗапись.АналогНоменклатура = ЭлементПеретаскивания;
	НоваяЗапись.Главный            = Запись.Главный;
	НаборЗаписей.Записать(Истина);	
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	мегапрайсВзаимозаменяемостьНоменклатуры.АналогНоменклатура КАК АналогНоменклатура,
	|	мегапрайсВзаимозаменяемостьНоменклатуры.Номенклатура КАК Номенклатура,
	|	мегапрайсВзаимозаменяемостьНоменклатуры.АртикулАналога КАК АналогАртикул,
	|	мегапрайсВзаимозаменяемостьНоменклатуры.Главный
	|ИЗ
	|	РегистрСведений.мегапрайсВзаимозаменяемостьНоменклатуры КАК мегапрайсВзаимозаменяемостьНоменклатуры
	|ГДЕ
	|	мегапрайсВзаимозаменяемостьНоменклатуры.Номенклатура = &ВыбНоменклатура";
	
	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапроса;
	Запрос.УстановитьПараметр("ВыбНоменклатура", Запись.Номенклатура);
	
	РезультатЗапроса = Запрос.Выполнить();
	ТаблицаРезультат = РезультатЗапроса.Выгрузить();
	
	Выборка = РезультатЗапроса.Выбрать();
	Пока Выборка.Следующий() Цикл		
		
		НаборЗаписей = РегистрыСведений.мегапрайсВзаимозаменяемостьНоменклатуры.СоздатьНаборЗаписей(); 
		НаборЗаписей.Отбор.Номенклатура.Установить(Выборка.АналогНоменклатура);
		НаборЗаписей.Записать(Истина);
		
		НаборЗаписей = РегистрыСведений.мегапрайсВзаимозаменяемостьНоменклатуры.СоздатьНаборЗаписей(); 
		НаборЗаписей.Отбор.Номенклатура.Установить(Выборка.АналогНоменклатура);
		
		НоваяЗапись = НаборЗаписей.Добавить();
		НоваяЗапись.Номенклатура       = Выборка.АналогНоменклатура;
		НоваяЗапись.АртикулАналога     = Запись.Номенклатура.Артикул;
		НоваяЗапись.АналогНоменклатура = Запись.Номенклатура;
		Если Запись.Главный И НоваяЗапись.Главный Тогда 
			НоваяЗапись.Главный = Ложь;
		КонецЕсли;	
		НаборЗаписей.Записать(Истина);
		
		Для Каждого ВыборкаЗапись Из ТаблицаРезультат Цикл
			Если Выборка.АналогНоменклатура = ВыборкаЗапись.АналогНоменклатура Тогда
				Продолжить;
			КонецЕсли;
			
			НоваяЗапись = НаборЗаписей.Добавить();
			НоваяЗапись.Номенклатура       = Выборка.АналогНоменклатура;
			НоваяЗапись.АртикулАналога     = ВыборкаЗапись.АналогАртикул;
			НоваяЗапись.АналогНоменклатура = ВыборкаЗапись.АналогНоменклатура;
			Если Запись.Главный И НоваяЗапись.Главный Тогда 
				НоваяЗапись.Главный = Ложь;
			КонецЕсли;			
		КонецЦикла;		
		
		НаборЗаписей.Записать(Истина);


	КонецЦикла;	


	//ПараметрыОтбора = Новый Структура();
	//ПараметрыОтбора.Вставить("Номенклатура",Запись.Номенклатура);	
	//НаборЗаписей = РегистрыСведений.мегапрайсВзаимозаменяемостьНоменклатуры.СоздатьНаборЗаписей();

	//Выборка = РегистрыСведений.мегапрайсВзаимозаменяемостьНоменклатуры.Выбрать(ПараметрыОтбора);
	//Пока Выборка.Следующий() Цикл
	//	
	//	НаборЗаписей.Отбор.Номенклатура.Установить(Выборка.АналогНоменклатура);	
	//	НаборЗаписей.Отбор.АналогНоменклатура.Установить(Запись.Номенклатура);	
	//	НаборЗаписей.Прочитать();
	//	Если НаборЗаписей.Количество() = 0 Тогда
	//		НоваяЗапись = НаборЗаписей.Добавить();
	//	Иначе
	//		НоваяЗапись = НаборЗаписей.Получить(0);
	//	КонецЕсли;
	//	
	//	НоваяЗапись.Номенклатура       = Выборка.АналогНоменклатура;
	//	НоваяЗапись.АртикулАналога     = Запись.Номенклатура.Артикул;
	//	НоваяЗапись.АналогНоменклатура = Запись.Номенклатура;
	//	Если Запись.Главный И НоваяЗапись.Главный Тогда 
	//		НоваяЗапись.Главный = Ложь;
	//	КонецЕсли;
	//	
	//КонецЦикла;    

	//НаборЗаписей.Записать(Истина);
		
КонецПроцедуры


&НаКлиенте
Процедура ТекущиеАналогиПеретаскивание(Элемент, ПараметрыПеретаскивания, СтандартнаяОбработка, Строка, Поле)
	
	ЗначениеПеретаскивания = ПараметрыПеретаскивания.Значение[0];
	
	Если ТипЗнч(ЗначениеПеретаскивания) <> Тип("СправочникСсылка.Номенклатура") Тогда
		Сообщить("Перетаскивайте товар а не артикул");
		Возврат;		
	КонецЕсли;	
	
	СозданиеАналогов(ЗначениеПеретаскивания);

	Элементы.ТекущиеАналоги.Обновить();
	
КонецПроцедуры

&НаКлиенте
Процедура ПоискАналоговВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	ТекущиеДанные = Элементы.ПоискАналогов.ТекущиеДанные;		
	Если ТекущиеДанные.ЭтоГруппа Тогда
		Возврат;
	КонецЕсли;
	
	СтандартнаяОбработка = Ложь;
	
	ЗначениеПеретаскивания = ТекущиеДанные.Ссылка;
	СозданиеАналогов(ЗначениеПеретаскивания);

	Элементы.ТекущиеАналоги.Обновить();

КонецПроцедуры

&НаКлиенте
Процедура Переиндексировать(Команда)
	
КонецПроцедуры



